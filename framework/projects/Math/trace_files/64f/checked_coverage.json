{"org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer": {"org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes": [322, 323], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial": [159, 185, 190, 191, 192, 193, 194, 212, 217, 219, 220, 221, 222, 225, 240, 250, 333, 334, 335, 336, 337, 338, 341, 342, 347], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned": [159, 185, 190, 191, 192, 193, 194, 212, 217, 219, 220, 221, 222, 225, 240, 250, 333, 334, 335, 336, 337, 338, 341, 342, 347], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting": [159, 185, 190, 191, 192, 193, 194, 212, 217, 219, 220, 221, 222, 225, 250, 268, 269, 270, 272, 282, 284, 302, 307, 308, 309, 310, 311, 313, 333, 334, 335, 336, 337, 338, 341, 342, 347], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess": [159, 185, 190, 191, 192, 193, 194, 212, 217, 219, 220, 221, 222, 225, 333, 334, 335, 336, 337, 338, 341, 342, 347], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError": [159, 185, 190, 191, 192, 193, 194, 212, 217, 219, 220, 221, 222, 225, 333, 334, 335, 336, 337, 338, 341, 342, 347], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted": [159, 185, 190, 191, 192, 193, 194, 212, 217, 219, 220, 221, 222, 225, 333, 334, 335, 336, 337, 338, 341, 342, 347], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError": [159, 185, 190, 191, 192, 193, 194, 212, 217, 219, 220, 221, 222, 225, 333, 334, 335, 336, 337, 338, 341, 342, 347], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath303": [159, 185, 190, 191, 192, 193, 194, 212, 217, 219, 220, 221, 222, 225, 333, 334, 335, 336, 337, 338, 341, 342, 347], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304": [159, 185, 190, 191, 192, 193, 194, 212, 217, 219, 220, 221, 222, 225, 333, 334, 335, 336, 337, 338, 341, 342, 347], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372": [159, 185, 190, 191, 192, 193, 194, 212, 217, 219, 220, 221, 222, 225, 240, 250, 333, 334, 335, 336, 337, 338, 341, 342, 347]}, "org.apache.commons.math.optimization.fitting.HarmonicFunction": {"org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess": [43, 44, 45, 50, 62, 69, 76], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError": [43, 44, 45, 50, 62, 69, 76], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted": [43, 44, 45, 50, 62, 69, 76], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError": [43, 44, 45, 50, 62, 69, 76]}, "org.apache.commons.math.optimization.fitting.HarmonicFitter": {"org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess": [60, 61, 71, 100, 101], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError": [47, 48, 71, 83, 92, 100, 101], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted": [47, 48, 71, 83, 92, 100, 101], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError": [47, 48, 71, 83, 92, 100, 101]}, "org.apache.commons.math.linear.BlockRealMatrix": {"org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial": [127, 150, 151, 154, 155, 157, 162, 207, 208, 209, 210, 213, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 240, 250, 636, 639, 640, 641, 644, 648, 658, 1346, 1352, 1365, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1387, 1388, 1390, 1395], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned": [127, 150, 151, 154, 155, 157, 162, 207, 208, 209, 210, 213, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 240, 250, 636, 639, 640, 641, 644, 648, 658, 1346, 1352, 1365, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1384, 1385, 1387, 1390, 1395]}, "org.apache.commons.math.optimization.fitting.CurveFitter": {"org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess": [43, 55, 56, 83, 131, 132, 134, 141, 145], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError": [43, 55, 56, 83, 131, 132, 134, 141, 145], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted": [43, 55, 56, 83, 131, 132, 134, 141, 145], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError": [43, 55, 56, 83, 131, 132, 134, 141, 145], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath303": [43, 55, 56, 70, 83, 131, 132, 134, 141, 145], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304": [43, 55, 56, 70, 83, 131, 132, 134, 141, 145], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372": [43, 55, 56, 70, 83, 131, 132, 134, 141, 145]}, "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer": {"org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial": [172, 173, 174, 175, 176, 177, 191, 201, 212, 223, 236, 245, 246, 247, 248, 249, 250, 255, 256, 259, 260, 265, 269, 272, 273, 279, 280, 283, 286, 287, 288, 291, 295, 296, 297, 301, 302, 303, 305, 308, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 327, 329, 330, 331, 335, 336, 340, 343, 344, 345, 347, 356, 359, 360, 361, 362, 363, 364, 365, 367, 374, 378, 379, 380, 385, 386, 387, 388, 389, 390, 393, 394, 395, 397, 398, 399, 400, 404, 407, 415, 416, 421, 423, 424, 425, 426, 427, 429, 430, 433, 453, 454, 507, 508, 510, 513, 514, 515, 516, 519, 524, 525, 526, 527, 529, 531, 532, 533, 534, 800, 801, 802, 803, 804, 805, 807, 811, 815, 816, 817, 818, 819, 820, 826, 827, 828, 831, 835, 837, 840, 841, 842, 843, 846, 847, 850, 863, 873, 874, 875, 876, 877, 879, 880, 881], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned": [172, 173, 174, 175, 176, 177, 191, 201, 212, 223, 236, 245, 246, 247, 248, 249, 250, 255, 256, 257, 259, 260, 265, 269, 272, 273, 279, 280, 283, 286, 287, 288, 291, 295, 296, 297, 301, 302, 303, 305, 308, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 327, 335, 336, 340, 343, 344, 345, 347, 349, 351, 353, 356, 359, 360, 361, 362, 363, 364, 365, 367, 374, 378, 379, 380, 385, 386, 387, 388, 389, 390, 393, 394, 395, 397, 398, 399, 400, 401, 404, 407, 408, 413, 415, 416, 421, 423, 424, 425, 426, 427, 429, 430, 433, 441, 442, 450, 453, 454, 458, 507, 508, 510, 513, 514, 515, 516, 517, 519, 524, 525, 526, 527, 529, 531, 532, 533, 534, 800, 801, 802, 803, 804, 805, 807, 811, 815, 816, 817, 818, 819, 820, 826, 827, 828, 831, 835, 836, 837, 840, 841, 842, 843, 846, 847, 850, 851, 852, 853, 855, 856, 857, 863, 873, 874, 875, 876, 877, 879, 880, 881], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting": [172, 173, 174, 175, 176, 177, 191, 201, 212, 223, 236, 245, 246, 247, 248, 249, 250, 255, 256, 257, 259, 260, 265, 269, 272, 273, 279, 280, 283, 286, 287, 288, 291, 295, 296, 297, 301, 302, 303, 305, 308, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 327, 335, 336, 340, 343, 344, 345, 347, 348, 349, 350, 356, 359, 360, 361, 362, 363, 364, 365, 367, 374, 378, 379, 380, 385, 386, 387, 388, 389, 390, 393, 394, 395, 397, 398, 399, 400, 404, 407, 415, 416, 421, 423, 424, 425, 426, 427, 429, 430, 433, 453, 454, 458, 507, 508, 510, 513, 514, 515, 516, 517, 519, 524, 525, 526, 527, 529, 531, 532, 533, 534, 800, 801, 802, 803, 804, 805, 807, 811, 815, 816, 817, 818, 819, 820, 826, 827, 828, 831, 835, 836, 837, 840, 841, 842, 843, 846, 847, 850, 851, 852, 853, 855, 856, 857, 863, 873, 874, 875, 876, 877, 879, 880, 881], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess": [172, 173, 174, 175, 176, 177, 191, 201, 212, 223, 236, 245, 246, 247, 248, 249, 250, 255, 256, 257, 259, 260, 261, 262, 265, 269, 272, 273, 279, 280, 283, 286, 287, 288, 291, 295, 296, 297, 301, 302, 303, 305, 308, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 327, 335, 336, 340, 343, 344, 345, 347, 348, 349, 350, 351, 353, 356, 359, 360, 361, 362, 363, 364, 365, 367, 374, 378, 379, 380, 385, 386, 387, 388, 389, 390, 393, 394, 395, 397, 398, 399, 400, 401, 404, 407, 408, 413, 414, 415, 416, 417, 421, 423, 424, 425, 426, 427, 429, 430, 433, 441, 442, 443, 444, 446, 447, 448, 450, 453, 454, 458, 507, 508, 510, 513, 514, 515, 516, 517, 519, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 559, 563, 564, 565, 566, 567, 568, 570, 571, 573, 574, 575, 582, 587, 593, 594, 595, 596, 598, 600, 601, 602, 603, 604, 605, 607, 609, 613, 619, 620, 621, 623, 624, 625, 626, 627, 628, 631, 632, 633, 634, 636, 639, 640, 646, 676, 677, 678, 679, 681, 682, 686, 690, 691, 695, 700, 701, 702, 706, 710, 711, 712, 713, 714, 716, 717, 718, 723, 724, 725, 726, 729, 730, 731, 732, 733, 741, 742, 748, 749, 757, 758, 759, 760, 761, 762, 764, 769, 770, 800, 801, 802, 803, 804, 805, 807, 811, 815, 816, 817, 818, 819, 820, 826, 827, 828, 831, 835, 836, 837, 840, 841, 842, 843, 846, 847, 850, 851, 852, 853, 855, 856, 857, 863, 873, 874, 875, 876, 877, 879, 880, 881], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError": [172, 173, 174, 175, 176, 177, 191, 201, 212, 223, 236, 245, 246, 247, 248, 249, 250, 255, 256, 257, 259, 260, 265, 269, 272, 273, 279, 280, 283, 286, 287, 288, 291, 295, 296, 297, 301, 302, 303, 305, 308, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 327, 335, 336, 340, 343, 344, 345, 347, 348, 349, 350, 356, 359, 360, 361, 362, 363, 364, 365, 367, 374, 378, 379, 380, 385, 386, 387, 388, 389, 390, 393, 394, 395, 397, 398, 399, 400, 404, 407, 415, 416, 421, 423, 424, 425, 426, 427, 429, 430, 433, 453, 454, 458, 507, 508, 510, 513, 514, 515, 516, 517, 519, 524, 525, 526, 527, 529, 531, 532, 533, 534, 800, 801, 802, 803, 804, 805, 807, 811, 815, 816, 817, 818, 819, 820, 826, 827, 828, 831, 835, 836, 837, 840, 841, 842, 843, 846, 847, 850, 851, 852, 853, 855, 856, 857, 863, 873, 874, 875, 876, 877, 879, 880, 881], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted": [172, 173, 174, 175, 176, 177, 191, 201, 212, 223, 236, 245, 246, 247, 248, 249, 250, 255, 256, 257, 259, 260, 265, 269, 272, 273, 279, 280, 283, 286, 287, 288, 291, 295, 296, 297, 301, 302, 303, 305, 308, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 327, 335, 336, 340, 343, 344, 345, 347, 348, 349, 350, 356, 359, 360, 361, 362, 363, 364, 365, 367, 374, 378, 379, 380, 385, 386, 387, 388, 389, 390, 393, 394, 395, 397, 398, 399, 400, 404, 407, 415, 416, 421, 423, 424, 425, 426, 427, 429, 430, 433, 453, 454, 458, 507, 508, 510, 513, 514, 515, 516, 517, 519, 524, 525, 526, 527, 529, 531, 532, 533, 534, 800, 801, 802, 803, 804, 805, 807, 811, 815, 816, 817, 818, 819, 820, 826, 827, 828, 831, 835, 836, 837, 840, 841, 842, 843, 846, 847, 850, 851, 852, 853, 855, 856, 857, 863, 873, 874, 875, 876, 877, 879, 880, 881], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError": [172, 173, 174, 175, 176, 177, 191, 201, 212, 223, 236, 245, 246, 247, 248, 249, 250, 255, 256, 257, 259, 260, 265, 269, 272, 273, 279, 280, 283, 286, 287, 288, 291, 295, 296, 297, 301, 302, 303, 305, 308, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 327, 335, 336, 340, 343, 344, 345, 347, 348, 349, 350, 356, 359, 360, 361, 362, 363, 364, 365, 367, 374, 378, 379, 380, 385, 386, 387, 388, 389, 390, 393, 394, 395, 397, 398, 399, 400, 404, 407, 415, 416, 421, 423, 424, 425, 426, 427, 429, 430, 433, 453, 454, 458, 507, 508, 510, 513, 514, 515, 516, 517, 519, 524, 525, 526, 527, 529, 531, 532, 533, 534, 800, 801, 802, 803, 804, 805, 807, 811, 815, 816, 817, 818, 819, 820, 826, 827, 828, 831, 835, 836, 837, 840, 841, 842, 843, 846, 847, 850, 851, 852, 853, 855, 856, 857, 863, 873, 874, 875, 876, 877, 879, 880, 881], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath303": [172, 173, 174, 175, 176, 177, 191, 201, 212, 223, 236, 245, 246, 247, 248, 249, 250, 255, 256, 257, 259, 260, 265, 269, 272, 273, 279, 280, 283, 286, 287, 288, 291, 295, 296, 297, 301, 302, 303, 305, 308, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 327, 330, 331, 335, 336, 340, 343, 344, 345, 347, 349, 356, 359, 360, 361, 362, 363, 364, 365, 367, 374, 378, 379, 380, 385, 386, 387, 388, 389, 390, 393, 394, 395, 397, 398, 399, 400, 404, 407, 415, 416, 421, 423, 424, 425, 426, 427, 429, 430, 433, 453, 454, 507, 508, 510, 513, 514, 515, 516, 517, 519, 524, 525, 526, 527, 529, 531, 532, 533, 534, 800, 801, 802, 803, 804, 805, 807, 811, 815, 816, 817, 818, 819, 820, 826, 827, 828, 831, 835, 836, 837, 840, 841, 842, 843, 846, 847, 850, 851, 852, 853, 855, 856, 857, 863, 873, 874, 875, 876, 877, 879, 880, 881], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304": [172, 173, 174, 175, 176, 177, 191, 201, 212, 223, 236, 245, 246, 247, 248, 249, 250, 255, 256, 257, 259, 260, 265, 269, 272, 273, 279, 280, 283, 286, 287, 288, 291, 295, 296, 297, 301, 302, 303, 305, 308, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 327, 330, 331, 335, 336, 340, 343, 344, 345, 347, 349, 356, 359, 360, 361, 362, 363, 364, 365, 367, 374, 378, 379, 380, 385, 386, 387, 388, 389, 390, 393, 394, 395, 397, 398, 399, 400, 404, 407, 415, 416, 421, 423, 424, 425, 426, 427, 429, 430, 433, 453, 454, 507, 508, 510, 513, 514, 515, 516, 519, 524, 525, 526, 527, 529, 531, 532, 533, 534, 800, 801, 802, 803, 804, 805, 807, 811, 815, 816, 817, 818, 819, 820, 826, 827, 828, 831, 835, 837, 840, 841, 842, 843, 846, 847, 850, 863, 873, 874, 875, 876, 877, 879, 880, 881], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372": [172, 173, 174, 175, 176, 177, 191, 201, 212, 223, 236, 245, 246, 247, 248, 249, 250, 255, 256, 257, 259, 260, 261, 262, 265, 269, 272, 273, 279, 280, 283, 286, 287, 288, 291, 295, 296, 297, 301, 302, 303, 305, 308, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 327, 335, 336, 340, 343, 344, 345, 347, 348, 349, 350, 351, 353, 356, 359, 360, 361, 362, 363, 364, 365, 367, 374, 378, 379, 380, 385, 386, 387, 388, 389, 390, 393, 394, 395, 397, 398, 399, 400, 401, 404, 407, 408, 413, 414, 415, 416, 421, 423, 424, 425, 426, 427, 429, 430, 433, 441, 442, 443, 444, 446, 447, 448, 450, 453, 454, 458, 507, 508, 510, 513, 514, 515, 516, 517, 519, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 559, 563, 564, 565, 566, 567, 568, 570, 571, 573, 574, 575, 582, 587, 593, 594, 595, 596, 598, 676, 677, 678, 679, 681, 682, 686, 690, 691, 695, 700, 701, 702, 706, 710, 711, 716, 717, 718, 723, 724, 725, 726, 729, 730, 731, 732, 733, 741, 742, 748, 749, 757, 758, 759, 760, 761, 762, 764, 769, 770, 800, 801, 802, 803, 804, 805, 807, 811, 815, 816, 817, 818, 819, 820, 826, 827, 828, 831, 835, 836, 837, 840, 841, 842, 843, 846, 847, 850, 851, 852, 853, 855, 856, 857, 863, 873, 874, 875, 876, 877, 879, 880, 881]}, "org.apache.commons.math.linear.Array2DRowRealMatrix": {"org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting": [78, 96, 116, 122, 132, 138, 298, 316, 331, 336, 401, 407, 597, 598, 600, 603, 617]}, "org.apache.commons.math.linear.LUDecompositionImpl": {"org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting": [68, 85, 87, 227]}, "org.apache.commons.math.optimization.VectorialPointValuePair": {"org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial": [48, 88], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned": [47, 72], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting": [47, 81], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess": [47, 81], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError": [47, 81], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted": [47, 81], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError": [47, 81], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath303": [47, 81], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304": [47, 81], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372": [47, 81]}, "org.apache.commons.math.linear.MatrixUtils": {"org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting": [62, 107, 143, 144, 147]}, "org.apache.commons.math.optimization.fitting.WeightedObservedPoint": {"org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess": [49, 64], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError": [49, 64], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted": [49, 64], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError": [49, 64], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath303": [49, 64], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304": [49, 64], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372": [49, 64]}, "org.apache.commons.math.util.MathUtils": {"org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess": [1208], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError": [1208], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted": [1208], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError": [1208]}}