{"org.apache.commons.math.optimization.fitting.PolynomialFitter": {"org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError": [49, 50, 60, 77], "org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError": [49, 50, 60, 77]}, "org.apache.commons.math.linear.LUDecompositionImpl": {"org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting": [71, 88, 90, 230], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNonInversible": [71, 88, 89, 96, 103, 108, 109, 110, 111, 112, 114, 119, 120, 121, 122, 123, 124, 126, 129, 130, 131, 136, 137, 142, 144, 145, 146, 147, 148, 149, 158, 159, 160, 230]}, "org.apache.commons.math.optimization.fitting.WeightedObservedPoint": {"org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError": [49, 64], "org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError": [49, 64], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess": [49, 64], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError": [49, 64], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError": [49, 64], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted": [49, 64], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304": [49, 64], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath303": [49, 64]}, "org.apache.commons.math.util.MathUtils": {"org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess": [1125], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError": [1125], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError": [1125], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted": [1125]}, "org.apache.commons.math.optimization.fitting.CurveFitter": {"org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError": [43, 55, 56, 83, 131, 132, 134, 141, 145], "org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError": [43, 55, 56, 83, 131, 132, 134, 141, 145], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess": [43, 55, 56, 83, 131, 132, 134, 141, 145], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError": [43, 55, 56, 83, 131, 132, 134, 141, 145], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError": [43, 55, 56, 83, 131, 132, 134, 141, 145], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted": [43, 55, 56, 83, 131, 132, 134, 141, 145], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304": [43, 55, 56, 70, 83, 131, 132, 134, 141, 145], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath303": [43, 55, 56, 70, 83, 131, 132, 134, 141, 145]}, "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer": {"org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting": [148, 153, 158, 183, 184, 189, 190, 191, 192, 193, 207, 211, 216, 218, 219, 220, 221, 224, 239, 240, 241, 242, 244, 252, 253, 254, 255, 257, 275, 276, 277, 279, 289, 291, 309, 314, 315, 316, 317, 318, 320, 336, 337, 340, 341, 342, 343, 344, 345, 348, 349, 354], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNonInversible": [158, 184, 189, 190, 191, 192, 193, 211, 216, 218, 219, 220, 221, 224, 239, 240, 241, 242, 244, 275, 276, 277, 279, 289, 293, 340, 341, 342, 343, 344, 345, 348, 349, 354], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet": [158, 184, 189, 190, 191, 192, 193, 211, 216, 218, 219, 220, 221, 224, 239, 240, 241, 242, 244, 340, 341, 342, 343, 344, 345, 348, 349, 354], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentEquations": [158, 184, 189, 190, 191, 192, 193, 211, 216, 218, 219, 220, 221, 224, 239, 240, 241, 242, 244, 340, 341, 342, 343, 344, 345, 348, 349, 354], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit": [148, 153, 158, 183, 184, 189, 190, 191, 192, 193, 207, 211, 216, 218, 219, 220, 221, 224, 239, 240, 241, 242, 244, 336, 337, 340, 341, 342, 343, 344, 345, 348, 349, 354], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency": [158, 184, 189, 190, 191, 192, 193, 211, 216, 218, 219, 220, 221, 224, 239, 240, 241, 242, 244, 340, 341, 342, 343, 344, 345, 348, 349, 354], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations": [158, 184, 189, 190, 191, 192, 193, 211, 216, 218, 219, 220, 221, 224, 239, 240, 241, 242, 244, 340, 341, 342, 343, 344, 345, 348, 349, 354], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation": [158, 184, 189, 190, 191, 192, 193, 211, 216, 218, 219, 220, 221, 224, 239, 240, 241, 242, 244, 340, 341, 342, 343, 344, 345, 348, 349, 354], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial": [158, 184, 189, 190, 191, 192, 193, 211, 216, 218, 219, 220, 221, 224, 239, 240, 241, 242, 244, 309, 310, 340, 341, 342, 343, 344, 345, 348, 349, 354], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple": [158, 184, 189, 190, 191, 192, 193, 211, 216, 218, 219, 220, 221, 224, 239, 240, 241, 242, 244, 340, 341, 342, 343, 344, 345, 348, 349, 354], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes": [158, 184, 189, 190, 191, 192, 193, 211, 212, 213, 216, 218, 219, 220, 221, 224, 239, 240, 241, 242, 244, 329, 330, 340, 341, 342, 343, 344, 345, 348, 349, 354], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMath199": [184, 189, 190, 191, 192, 193, 341, 343, 344, 348, 349, 354], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned": [158, 184, 189, 190, 191, 192, 193, 211, 216, 218, 219, 220, 221, 224, 239, 240, 241, 242, 244, 340, 341, 342, 343, 344, 345, 348, 349, 354], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted": [158, 184, 189, 190, 191, 192, 193, 211, 216, 218, 219, 220, 221, 224, 239, 240, 241, 242, 244, 340, 341, 342, 343, 344, 345, 348, 349, 354], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets": [158, 184, 189, 190, 191, 192, 193, 211, 216, 218, 219, 220, 221, 224, 239, 240, 241, 242, 244, 340, 341, 342, 343, 344, 345, 348, 349, 354], "org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError": [158, 184, 189, 190, 191, 192, 193, 211, 216, 218, 219, 220, 221, 224, 340, 341, 342, 343, 344, 345, 348, 349, 354], "org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError": [158, 184, 189, 190, 191, 192, 193, 211, 216, 218, 219, 220, 221, 224, 340, 341, 342, 343, 344, 345, 348, 349, 354], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess": [158, 184, 189, 190, 191, 192, 193, 211, 216, 218, 219, 220, 221, 224, 340, 341, 342, 343, 344, 345, 348, 349, 354], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError": [158, 184, 189, 190, 191, 192, 193, 211, 216, 218, 219, 220, 221, 224, 340, 341, 342, 343, 344, 345, 348, 349, 354], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError": [158, 184, 189, 190, 191, 192, 193, 211, 216, 218, 219, 220, 221, 224, 340, 341, 342, 343, 344, 345, 348, 349, 354], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted": [158, 184, 189, 190, 191, 192, 193, 211, 216, 218, 219, 220, 221, 224, 340, 341, 342, 343, 344, 345, 348, 349, 354], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304": [158, 184, 189, 190, 191, 192, 193, 211, 216, 218, 219, 220, 221, 224, 340, 341, 342, 343, 344, 345, 348, 349, 354], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath303": [158, 184, 189, 190, 191, 192, 193, 211, 216, 218, 219, 220, 221, 224, 340, 341, 342, 343, 344, 345, 348, 349, 354]}, "org.apache.commons.math.optimization.SimpleVectorialValueChecker": {"org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit": [66, 67, 74, 75, 76, 77, 78, 79, 80, 81, 83, 86]}, "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer": {"org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting": [166, 167, 168, 169, 170, 184, 194, 205, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 243, 247, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 347, 348, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 378, 381, 389, 390, 395, 397, 398, 399, 400, 401, 403, 417, 424, 428, 483, 484, 486, 489, 490, 491, 492, 493, 495, 500, 501, 502, 503, 505, 507, 508, 509, 510, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 812, 813, 814, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 832, 833, 834, 840, 850, 851, 852, 853, 854, 856, 857, 858], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNonInversible": [166, 167, 168, 169, 170, 184, 194, 205, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 239, 240, 243, 246, 247, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 347, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 378, 381, 389, 390, 395, 398, 399, 400, 401, 403, 417, 424, 483, 484, 486, 489, 490, 491, 492, 493, 495, 500, 501, 502, 503, 504, 505, 507, 508, 509, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 531, 532, 533, 535, 539, 540, 541, 542, 543, 544, 546, 547, 549, 550, 551, 558, 563, 569, 570, 571, 572, 574, 652, 653, 654, 655, 657, 658, 662, 666, 667, 671, 676, 677, 678, 682, 686, 687, 688, 689, 690, 692, 693, 694, 699, 700, 701, 702, 705, 706, 707, 708, 709, 717, 718, 724, 725, 733, 734, 735, 736, 737, 738, 740, 745, 746, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 812, 813, 814, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 832, 833, 834, 840, 850, 851, 852, 853, 854, 856, 857, 858], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet": [166, 167, 168, 169, 170, 184, 194, 205, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 243, 247, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 347, 348, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 378, 381, 389, 390, 395, 397, 398, 399, 400, 401, 403, 417, 424, 428, 483, 484, 486, 489, 490, 491, 492, 493, 495, 500, 501, 502, 503, 505, 507, 508, 509, 510, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 812, 814, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 832, 833, 834, 840, 850, 851, 852, 853, 854, 856, 857, 858], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentEquations": [166, 167, 168, 169, 170, 184, 194, 205, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 243, 247, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 347, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 378, 381, 389, 390, 395, 398, 399, 400, 401, 403, 417, 424, 483, 484, 486, 489, 490, 491, 492, 493, 495, 500, 501, 502, 503, 505, 507, 508, 509, 510, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 812, 813, 814, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 832, 833, 834, 840, 850, 851, 852, 853, 854, 856, 857, 858], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit": [167, 170, 184, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 239, 240, 243, 247, 248, 254, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 342, 343, 347, 348, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 375, 378, 381, 382, 387, 388, 389, 390, 391, 395, 397, 399, 406, 407, 408, 409, 411, 412, 413, 417, 419, 420, 483, 484, 486, 489, 490, 491, 492, 493, 495, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 531, 532, 533, 535, 539, 540, 541, 542, 543, 544, 546, 547, 549, 550, 551, 558, 563, 569, 570, 571, 572, 574, 652, 653, 654, 655, 657, 658, 662, 666, 667, 671, 676, 677, 678, 682, 686, 687, 688, 689, 690, 692, 693, 694, 699, 700, 701, 702, 705, 706, 707, 708, 709, 717, 718, 724, 725, 733, 734, 735, 736, 737, 738, 740, 745, 746, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 812, 814, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 832, 833, 834, 840, 850, 851, 852, 853, 854, 856, 857, 858], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency": [166, 167, 168, 169, 170, 184, 194, 205, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 243, 247, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 306, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 347, 348, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 378, 381, 389, 390, 395, 397, 398, 399, 400, 401, 403, 417, 424, 483, 484, 486, 489, 490, 491, 492, 493, 495, 500, 501, 502, 503, 505, 507, 508, 509, 510, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 812, 814, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 832, 833, 834, 840, 850, 851, 852, 853, 854, 856, 857, 858], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations": [166, 167, 168, 169, 170, 184, 194, 205, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 243, 247, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 306, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 347, 348, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 378, 381, 389, 390, 395, 397, 398, 399, 400, 401, 403, 417, 424, 483, 484, 486, 489, 490, 491, 492, 493, 495, 500, 501, 502, 503, 505, 507, 508, 509, 510, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 812, 813, 814, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 832, 833, 834, 840, 850, 851, 852, 853, 854, 856, 857, 858], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation": [166, 167, 168, 169, 170, 184, 194, 205, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 243, 247, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 306, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 347, 348, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 378, 381, 389, 390, 395, 397, 398, 399, 400, 401, 403, 417, 424, 483, 484, 486, 489, 490, 491, 492, 493, 495, 500, 501, 502, 503, 505, 507, 508, 509, 510, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 812, 813, 814, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 832, 833, 834, 840, 850, 851, 852, 853, 854, 856, 857, 858], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial": [166, 167, 168, 169, 170, 184, 194, 205, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 243, 247, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 306, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 347, 348, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 378, 381, 389, 390, 395, 397, 398, 399, 400, 401, 403, 417, 424, 483, 484, 486, 489, 490, 491, 492, 495, 500, 501, 502, 503, 505, 507, 508, 509, 510, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 812, 814, 817, 818, 819, 820, 823, 824, 827, 840, 850, 851, 852, 853, 854, 856, 857, 858], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple": [166, 167, 168, 169, 170, 184, 194, 205, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 243, 247, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 347, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 378, 381, 389, 390, 395, 397, 398, 399, 400, 401, 403, 417, 424, 483, 484, 486, 489, 490, 491, 492, 493, 495, 500, 501, 502, 503, 505, 507, 508, 509, 510, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 809, 812, 814, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 832, 833, 834, 850, 851, 852, 853, 854, 856, 857, 858], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes": [166, 167, 168, 169, 170, 184, 194, 205, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 243, 247, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 306, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 347, 348, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 378, 381, 389, 390, 395, 397, 398, 399, 400, 401, 403, 417, 424, 483, 484, 486, 489, 490, 491, 492, 493, 495, 500, 501, 502, 503, 505, 507, 508, 509, 510, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 812, 814, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 832, 833, 834, 840, 850, 851, 852, 853, 854, 856, 857, 858], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMath199": [229, 255, 256, 776, 777, 779, 787, 791, 792, 793, 794, 795, 796, 798, 799, 803, 804, 805, 808, 812, 817, 818, 819, 824, 827, 828, 829, 830, 832, 833, 834], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned": [166, 167, 168, 169, 170, 184, 194, 205, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 243, 247, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 347, 348, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 375, 378, 381, 382, 387, 389, 390, 395, 397, 398, 399, 400, 401, 403, 407, 412, 417, 424, 428, 483, 484, 486, 489, 490, 491, 492, 493, 495, 500, 501, 502, 503, 505, 507, 508, 509, 510, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 812, 813, 814, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 832, 833, 834, 840, 850, 851, 852, 853, 854, 856, 857, 858], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted": [166, 167, 168, 169, 170, 184, 194, 205, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 243, 247, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 347, 348, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 378, 381, 389, 390, 395, 397, 398, 399, 400, 401, 403, 417, 424, 428, 483, 484, 486, 489, 490, 491, 492, 493, 495, 500, 501, 502, 503, 505, 507, 508, 509, 510, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 809, 812, 813, 814, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 832, 833, 834, 850, 851, 852, 853, 854, 856, 857, 858], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets": [166, 167, 168, 169, 170, 184, 194, 205, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 243, 247, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 347, 348, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 378, 381, 389, 390, 395, 397, 398, 399, 400, 401, 403, 417, 424, 428, 483, 484, 486, 489, 490, 491, 492, 493, 495, 500, 501, 502, 503, 505, 507, 508, 509, 510, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 812, 813, 814, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 832, 833, 834, 840, 850, 851, 852, 853, 854, 856, 857, 858], "org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError": [166, 167, 168, 169, 170, 184, 194, 205, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 239, 240, 243, 246, 247, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 347, 348, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 375, 378, 381, 382, 384, 385, 387, 389, 390, 391, 395, 397, 398, 399, 400, 401, 403, 407, 412, 417, 424, 428, 483, 484, 486, 489, 490, 491, 492, 493, 495, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 531, 532, 533, 535, 539, 540, 541, 542, 543, 544, 546, 547, 549, 550, 551, 558, 563, 569, 570, 571, 572, 574, 576, 577, 578, 579, 580, 581, 583, 585, 589, 595, 596, 597, 599, 600, 601, 602, 603, 604, 607, 608, 609, 610, 612, 615, 616, 617, 618, 622, 652, 653, 654, 655, 657, 658, 662, 666, 667, 671, 676, 677, 678, 682, 686, 687, 688, 689, 690, 692, 693, 694, 699, 700, 701, 702, 705, 706, 707, 708, 709, 717, 718, 724, 725, 733, 734, 735, 736, 737, 738, 740, 745, 746, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 812, 813, 814, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 832, 833, 834, 840, 850, 851, 852, 853, 854, 856, 857, 858], "org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError": [166, 167, 168, 169, 170, 184, 194, 205, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 243, 247, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 306, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 347, 348, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 378, 381, 389, 390, 395, 397, 398, 399, 400, 401, 403, 417, 424, 483, 484, 486, 489, 490, 491, 492, 493, 495, 500, 501, 502, 503, 505, 507, 508, 509, 510, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 812, 813, 814, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 832, 833, 834, 840, 850, 851, 852, 853, 854, 856, 857, 858], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess": [166, 167, 168, 169, 170, 184, 194, 205, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 239, 240, 243, 247, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 347, 348, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 375, 378, 381, 382, 387, 388, 389, 390, 391, 395, 397, 398, 399, 400, 401, 403, 406, 407, 408, 409, 411, 412, 413, 417, 424, 428, 483, 484, 486, 489, 490, 491, 492, 493, 495, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 531, 532, 533, 535, 539, 540, 541, 542, 543, 544, 546, 547, 549, 550, 551, 558, 563, 569, 570, 571, 572, 574, 576, 577, 578, 579, 580, 581, 583, 585, 589, 595, 596, 597, 599, 600, 601, 602, 603, 604, 607, 608, 609, 610, 612, 615, 616, 622, 652, 653, 654, 655, 657, 658, 662, 666, 667, 671, 676, 677, 678, 682, 686, 687, 688, 689, 690, 692, 693, 694, 699, 700, 701, 702, 705, 706, 707, 708, 709, 717, 718, 724, 725, 733, 734, 735, 736, 737, 738, 740, 745, 746, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 812, 813, 814, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 832, 833, 834, 840, 850, 851, 852, 853, 854, 856, 857, 858], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError": [166, 167, 168, 169, 170, 184, 194, 205, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 243, 247, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 347, 348, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 378, 381, 389, 390, 395, 397, 398, 399, 400, 401, 403, 417, 424, 428, 483, 484, 486, 489, 490, 491, 492, 493, 495, 500, 501, 502, 503, 505, 507, 508, 509, 510, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 812, 813, 814, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 832, 833, 834, 840, 850, 851, 852, 853, 854, 856, 857, 858], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError": [166, 167, 168, 169, 170, 184, 194, 205, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 243, 247, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 347, 348, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 378, 381, 389, 390, 395, 397, 398, 399, 400, 401, 403, 417, 424, 428, 483, 484, 486, 489, 490, 491, 492, 493, 495, 500, 501, 502, 503, 505, 507, 508, 509, 510, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 812, 813, 814, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 832, 833, 834, 840, 850, 851, 852, 853, 854, 856, 857, 858], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted": [166, 167, 168, 169, 170, 184, 194, 205, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 243, 247, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 347, 348, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 378, 381, 389, 390, 395, 397, 398, 399, 400, 401, 403, 417, 424, 428, 483, 484, 486, 489, 490, 491, 492, 493, 495, 500, 501, 502, 503, 505, 507, 508, 509, 510, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 812, 813, 814, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 832, 833, 834, 840, 850, 851, 852, 853, 854, 856, 857, 858], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304": [166, 167, 168, 169, 170, 184, 194, 205, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 243, 247, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 306, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 347, 348, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 378, 381, 389, 390, 395, 397, 398, 399, 400, 401, 403, 417, 424, 483, 484, 486, 489, 490, 491, 492, 495, 500, 501, 502, 503, 505, 507, 508, 509, 510, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 812, 814, 817, 818, 819, 820, 823, 824, 827, 840, 850, 851, 852, 853, 854, 856, 857, 858], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath303": [166, 167, 168, 169, 170, 184, 194, 205, 216, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 243, 247, 255, 256, 259, 263, 264, 265, 268, 272, 273, 274, 278, 279, 280, 282, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 306, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 347, 348, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 378, 381, 389, 390, 395, 397, 398, 399, 400, 401, 403, 417, 424, 483, 484, 486, 489, 490, 491, 492, 493, 495, 500, 501, 502, 503, 505, 507, 508, 509, 510, 776, 777, 778, 779, 780, 781, 783, 787, 791, 792, 793, 794, 795, 796, 803, 804, 805, 808, 812, 813, 814, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 832, 833, 834, 840, 850, 851, 852, 853, 854, 856, 857, 858]}, "org.apache.commons.math.linear.MatrixUtils": {"org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting": [61, 106, 142, 143, 146], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNonInversible": [106]}, "org.apache.commons.math.linear.Array2DRowRealMatrix": {"org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting": [97, 115, 135, 141, 151, 157, 317, 335, 350, 355, 420, 426, 616, 617, 619, 622, 636], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNonInversible": [115, 317, 335, 350, 355, 420, 426, 616, 617, 619, 622, 636]}, "org.apache.commons.math.optimization.VectorialPointValuePair": {"org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting": [47, 77], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet": [47, 68], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit": [47, 48, 77, 93], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency": [47, 68], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations": [47, 77], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation": [47, 48, 68, 84], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial": [47, 48, 68, 84], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes": [47, 68], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned": [47, 68], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted": [47, 77], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets": [47, 68], "org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError": [47, 77], "org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError": [47, 77], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess": [47, 77], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError": [47, 77], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError": [47, 77], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted": [47, 77], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304": [47, 77], "org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath303": [47, 77]}, "org.apache.commons.math.optimization.fitting.HarmonicFunction": {"org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess": [43, 44, 45, 50, 62, 69, 76], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError": [43, 44, 45, 50, 62, 69, 76], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError": [43, 44, 45, 50, 62, 69, 76], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted": [43, 44, 45, 50, 62, 69, 76]}, "org.apache.commons.math.analysis.polynomials.PolynomialFunction": {"org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError": [71, 72, 75, 91, 127, 131, 132, 133, 135], "org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError": [71, 72, 75, 91, 127, 131, 132, 133, 135]}, "org.apache.commons.math.linear.BlockRealMatrix": {"org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNonInversible": [126, 149, 150, 153, 154, 156, 161, 206, 207, 208, 209, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 239, 249, 635, 638, 639, 640, 643, 647, 657, 1345, 1351, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1386, 1387, 1389, 1394], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet": [126, 149, 150, 153, 154, 156, 161, 206, 207, 208, 209, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 239, 249, 635, 638, 639, 640, 643, 647, 657, 1345, 1351, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1386, 1387, 1389, 1394], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentEquations": [126, 149, 150, 153, 154, 156, 161, 206, 207, 208, 209, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 239, 249, 635, 638, 639, 640, 643, 647, 657, 1345, 1351, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1386, 1387, 1389, 1394], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency": [126, 149, 150, 153, 154, 156, 161, 206, 207, 208, 209, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 239, 249, 635, 638, 639, 640, 643, 647, 657, 1345, 1351, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1383, 1384, 1386, 1387, 1389, 1394], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations": [126, 149, 150, 153, 154, 156, 161, 206, 207, 208, 209, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 239, 249, 635, 638, 639, 640, 643, 647, 657, 1345, 1351, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1386, 1387, 1389, 1394], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation": [126, 149, 150, 153, 154, 156, 161, 206, 207, 208, 209, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 239, 249, 635, 638, 639, 640, 643, 647, 657, 1345, 1351, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1386, 1387, 1389, 1394], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial": [126, 149, 150, 153, 154, 156, 161, 206, 207, 208, 209, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 239, 249, 635, 638, 639, 640, 643, 647, 657, 1345, 1351, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1386, 1387, 1389, 1394], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple": [126, 149, 150, 153, 154, 156, 161, 206, 207, 208, 209, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 239, 249, 635, 638, 639, 640, 643, 647, 657, 1345, 1351, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1383, 1384, 1386, 1389, 1394], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes": [126, 149, 150, 153, 154, 156, 161, 206, 207, 208, 209, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 239, 249, 635, 638, 639, 640, 643, 647, 657, 1345, 1351, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1386, 1387, 1389, 1394], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned": [126, 149, 150, 153, 154, 156, 161, 206, 207, 208, 209, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 239, 249, 635, 638, 639, 640, 643, 647, 657, 1345, 1351, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1383, 1384, 1386, 1389, 1394], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted": [126, 149, 150, 153, 154, 156, 161, 206, 207, 208, 209, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 239, 249, 635, 638, 639, 640, 643, 647, 657, 1345, 1351, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1383, 1384, 1386, 1387, 1389, 1394], "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets": [126, 149, 150, 153, 154, 156, 161, 206, 207, 208, 209, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 239, 249, 635, 638, 639, 640, 643, 647, 657, 1345, 1351, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1383, 1384, 1386, 1387, 1389, 1394]}, "org.apache.commons.math.optimization.fitting.HarmonicFitter": {"org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess": [59, 60, 70, 99, 100], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError": [46, 47, 70, 82, 91, 99, 100], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError": [46, 47, 70, 82, 91, 99, 100], "org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted": [46, 47, 70, 82, 91, 99, 100]}}