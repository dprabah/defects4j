{"org.apache.commons.csv.CSVPrinter": {"org.apache.commons.csv.CSVPrinterTest::testNewCSVPrinterNullAppendableFormat": [59], "org.apache.commons.csv.CSVParserTest::testRoundtrip": [341], "org.apache.commons.csv.CSVRecordTest::testRemoveAndAddColumns": [62, 428], "org.apache.commons.csv.CSVPrinterTest::testNewCsvPrinterAppendableNullFormat": [60]}, "org.apache.commons.csv.CSVFormat": {"org.apache.commons.csv.CSVParserTest::testCarriageReturnLineFeedEndings": [396, 405, 414, 433, 443, 460, 469], "org.apache.commons.csv.CSVParserTest::testEmptyLineBehaviourCSV": [396, 405, 414, 433, 443, 460, 469], "org.apache.commons.csv.CSVParserTest::testSkipSetHeader": [300, 301, 303, 304, 305, 306, 308, 309, 310, 396, 405, 414, 423, 433, 443, 460, 469, 496, 569, 753, 881], "org.apache.commons.csv.CSVParserTest::testProvidedHeader": [300, 301, 303, 304, 305, 306, 308, 309, 396, 405, 414, 423, 433, 443, 460, 469, 569, 753], "org.apache.commons.csv.CSVParserTest::testCarriageReturnEndings": [396, 405, 414, 433, 443, 460, 469], "org.apache.commons.csv.CSVParserTest::testExcelFormat1": [396, 405, 414, 433, 443, 460, 469], "org.apache.commons.csv.CSVFormatTest::testRFC4180": [396, 405, 414, 433, 469, 478, 487], "org.apache.commons.csv.CSVParserTest::testCSV57": [405, 433], "org.apache.commons.csv.CSVFormatTest::testEqualsHeader": [753, 842], "org.apache.commons.csv.CSVPrinterTest::testMultiLineComment": [487], "org.apache.commons.csv.CSVParserTest::testSkipAutoHeader": [300, 301, 303, 304, 305, 306, 308, 309, 396, 405, 414, 423, 433, 443, 460, 469, 569, 753], "org.apache.commons.csv.CSVParserTest::testRoundtrip": [396, 405, 414, 433, 443, 460, 469], "org.apache.commons.csv.CSVPrinterTest::testPrintNullValues": [487], "org.apache.commons.csv.CSVParserTest::testForEach": [396, 405, 414, 433, 443, 460, 469, 569], "org.apache.commons.csv.CSVPrinterTest::testQuoteAll": [487], "org.apache.commons.csv.CSVPrinterTest::testExcelPrintAllIterableOfLists": [487], "org.apache.commons.csv.CSVFormatTest::testWithCommentStart": [303, 396, 666, 684], "org.apache.commons.csv.CSVFormatTest::testEqualsDelimiter": [262], "org.apache.commons.csv.CSVFormatTest::testEquals": [300, 301, 302, 303, 304, 305, 306, 307, 309, 315, 318, 319, 321, 322, 405, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 701], "org.apache.commons.csv.CSVParserTest::testDefaultFormat": [396, 405, 414, 433, 443, 460, 469, 525], "org.apache.commons.csv.CSVParserTest::testIterator": [396, 405, 414, 433, 443, 460, 469, 569], "org.apache.commons.csv.CSVParserTest::testHeader": [300, 301, 303, 304, 305, 306, 308, 309, 396, 405, 414, 423, 433, 443, 460, 469, 569, 753], "org.apache.commons.csv.CSVFormatTest::testWithIgnoreEmptyLines": [306, 433, 766], "org.apache.commons.csv.CSVFormatTest::testNullRecordSeparatorCsv106": [380, 383], "org.apache.commons.csv.CSVPrinterTest::testPrinter1": [487], "org.apache.commons.csv.CSVParserTest::testEmptyLineBehaviourExcel": [396, 405, 414, 433, 443, 460, 469], "org.apache.commons.csv.CSVPrinterTest::testExcelPrinter2": [487], "org.apache.commons.csv.CSVFormatTest::testWithQuotePolicy": [302, 478, 842], "org.apache.commons.csv.CSVPrinterTest::testExcelPrintAllIterableOfArrays": [487], "org.apache.commons.csv.CSVFormatTest::testEqualsIgnoreEmptyLines": [766, 842], "org.apache.commons.csv.CSVFormatTest::testWithCommentStartCRThrowsException": [238, 250, 666, 681, 682], "org.apache.commons.csv.CSVParserTest::testInvalidFormat": [238, 698, 699], "org.apache.commons.csv.CSVParserTest::testMultipleIterators": [396, 405, 414, 433, 443, 460, 469], "org.apache.commons.csv.CSVParserTest::testHeaderComment": [300, 301, 303, 304, 305, 306, 308, 309, 396, 405, 414, 423, 433, 443, 460, 469, 569, 666, 684, 753], "org.apache.commons.csv.CSVFormatTest::testQuotePolicyNoneWithoutEscapeThrowsException": [262, 302, 304, 641, 642, 842], "org.apache.commons.csv.CSVFormatTest::testQuoteCharSameAsCommentStartThrowsException": [301, 303, 631, 632, 666, 684, 813, 829], "org.apache.commons.csv.CSVParserTest::testBackslashEscaping": [262, 300, 301, 303, 304, 305, 306, 308, 396, 405, 414, 433, 443, 460, 469, 715, 731, 766, 813, 829, 867], "org.apache.commons.csv.CSVParserTest::testGetRecordWithMultiLineValues": [300, 301, 303, 304, 305, 306, 308, 396, 405, 414, 433, 443, 460, 469, 867], "org.apache.commons.csv.CSVFormatTest::testEqualsCommentStart": [666, 684, 842], "org.apache.commons.csv.CSVFormatTest::testEscapeSameAsCommentStartThrowsException": [303, 304, 636, 637, 666, 684, 715, 731], "org.apache.commons.csv.CSVPrinterTest::testPrinter7": [487], "org.apache.commons.csv.CSVFormatTest::testEqualsQuoteChar": [813, 829], "org.apache.commons.csv.CSVParserTest::testGetRecords": [300, 301, 303, 304, 305, 306, 308, 396, 405, 414, 433, 443, 460, 469, 779], "org.apache.commons.csv.CSVPrinterTest::testPrintCustomNullValues": [487], "org.apache.commons.csv.CSVFormatTest::testEqualsEscape": [715, 731, 842], "org.apache.commons.csv.CSVParserTest::testEndOfFileBehaviorCSV": [396, 405, 414, 433, 443, 460, 469], "org.apache.commons.csv.CSVPrinterTest::testExcelPrintAllArrayOfArrays": [487], "org.apache.commons.csv.CSVParserTest::testExcelFormat2": [396, 405, 414, 433, 443, 460, 469], "org.apache.commons.csv.CSVPrinterTest::testPrinter3": [487], "org.apache.commons.csv.CSVFormatTest::testEqualsIgnoreSurroundingSpaces": [779, 842], "org.apache.commons.csv.CSVPrinterTest::testInvalidFormat": [238, 698, 699], "org.apache.commons.csv.CSVFormatTest::testFormat": [380, 383], "org.apache.commons.csv.CSVRecordTest::testRemoveAndAddColumns": [487], "org.apache.commons.csv.CSVParserTest::testGetLine": [300, 301, 303, 304, 305, 306, 308, 396, 405, 414, 433, 443, 460, 469, 779], "org.apache.commons.csv.CSVPrinterTest::testPrinter2": [487], "org.apache.commons.csv.CSVParserTest::testClose": [300, 301, 303, 304, 305, 306, 308, 309, 396, 405, 414, 423, 433, 443, 460, 469, 569, 666, 684, 753], "org.apache.commons.csv.CSVFormatTest::testSerialization": [396, 405, 414, 433, 443, 469, 487], "org.apache.commons.csv.CSVParserTest::testMappedButNotSetAsOutlook2007ContactExport": [300, 301, 303, 304, 305, 306, 308, 309, 310, 396, 405, 414, 423, 433, 443, 460, 469, 496, 569, 753, 881], "org.apache.commons.csv.CSVPrinterTest::testSingleLineComment": [487], "org.apache.commons.csv.CSVFormatTest::testDuplicateHeaderElements": [309, 645, 646, 648, 649, 753], "org.apache.commons.csv.CSVParserTest::testEndOfFileBehaviourExcel": [396, 405, 414, 433, 443, 460, 469], "org.apache.commons.csv.CSVFormatTest::testWithIgnoreSurround": [305, 443, 779], "org.apache.commons.csv.CSVFormatTest::testEqualsQuotePolicy": [842], "org.apache.commons.csv.CSVParserTest::testEmptyFile": [405, 433], "org.apache.commons.csv.CSVFormatTest::testQuoteCharSameAsDelimiterThrowsException": [300, 301, 616, 617, 701, 813, 829], "org.apache.commons.csv.CSVFormatTest::testWithHeader": [309, 423, 753], "org.apache.commons.csv.CSVFormatTest::testGetHeader": [309, 423, 753], "org.apache.commons.csv.CSVFormatTest::testWithRecordSeparator": [307, 487, 855, 867], "org.apache.commons.csv.CSVFormatTest::testWithEscapeCRThrowsExceptions": [238, 250, 715, 728, 729], "org.apache.commons.csv.CSVPrinterTest::testExcelPrinter1": [487], "org.apache.commons.csv.CSVParserTest::testNoHeaderMap": [423], "org.apache.commons.csv.CSVFormatTest::testDelimiterSameAsEscapeThrowsException": [300, 304, 621, 622, 701, 715, 731], "org.apache.commons.csv.CSVFormatTest::testWithDelimiterLFThrowsException": [238, 698, 699], "org.apache.commons.csv.CSVFormatTest::testWithDelimiter": [300, 405, 701], "org.apache.commons.csv.CSVFormatTest::testWithNullString": [308, 460, 799], "org.apache.commons.csv.CSVPrinterTest::testParseCustomNullValues": [300, 301, 303, 304, 305, 306, 308, 396, 405, 414, 433, 443, 460, 469, 487, 569, 799], "org.apache.commons.csv.CSVFormatTest::testWithQuoteLFThrowsException": [238, 250, 813, 826, 827], "org.apache.commons.csv.CSVFormatTest::testWithEscape": [304, 414, 715, 731], "org.apache.commons.csv.CSVFormatTest::testEscapeSameAsCommentStartThrowsExceptionForWrapperType": [303, 304, 636, 637, 684, 731], "org.apache.commons.csv.CSVFormatTest::testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType": [301, 303, 631, 632, 666, 684, 829], "org.apache.commons.csv.CSVPrinterTest::testPrinter6": [487], "org.apache.commons.csv.CSVPrinterTest::testPrinter4": [487], "org.apache.commons.csv.CSVPrinterTest::testQuoteNonNumeric": [487], "org.apache.commons.csv.CSVPrinterTest::testExcelPrintAllArrayOfLists": [487], "org.apache.commons.csv.CSVFormatTest::testEqualsRecordSeparator": [842, 855, 867], "org.apache.commons.csv.CSVParserTest::testIgnoreEmptyLines": [396, 405, 414, 433, 443, 460, 469], "org.apache.commons.csv.CSVPrinterTest::testJdbcPrinter": [487], "org.apache.commons.csv.CSVParserTest::testLineFeedEndings": [396, 405, 414, 433, 443, 460, 469], "org.apache.commons.csv.CSVParserTest::testProvidedHeaderAuto": [300, 301, 303, 304, 305, 306, 308, 309, 396, 405, 414, 423, 433, 443, 460, 469, 569, 753], "org.apache.commons.csv.CSVPrinterTest::testPrinter5": [487], "org.apache.commons.csv.CSVFormatTest::testDelimiterSameAsCommentStartThrowsException": [300, 303, 626, 627, 666, 684, 701], "org.apache.commons.csv.CSVParserTest::testGetHeaderMap": [300, 301, 303, 304, 305, 306, 308, 309, 396, 405, 414, 423, 433, 443, 460, 469, 753]}, "org.apache.commons.csv.CSVParser": {"org.apache.commons.csv.CSVParserTest::testIgnoreEmptyLines": [172, 214, 218, 242, 243, 249, 250, 251, 313, 315, 316, 318, 424, 425, 428, 429, 430, 432, 435, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testEndOfFileBehaviorCSV": [172, 214, 218, 242, 243, 249, 250, 251, 313, 315, 316, 318, 424, 425, 428, 429, 430, 432, 435, 438, 439, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testCarriageReturnLineFeedEndings": [172, 214, 218, 242, 243, 249, 250, 251, 313, 315, 316, 318, 424, 425, 428, 429, 430, 432, 435, 438, 439, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testEmptyLineBehaviourCSV": [172, 214, 218, 242, 243, 249, 250, 251, 313, 315, 316, 318, 424, 425, 428, 429, 430, 432, 435, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testSkipSetHeader": [214, 218, 242, 243, 244, 249, 250, 251, 328, 329, 330, 333, 340, 341, 343, 347, 348, 349, 353, 369, 425, 428, 429, 430, 432, 435, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testNoHeaderMap": [172, 242, 244, 288, 327, 328, 329, 353], "org.apache.commons.csv.CSVParserTest::testParseNullFileFormat": [149], "org.apache.commons.csv.CSVParserTest::testParseStringNullFormat": [170], "org.apache.commons.csv.CSVParserTest::testCarriageReturnEndings": [172, 214, 218, 242, 243, 249, 250, 251, 313, 315, 316, 318, 424, 425, 428, 429, 430, 432, 435, 438, 439, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testExcelFormat1": [172, 214, 218, 242, 243, 249, 250, 251, 313, 315, 316, 318, 424, 425, 428, 429, 430, 432, 435, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testParseNullUrlCharsetFormat": [196], "org.apache.commons.csv.CSVPrinterTest::testParseCustomNullValues": [214, 218, 242, 243, 249, 250, 253, 357, 369, 424, 425, 428, 429, 430, 432, 435, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testCSV57": [172, 218, 243, 313, 315, 318, 424, 429, 454, 462], "org.apache.commons.csv.CSVParserTest::testSkipAutoHeader": [214, 218, 242, 243, 244, 249, 250, 251, 328, 329, 330, 333, 335, 336, 337, 347, 348, 349, 353, 369, 425, 428, 429, 430, 432, 435, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testMultipleIterators": [172, 214, 218, 242, 243, 249, 250, 251, 369, 425, 428, 429, 430, 432, 435, 438, 439, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testExcelFormat2": [172, 214, 218, 242, 243, 249, 250, 251, 313, 315, 316, 318, 424, 425, 428, 429, 430, 432, 435, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testHeaderComment": [214, 218, 242, 243, 244, 249, 250, 251, 328, 329, 330, 333, 335, 336, 337, 347, 348, 349, 353, 357, 369, 424, 425, 428, 429, 430, 432, 435, 438, 439, 451, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testParserUrlNullCharsetFormat": [197], "org.apache.commons.csv.CSVParserTest::testRoundtrip": [172, 214, 218, 242, 243, 249, 250, 251, 357, 369, 424, 425, 428, 429, 430, 432, 435, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testEmptyLineBehaviourExcel": [172, 214, 218, 242, 243, 249, 250, 251, 313, 315, 316, 318, 424, 425, 428, 429, 430, 432, 435, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testGetLine": [172, 214, 218, 242, 243, 249, 250, 251, 424, 425, 428, 429, 430, 432, 435, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testParseNullStringFormat": [169], "org.apache.commons.csv.CSVParserTest::testBackslashEscaping": [172, 214, 218, 242, 243, 249, 250, 251, 313, 315, 316, 318, 424, 425, 428, 429, 430, 432, 435, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testClose": [214, 218, 242, 243, 244, 249, 250, 251, 328, 329, 333, 335, 357, 369, 425, 428, 429, 430, 432, 435, 451, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testGetRecordWithMultiLineValues": [172, 214, 218, 242, 243, 249, 250, 251, 277, 299, 424, 425, 428, 429, 430, 432, 435, 438, 439, 454, 456, 457, 459, 462], "org.apache.commons.csv.CSVParserTest::testMappedButNotSetAsOutlook2007ContactExport": [214, 218, 242, 243, 244, 249, 250, 251, 328, 329, 330, 333, 340, 341, 343, 347, 348, 349, 353, 357, 369, 424, 425, 428, 429, 430, 432, 435, 438, 439, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testForEach": [214, 218, 242, 243, 249, 250, 251, 357, 369, 424, 425, 428, 429, 430, 432, 435, 438, 439, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testEndOfFileBehaviourExcel": [172, 214, 218, 242, 243, 249, 250, 251, 313, 315, 316, 318, 424, 425, 428, 429, 430, 432, 435, 438, 439, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testProvidedHeader": [214, 218, 242, 243, 244, 249, 250, 251, 328, 329, 330, 333, 343, 347, 348, 349, 353, 357, 369, 424, 425, 428, 429, 430, 432, 435, 438, 439, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testLineFeedEndings": [172, 214, 218, 242, 243, 249, 250, 251, 313, 315, 316, 318, 424, 425, 428, 429, 430, 432, 435, 438, 439, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testParseUrlCharsetNullFormat": [198], "org.apache.commons.csv.CSVParserTest::testNewCSVParserNullReaderFormat": [238], "org.apache.commons.csv.CSVParserTest::testProvidedHeaderAuto": [214, 218, 242, 243, 244, 249, 250, 251, 328, 329, 330, 333, 335, 336, 337, 347, 348, 349, 353, 357, 369, 424, 425, 428, 429, 430, 432, 435, 438, 439, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testIterator": [214, 218, 242, 243, 249, 250, 251, 357, 369, 424, 425, 428, 429, 430, 432, 435, 438, 439, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testDefaultFormat": [172, 214, 218, 242, 243, 249, 250, 251, 313, 315, 316, 318, 424, 425, 428, 429, 430, 432, 435, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testEmptyFile": [172, 218, 243, 424, 429, 454, 462], "org.apache.commons.csv.CSVParserTest::testHeader": [214, 218, 242, 243, 244, 249, 250, 251, 328, 329, 330, 333, 335, 336, 337, 347, 348, 349, 353, 357, 369, 424, 425, 428, 429, 430, 432, 435, 438, 439, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testParseFileNullFormat": [150], "org.apache.commons.csv.CSVParserTest::testGetHeaderMap": [172, 214, 218, 242, 243, 244, 249, 250, 251, 288, 328, 329, 330, 333, 343, 347, 348, 349, 353, 357, 369, 424, 425, 428, 429, 430, 432, 435, 438, 439, 454, 456, 459, 462], "org.apache.commons.csv.CSVParserTest::testNewCSVParserReaderNullFormat": [239], "org.apache.commons.csv.CSVParserTest::testGetRecords": [172, 214, 218, 242, 243, 249, 250, 251, 313, 315, 316, 318, 424, 425, 428, 429, 430, 432, 435, 454, 456, 459, 462]}, "org.apache.commons.csv.Token": {"org.apache.commons.csv.CSVParserTest::testCarriageReturnLineFeedEndings": [62], "org.apache.commons.csv.CSVParserTest::testEmptyLineBehaviourCSV": [62], "org.apache.commons.csv.CSVParserTest::testSkipSetHeader": [62], "org.apache.commons.csv.CSVParserTest::testProvidedHeader": [62], "org.apache.commons.csv.CSVParserTest::testCarriageReturnEndings": [62], "org.apache.commons.csv.CSVParserTest::testExcelFormat1": [62], "org.apache.commons.csv.CSVPrinterTest::testParseCustomNullValues": [62], "org.apache.commons.csv.CSVParserTest::testSkipAutoHeader": [62], "org.apache.commons.csv.CSVParserTest::testMultipleIterators": [62], "org.apache.commons.csv.CSVParserTest::testExcelFormat2": [62], "org.apache.commons.csv.CSVParserTest::testHeaderComment": [62], "org.apache.commons.csv.CSVParserTest::testRoundtrip": [62], "org.apache.commons.csv.CSVParserTest::testGetLine": [62], "org.apache.commons.csv.CSVParserTest::testEmptyLineBehaviourExcel": [62], "org.apache.commons.csv.CSVParserTest::testBackslashEscaping": [62], "org.apache.commons.csv.CSVParserTest::testClose": [62], "org.apache.commons.csv.CSVParserTest::testGetRecordWithMultiLineValues": [62], "org.apache.commons.csv.CSVParserTest::testMappedButNotSetAsOutlook2007ContactExport": [62], "org.apache.commons.csv.CSVParserTest::testForEach": [62], "org.apache.commons.csv.CSVParserTest::testEndOfFileBehaviourExcel": [62], "org.apache.commons.csv.CSVParserTest::testEndOfFileBehaviorCSV": [62], "org.apache.commons.csv.CSVParserTest::testLineFeedEndings": [62], "org.apache.commons.csv.CSVParserTest::testProvidedHeaderAuto": [62], "org.apache.commons.csv.CSVParserTest::testDefaultFormat": [62], "org.apache.commons.csv.CSVParserTest::testIterator": [62], "org.apache.commons.csv.CSVParserTest::testHeader": [62], "org.apache.commons.csv.CSVParserTest::testGetHeaderMap": [62], "org.apache.commons.csv.CSVParserTest::testIgnoreEmptyLines": [62], "org.apache.commons.csv.CSVParserTest::testGetRecords": [62]}, "org.apache.commons.csv.Assertions": {"org.apache.commons.csv.CSVParserTest::testNewCSVParserNullReaderFormat": [32, 33], "org.apache.commons.csv.CSVParserTest::testParseNullUrlCharsetFormat": [32, 33], "org.apache.commons.csv.CSVParserTest::testParseNullFileFormat": [32, 33], "org.apache.commons.csv.CSVPrinterTest::testNewCsvPrinterAppendableNullFormat": [32, 33], "org.apache.commons.csv.CSVParserTest::testParseNullStringFormat": [32, 33], "org.apache.commons.csv.CSVParserTest::testParserUrlNullCharsetFormat": [32, 33], "org.apache.commons.csv.CSVParserTest::testNewCSVParserReaderNullFormat": [32, 33], "org.apache.commons.csv.CSVPrinterTest::testNewCSVPrinterNullAppendableFormat": [32, 33], "org.apache.commons.csv.CSVParserTest::testParseUrlCharsetNullFormat": [32, 33], "org.apache.commons.csv.CSVParserTest::testParseStringNullFormat": [32, 33], "org.apache.commons.csv.CSVParserTest::testParseFileNullFormat": [32, 33]}, "org.apache.commons.csv.Lexer": {"org.apache.commons.csv.CSVParserTest::testCarriageReturnLineFeedEndings": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 113, 118, 132, 134, 142, 144, 145, 148, 149, 152, 160, 188, 189, 191, 192, 193, 195, 196, 198, 208, 291, 364, 366, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testEmptyLineBehaviourCSV": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 99, 100, 101, 103, 104, 112, 118, 132, 134, 142, 145, 148, 149, 151, 152, 160, 188, 191, 195, 196, 198, 208, 244, 246, 253, 254, 261, 262, 265, 269, 270, 291, 364, 366, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testSkipSetHeader": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 118, 132, 134, 142, 145, 149, 152, 160, 188, 189, 191, 195, 196, 198, 208, 291, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testEndOfFileBehaviorCSV": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 99, 100, 101, 103, 112, 113, 118, 132, 134, 142, 145, 148, 149, 151, 152, 155, 156, 160, 188, 191, 195, 196, 198, 208, 244, 246, 253, 254, 261, 262, 265, 266, 267, 269, 270, 291, 364, 366, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testCarriageReturnEndings": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 113, 118, 132, 134, 142, 144, 145, 148, 149, 152, 160, 188, 189, 191, 192, 193, 195, 196, 198, 208, 291, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testExcelFormat1": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 112, 113, 118, 132, 134, 142, 144, 145, 148, 149, 151, 152, 160, 188, 189, 191, 195, 196, 198, 208, 244, 246, 253, 254, 256, 261, 262, 263, 291, 364, 366, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVPrinterTest::testParseCustomNullValues": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 113, 118, 132, 134, 142, 145, 149, 152, 160, 188, 189, 191, 195, 196, 198, 208, 291, 364, 366, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testCSV57": [62, 63, 68, 85, 88, 93, 96, 97, 112, 113, 368, 396, 400], "org.apache.commons.csv.CSVParserTest::testSkipAutoHeader": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 118, 132, 134, 142, 145, 149, 152, 160, 188, 189, 191, 195, 196, 198, 208, 291, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testMultipleIterators": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 118, 132, 134, 142, 145, 149, 152, 160, 188, 189, 191, 192, 193, 195, 196, 198, 208, 291, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testExcelFormat2": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 112, 113, 118, 132, 134, 142, 145, 148, 149, 152, 160, 188, 189, 191, 195, 196, 198, 208, 291, 364, 366, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testHeaderComment": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 113, 118, 119, 120, 127, 132, 134, 142, 145, 149, 152, 160, 188, 189, 191, 192, 193, 195, 196, 198, 208, 291, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testRoundtrip": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 113, 118, 132, 134, 142, 145, 149, 152, 160, 188, 189, 191, 195, 196, 198, 208, 291, 364, 366, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testGetLine": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 113, 118, 132, 134, 135, 136, 137, 142, 145, 148, 149, 151, 152, 160, 188, 189, 191, 195, 196, 198, 208, 244, 246, 253, 254, 256, 261, 262, 263, 291, 368, 379, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testEmptyLineBehaviourExcel": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 112, 113, 118, 132, 134, 142, 145, 148, 149, 151, 152, 160, 188, 191, 195, 196, 198, 208, 244, 246, 253, 254, 261, 262, 265, 269, 270, 291, 364, 366, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testBackslashEscaping": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 113, 118, 132, 134, 142, 145, 149, 151, 152, 160, 188, 189, 191, 195, 196, 198, 199, 205, 208, 244, 246, 247, 253, 254, 256, 261, 262, 263, 265, 269, 270, 291, 317, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testClose": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 118, 119, 120, 127, 132, 134, 142, 145, 149, 152, 160, 188, 189, 191, 195, 196, 198, 208, 291, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testGetRecordWithMultiLineValues": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 113, 118, 132, 134, 142, 145, 149, 151, 244, 246, 253, 254, 261, 262, 263, 265, 266, 267, 269, 270, 291, 364, 366, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testMappedButNotSetAsOutlook2007ContactExport": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 113, 118, 132, 134, 142, 145, 149, 152, 160, 188, 189, 191, 192, 193, 195, 196, 198, 208, 291, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testForEach": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 113, 118, 132, 134, 142, 145, 149, 152, 160, 188, 189, 191, 192, 193, 195, 196, 198, 208, 291, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testEndOfFileBehaviourExcel": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 112, 113, 118, 132, 134, 142, 145, 148, 149, 151, 152, 155, 156, 160, 188, 191, 195, 196, 198, 208, 244, 246, 253, 254, 261, 262, 265, 266, 267, 269, 270, 291, 364, 366, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testProvidedHeader": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 113, 118, 132, 134, 142, 145, 149, 152, 160, 188, 189, 191, 192, 193, 195, 196, 198, 208, 291, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testEmptyFile": [62, 63, 68, 85, 88, 93, 96, 97, 112, 113, 368, 396, 400], "org.apache.commons.csv.CSVParserTest::testLineFeedEndings": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 113, 118, 132, 134, 142, 144, 145, 148, 149, 152, 160, 188, 189, 191, 192, 193, 195, 196, 198, 208, 291, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testProvidedHeaderAuto": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 113, 118, 132, 134, 142, 145, 149, 152, 160, 188, 189, 191, 192, 193, 195, 196, 198, 208, 291, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testDefaultFormat": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 113, 118, 132, 134, 142, 145, 149, 151, 152, 160, 188, 189, 191, 195, 196, 198, 208, 244, 246, 253, 254, 261, 262, 263, 265, 269, 270, 291, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testIterator": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 113, 118, 132, 134, 142, 145, 149, 152, 160, 188, 189, 191, 192, 193, 195, 196, 198, 208, 291, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testHeader": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 113, 118, 132, 134, 142, 145, 149, 152, 160, 188, 189, 191, 192, 193, 195, 196, 198, 208, 291, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testGetHeaderMap": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 113, 118, 132, 134, 142, 145, 149, 152, 160, 188, 189, 191, 192, 193, 195, 196, 198, 208, 291, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testIgnoreEmptyLines": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 99, 100, 101, 103, 104, 112, 118, 132, 134, 142, 144, 145, 148, 149, 152, 160, 188, 189, 191, 195, 196, 198, 208, 291, 364, 366, 368, 389, 396, 400, 404, 408, 412], "org.apache.commons.csv.CSVParserTest::testGetRecords": [62, 63, 64, 65, 66, 67, 68, 85, 88, 93, 96, 97, 112, 113, 118, 132, 134, 135, 136, 137, 142, 145, 148, 149, 151, 152, 160, 188, 189, 191, 195, 196, 198, 208, 244, 246, 253, 254, 256, 261, 262, 263, 291, 368, 379, 389, 396, 400, 404, 408, 412]}, "org.apache.commons.csv.CSVRecord": {"org.apache.commons.csv.CSVParserTest::testEmptyLineBehaviourExcel": [54, 220], "org.apache.commons.csv.CSVRecordTest::testIsConsistent": [54, 55, 139], "org.apache.commons.csv.CSVParserTest::testSkipSetHeader": [54, 55, 99, 105], "org.apache.commons.csv.CSVParserTest::testProvidedHeader": [54, 55, 78, 99, 105, 150], "org.apache.commons.csv.CSVRecordTest::testIsMapped": [55, 150], "org.apache.commons.csv.CSVParserTest::testExcelFormat1": [54, 220], "org.apache.commons.csv.CSVPrinterTest::testParseCustomNullValues": [54, 78], "org.apache.commons.csv.CSVRecordTest::testGetUnmappedEnum": [55, 67, 99, 100, 101], "org.apache.commons.csv.CSVParserTest::testMultipleIterators": [54, 78], "org.apache.commons.csv.CSVRecordTest::testGetStringInconsistentRecord": [54, 55, 99, 105, 107], "org.apache.commons.csv.CSVParserTest::testExcelFormat2": [54, 220], "org.apache.commons.csv.CSVParserTest::testHeaderComment": [54, 55, 78, 99, 105, 220], "org.apache.commons.csv.CSVParserTest::testRoundtrip": [54, 170, 202], "org.apache.commons.csv.CSVParserTest::testGetLine": [54, 220], "org.apache.commons.csv.CSVParserTest::testEmptyLineBehaviourCSV": [54, 220], "org.apache.commons.csv.CSVParserTest::testSkipAutoHeader": [54, 55, 99, 105, 220], "org.apache.commons.csv.CSVParserTest::testGetRecordWithMultiLineValues": [53, 129], "org.apache.commons.csv.CSVParserTest::testMappedButNotSetAsOutlook2007ContactExport": [54, 55, 99, 105, 139, 150, 161], "org.apache.commons.csv.CSVParserTest::testForEach": [54, 220], "org.apache.commons.csv.CSVRecordTest::testGetUnmappedName": [55, 99, 100, 101], "org.apache.commons.csv.CSVParserTest::testEndOfFileBehaviourExcel": [54, 220], "org.apache.commons.csv.CSVRecordTest::testGetInt": [54, 78], "org.apache.commons.csv.CSVParserTest::testProvidedHeaderAuto": [54, 55, 78, 99, 105, 150, 220], "org.apache.commons.csv.CSVRecordTest::testIsSet": [54, 55, 150, 161], "org.apache.commons.csv.CSVRecordTest::testGetUnmappedNegativeInt": [54, 78], "org.apache.commons.csv.CSVParserTest::testIterator": [54, 220], "org.apache.commons.csv.CSVParserTest::testHeader": [54, 55, 78, 99, 105, 220], "org.apache.commons.csv.CSVRecordTest::testGetStringNoHeader": [55, 95, 96], "org.apache.commons.csv.CSVRecordTest::testGetString": [54, 55, 99, 105], "org.apache.commons.csv.CSVParserTest::testGetHeaderMap": [54, 55, 78, 99, 105], "org.apache.commons.csv.CSVParserTest::testEndOfFileBehaviorCSV": [54, 220], "org.apache.commons.csv.CSVParserTest::testGetRecords": [54, 220], "org.apache.commons.csv.CSVRecordTest::testIterator": [54, 170, 202]}, "org.apache.commons.csv.ExtendedBufferedReader": {"org.apache.commons.csv.CSVParserTest::testCarriageReturnLineFeedEndings": [40, 51, 56, 60, 61, 73, 140, 141, 142, 144], "org.apache.commons.csv.CSVParserTest::testEmptyLineBehaviourCSV": [40, 51, 56, 60, 61, 73, 140, 141, 142, 144], "org.apache.commons.csv.CSVParserTest::testSkipSetHeader": [40, 56, 60, 61, 73], "org.apache.commons.csv.CSVParserTest::testEndOfFileBehaviorCSV": [40, 51, 56, 60, 61, 73, 140, 141, 142, 144], "org.apache.commons.csv.CSVParserTest::testCarriageReturnEndings": [40, 56, 60, 61, 73], "org.apache.commons.csv.CSVParserTest::testExcelFormat1": [40, 51, 56, 60, 61, 73, 140, 141, 142, 144], "org.apache.commons.csv.CSVPrinterTest::testParseCustomNullValues": [40, 51, 56, 60, 61, 73, 141, 144], "org.apache.commons.csv.CSVParserTest::testCSV57": [40, 56, 60, 61, 73], "org.apache.commons.csv.CSVParserTest::testSkipAutoHeader": [40, 56, 60, 61, 73], "org.apache.commons.csv.CSVParserTest::testMultipleIterators": [40, 56, 60, 61, 73], "org.apache.commons.csv.CSVParserTest::testExcelFormat2": [40, 51, 56, 60, 61, 73, 140, 141, 142, 144], "org.apache.commons.csv.CSVParserTest::testHeaderComment": [40, 56, 60, 61, 73, 118, 120, 121, 127], "org.apache.commons.csv.CSVParserTest::testRoundtrip": [40, 51, 56, 60, 61, 73, 140, 141, 142, 144], "org.apache.commons.csv.CSVParserTest::testGetLine": [40, 51, 56, 60, 61, 73, 140, 141, 142, 144], "org.apache.commons.csv.CSVParserTest::testEmptyLineBehaviourExcel": [40, 51, 56, 60, 61, 73, 140, 141, 142, 144], "org.apache.commons.csv.CSVParserTest::testBackslashEscaping": [40, 51, 56, 60, 61, 73, 140, 141, 142, 144], "org.apache.commons.csv.CSVParserTest::testClose": [40, 56, 60, 61, 73, 118, 120, 121, 127], "org.apache.commons.csv.CSVParserTest::testGetRecordWithMultiLineValues": [40, 51, 56, 60, 61, 73, 140, 141, 142, 144], "org.apache.commons.csv.CSVParserTest::testMappedButNotSetAsOutlook2007ContactExport": [40, 56, 60, 61, 73], "org.apache.commons.csv.CSVParserTest::testForEach": [40, 56, 60, 61, 73], "org.apache.commons.csv.CSVParserTest::testEndOfFileBehaviourExcel": [40, 51, 56, 60, 61, 73, 140, 141, 142, 144], "org.apache.commons.csv.CSVParserTest::testProvidedHeader": [40, 56, 60, 61, 73], "org.apache.commons.csv.CSVParserTest::testEmptyFile": [40, 56, 60, 61, 73], "org.apache.commons.csv.CSVParserTest::testLineFeedEndings": [40, 56, 60, 61, 73], "org.apache.commons.csv.CSVParserTest::testProvidedHeaderAuto": [40, 56, 60, 61, 73], "org.apache.commons.csv.CSVParserTest::testDefaultFormat": [40, 51, 56, 60, 61, 73, 140, 141, 142, 144], "org.apache.commons.csv.CSVParserTest::testIterator": [40, 56, 60, 61, 73], "org.apache.commons.csv.CSVParserTest::testHeader": [40, 56, 60, 61, 73], "org.apache.commons.csv.CSVParserTest::testGetHeaderMap": [40, 56, 60, 61, 73], "org.apache.commons.csv.CSVParserTest::testIgnoreEmptyLines": [40, 51, 56, 60, 61, 73, 140, 141, 142, 144], "org.apache.commons.csv.CSVParserTest::testGetRecords": [40, 51, 56, 60, 61, 73, 140, 141, 142, 144]}}