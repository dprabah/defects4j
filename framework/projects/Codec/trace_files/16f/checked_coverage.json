{"org.apache.commons.codec.binary.BaseNCodecInputStream": {"org.apache.commons.codec.binary.Base32InputStreamTest::testSkipPastEnd": [42, 45, 46, 47, 97, 98, 101, 105, 135, 138, 155, 156, 157, 158, 159, 162, 165, 167, 197, 198, 200, 201, 202, 203, 206, 209], "org.apache.commons.codec.binary.Base32InputStreamTest::testSkipBig": [42, 45, 46, 47, 97, 98, 101, 105, 135, 138, 155, 156, 157, 158, 159, 162, 165, 167, 197, 198, 200, 201, 202, 203, 206, 209], "org.apache.commons.codec.binary.Base32InputStreamTest::testCodec130": [42, 45, 46, 47, 135, 138, 155, 156, 157, 158, 159, 162, 165, 167, 197, 198, 200, 201, 202], "org.apache.commons.codec.binary.Base32InputStreamTest::testAvailable": [42, 45, 46, 47, 64, 97, 98, 101, 105, 135, 138, 155, 156, 157, 158, 159, 162, 165, 167, 197, 198, 200, 201, 202, 203, 206, 209], "org.apache.commons.codec.binary.Base32InputStreamTest::testReadOutOfBounds": [131, 132, 133, 134], "org.apache.commons.codec.binary.Base32InputStreamTest::testMarkSupported": [85], "org.apache.commons.codec.binary.Base32InputStreamTest::testReadNull": [129, 130], "org.apache.commons.codec.binary.Base32InputStreamTest::testSkipToEnd": [42, 45, 46, 47, 97, 98, 101, 105, 135, 138, 155, 156, 157, 158, 159, 162, 165, 167, 197, 198, 200, 201, 202, 203, 206, 209], "org.apache.commons.codec.binary.Base32InputStreamTest::testSkipNone": [42, 45, 46, 47, 97, 98, 101, 105, 135, 138, 155, 156, 157, 158, 159, 162, 165, 167, 198, 200, 209], "org.apache.commons.codec.binary.Base32InputStreamTest::testSkipWrongArgument": [192, 193], "org.apache.commons.codec.binary.Base32InputStreamTest::testRead0": [135, 136]}, "org.apache.commons.codec.binary.BaseNCodec": {"org.apache.commons.codec.binary.Base32Test::testRandomBytesChunked": [206, 207, 208, 209, 210, 249, 251, 252, 269, 270, 426, 427, 429, 430, 431, 432, 434, 518, 519, 521, 523], "org.apache.commons.codec.binary.Base32Test::testRandomBytes": [206, 207, 208, 209, 249, 251, 252, 269, 270, 426, 427, 429, 430, 431, 432, 434, 518, 523], "org.apache.commons.codec.binary.Base32Test::testRandomBytesHex": [206, 207, 208, 209, 249, 251, 252, 269, 270, 426, 427, 429, 430, 431, 432, 434, 518, 523], "org.apache.commons.codec.binary.Base32Test::testBase32Samples": [249, 251, 252, 269, 270, 361, 426, 427, 429, 430, 431, 432, 434], "org.apache.commons.codec.binary.Base32Test::testBase32SamplesNonDefaultPadding": [249, 251, 252, 269, 270, 361, 426, 427, 429, 430, 431, 432, 434], "org.apache.commons.codec.binary.Base32Test::testBase32HexSamples": [249, 251, 252, 269, 270, 361, 426, 427, 429, 430, 431, 432, 434], "org.apache.commons.codec.binary.Base32Test::testBase32Chunked": [208, 209, 249, 251, 252, 269, 270, 361, 426, 427, 429, 430, 431, 432, 434], "org.apache.commons.codec.binary.Base32InputStreamTest::testSkipPastEnd": [212, 222, 232, 241, 249, 250, 251, 252, 269, 270, 292, 293, 295, 296, 297, 299, 301], "org.apache.commons.codec.binary.Base32InputStreamTest::testSkipBig": [212, 222, 232, 241, 249, 250, 251, 252, 269, 270, 292, 293, 295, 296, 297, 299, 301], "org.apache.commons.codec.binary.Base32InputStreamTest::testCodec130": [212, 222, 232, 241, 249, 250, 251, 252, 269, 270, 292, 293, 295, 296, 297, 299, 301], "org.apache.commons.codec.binary.Base32InputStreamTest::testAvailable": [212, 222, 232, 241, 249, 250, 251, 252, 269, 270, 292, 293, 295, 296, 297, 299, 301], "org.apache.commons.codec.binary.Base32InputStreamTest::testSkipToEnd": [212, 222, 232, 241, 249, 250, 251, 252, 269, 270, 292, 293, 295, 296, 297, 299, 301], "org.apache.commons.codec.binary.Base32InputStreamTest::testSkipNone": [212, 222, 232, 241, 249, 250, 251, 252, 269, 270, 292, 293, 295, 296, 297, 301]}, "org.apache.commons.codec.binary.Base32OutputStream": {"org.apache.commons.codec.binary.Base32InputStreamTest::testCodec130": [52, 65]}, "org.apache.commons.codec.binary.BaseNCodecOutputStream": {"org.apache.commons.codec.binary.Base32OutputStreamTest::testWriteToNullCoverage": [91, 92], "org.apache.commons.codec.binary.Base32OutputStreamTest::testWriteOutOfBounds": [93, 94, 95, 96], "org.apache.commons.codec.binary.Base32InputStreamTest::testCodec130": [48, 52, 54, 97, 98, 99, 103, 117, 118, 120, 121, 122, 138, 155, 156, 169, 170]}, "org.apache.commons.codec.binary.Base32InputStream": {"org.apache.commons.codec.binary.Base32InputStreamTest::testSkipPastEnd": [48, 61], "org.apache.commons.codec.binary.Base32InputStreamTest::testSkipBig": [48, 61], "org.apache.commons.codec.binary.Base32InputStreamTest::testCodec130": [48, 61], "org.apache.commons.codec.binary.Base32InputStreamTest::testAvailable": [48, 61], "org.apache.commons.codec.binary.Base32InputStreamTest::testSkipToEnd": [48, 61], "org.apache.commons.codec.binary.Base32InputStreamTest::testSkipNone": [48, 61]}, "org.apache.commons.codec.binary.StringUtils": {"org.apache.commons.codec.binary.Base32Test::testBase32Samples": [293, 419], "org.apache.commons.codec.binary.Base32Test::testBase32SamplesNonDefaultPadding": [293, 419], "org.apache.commons.codec.binary.Base32Test::testBase32HexSamples": [293, 419], "org.apache.commons.codec.binary.Base32Test::testBase32Chunked": [293, 419], "org.apache.commons.codec.binary.Base32InputStreamTest::testSkipPastEnd": [94, 97, 150], "org.apache.commons.codec.binary.Base32InputStreamTest::testSkipBig": [94, 97, 150], "org.apache.commons.codec.binary.Base32InputStreamTest::testCodec130": [94, 97, 271, 293, 419], "org.apache.commons.codec.binary.Base32InputStreamTest::testAvailable": [94, 97, 150], "org.apache.commons.codec.binary.Base32InputStreamTest::testSkipToEnd": [94, 97, 150], "org.apache.commons.codec.binary.Base32InputStreamTest::testSkipNone": [94, 97, 150]}, "org.apache.commons.codec.binary.Base32": {"org.apache.commons.codec.binary.Base32Test::testRandomBytesChunked": [208, 230, 281, 290, 300, 435, 440, 442, 446, 447, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 493, 495, 497, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521], "org.apache.commons.codec.binary.Base32Test::testRandomBytes": [159, 181, 281, 435, 440, 442, 447, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516], "org.apache.commons.codec.binary.Base32Test::testRandomBytesHex": [181, 281, 435, 440, 442, 447, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516], "org.apache.commons.codec.binary.Base32Test::testBase32Samples": [435, 440, 442, 447, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516], "org.apache.commons.codec.binary.Base32Test::testBase32SamplesNonDefaultPadding": [435, 440, 442, 447, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516], "org.apache.commons.codec.binary.Base32Test::testBase32HexSamples": [435, 440, 442, 447, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516], "org.apache.commons.codec.binary.Base32Test::testBase32Chunked": [208, 230, 281, 290, 300, 435, 440, 442, 446, 447, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 493, 495, 497, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517], "org.apache.commons.codec.binary.Base32InputStreamTest::testSkipPastEnd": [181, 281, 283, 288, 339, 345, 346, 347, 349, 352, 353, 354, 355, 356, 374, 378, 392, 393, 394], "org.apache.commons.codec.binary.Base32InputStreamTest::testSkipBig": [181, 281, 283, 288, 339, 345, 346, 347, 349, 352, 353, 354, 355, 356, 374, 378, 392, 393, 394], "org.apache.commons.codec.binary.Base32InputStreamTest::testCodec130": [181, 281, 283, 288, 339, 345, 346, 347, 349, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 374, 378, 380, 435, 440, 442, 445, 447, 451, 452, 453, 454, 455, 456, 457, 458, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516], "org.apache.commons.codec.binary.Base32InputStreamTest::testAvailable": [181, 281, 283, 288, 339, 345, 346, 347, 349, 352, 353, 354, 355, 356, 374, 378, 392, 393, 394], "org.apache.commons.codec.binary.Base32InputStreamTest::testSkipToEnd": [181, 281, 283, 288, 339, 345, 346, 347, 349, 352, 353, 354, 355, 356, 374, 378, 392, 393, 394], "org.apache.commons.codec.binary.Base32InputStreamTest::testSkipNone": [181, 281, 283, 288, 339, 345, 346, 347, 349, 352, 353, 354, 355, 356, 374, 378, 392, 393, 394]}}