{"com.fasterxml.jackson.databind.deser.std.NumberDeserializers": {"statement_coverable_lines": [20, 22, 25, 37, 38, 40, 43, 44, 45, 47, 48, 50, 51, 53, 54, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 73, 74, 76, 77, 79, 80, 82, 83, 85, 86, 88, 89, 91, 92, 94, 95, 97, 98, 100, 101, 104, 107, 587], "checked_coverable_lines": [20, 22, 25, 37, 38, 43, 44, 45, 47, 48, 50, 51, 53, 54, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 73, 74, 76, 77, 79, 80, 82, 83, 85, 86, 88, 89, 91, 92, 94, 95, 97, 98, 100, 101, 104, 107, 587]}, "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$1": {"statement_coverable_lines": [547], "checked_coverable_lines": []}, "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer": {"statement_coverable_lines": [587, 592, 594, 600, 603, 605, 606, 607, 610, 611, 612, 615, 616, 617, 618, 619, 623, 628], "checked_coverable_lines": []}, "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer": {"statement_coverable_lines": [532, 537, 539, 545, 547, 551, 553, 555, 556, 558, 560, 561, 562, 563, 564, 568, 572, 573, 574, 577, 578, 579, 583], "checked_coverable_lines": []}, "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer": {"statement_coverable_lines": [167, 173, 174, 178, 179, 184, 194], "checked_coverable_lines": []}, "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer": {"statement_coverable_lines": [198, 204, 205, 209, 210, 215], "checked_coverable_lines": []}, "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer": {"statement_coverable_lines": [241, 247, 248, 252, 253, 259, 261, 262, 263, 268, 269, 270, 273, 274, 278, 279, 280, 281, 282, 286, 289], "checked_coverable_lines": []}, "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer": {"statement_coverable_lines": [377, 383, 384, 387, 388, 392, 401], "checked_coverable_lines": []}, "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer": {"statement_coverable_lines": [357, 363, 364, 367, 368, 373], "checked_coverable_lines": []}, "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer": {"statement_coverable_lines": [293, 299, 300, 303, 304, 308, 312, 313, 315, 324, 325, 327], "checked_coverable_lines": []}, "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer": {"statement_coverable_lines": [331, 337, 338, 341, 342, 346, 350, 351, 353], "checked_coverable_lines": []}, "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer": {"statement_coverable_lines": [420, 423, 424, 429, 431, 432, 434, 437, 438, 440, 446, 447, 448, 450, 451, 453, 454, 456, 457, 459, 460, 463, 464, 465, 467, 469, 470, 472, 473, 474, 475, 478, 479, 480, 483, 484, 485, 486, 487, 491, 496, 510, 515, 517], "checked_coverable_lines": []}, "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer": {"statement_coverable_lines": [126, 127, 128, 129, 134, 135, 139, 145, 152, 153, 157], "checked_coverable_lines": []}, "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer": {"statement_coverable_lines": [219, 225, 226, 230, 231, 237], "checked_coverable_lines": []}}