{"com.google.gson.internal.bind.JsonTreeWriter": {"com.google.gson.internal.bind.JsonTreeWriterTest::testNestedArray": [49, 68, 76, 82, 83, 95, 96], "com.google.gson.internal.bind.JsonTreeWriterTest::testNestedObject": [49, 68, 76, 82, 83, 114, 115], "com.google.gson.internal.bind.JsonTreeWriterTest::testStrictBoxedNansAndInfinities": [184, 188, 189, 190, 191], "com.google.gson.internal.bind.JsonTreeWriterTest::testSerializeNullsFalse": [49, 68, 76, 82, 83, 114, 115], "com.google.gson.internal.bind.JsonTreeWriterTest::testLenientNansAndInfinities": [49, 68, 76, 82, 83, 95, 96], "com.google.gson.internal.bind.JsonTreeWriterTest::testSerializeNullsTrue": [49, 68, 76, 82, 83, 114, 115], "com.google.gson.internal.bind.JsonTreeWriterTest::testEmptyWriter": [55, 68], "com.google.gson.internal.bind.JsonTreeWriterTest::testStrictNansAndInfinities": [171, 172], "com.google.gson.internal.bind.JsonTreeWriterTest::testWriteAfterClose": [49, 72, 76, 82, 85, 86, 89, 95, 96, 97, 105, 106, 107, 206], "com.google.gson.internal.bind.JsonTreeWriterTest::testPrematureClose": [49, 97, 203, 204], "com.google.gson.internal.bind.JsonTreeWriterTest::testObject": [49, 68, 76, 82, 83, 114, 115], "com.google.gson.internal.bind.JsonTreeWriterTest::testArray": [49, 68, 76, 82, 83, 95, 96], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [49, 68, 72, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 95, 96, 97, 114, 115, 116, 124, 125, 126, 136, 137, 138, 145, 148, 184, 195], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 124, 125, 126, 136, 137, 138, 145, 148], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 124, 125, 126, 136, 137, 138, 184, 195], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148, 163, 166, 184, 195], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148, 163, 166, 184, 195], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 163, 166, 184, 195], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [49, 68, 72, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 95, 96, 97, 114, 115, 116, 124, 125, 126, 136, 137, 138, 145, 146, 148, 153], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [49, 68, 72, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 95, 96, 97, 114, 115, 116, 124, 125, 126, 136, 137, 138, 145, 146, 148, 153], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148, 184, 195], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [49, 68, 76, 82, 83, 153], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [49, 68, 72, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 95, 96, 97, 114, 115, 116, 124, 125, 126, 136, 137, 138, 145, 148], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [49, 68, 76, 82, 83, 114, 115], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [49, 68, 76, 82, 83, 114, 115]}, "com.google.gson.GsonBuilder": {"com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [79, 82, 84, 86, 115, 116, 563, 564, 566, 569], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [79, 82, 84, 86, 115, 116, 563, 564, 566, 569], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassSerialization": [569], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassDeserialization": [79, 84, 86, 115, 116, 563, 564, 566, 569], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [79, 82, 84, 86, 115, 116, 563, 564, 566, 569], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesSerialization": [569], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [79, 82, 84, 86, 115, 116, 563, 564, 566, 569], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [79, 82, 84, 86, 362, 521, 522, 528, 563, 564, 566, 569], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [84, 86, 521, 522, 528, 563, 564, 566, 569], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [84, 86, 479, 480, 481, 486, 525, 526, 528, 563, 564, 566, 569], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByStreaming": [569], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [84, 86, 479, 480, 481, 486, 521, 522, 528, 563, 564, 566, 569], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical": [84, 86, 521, 522, 525, 526, 528, 563, 564, 566, 569], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreamingHierarchical": [569], "com.google.gson.functional.TypeAdapterPrecedenceTest::testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter": [569], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [84, 86, 479, 480, 481, 483, 484, 486, 563, 564, 566, 569], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [79, 82, 84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [84, 86, 563, 564, 566, 569], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [79, 82, 84, 86, 563, 564, 566, 569], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [84, 86, 563, 564, 566, 569], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [84, 86, 563, 564, 566, 569], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [84, 86, 483, 484, 486, 563, 564, 566, 569], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [79, 82, 84, 86, 563, 564, 566, 569], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [79, 82, 84, 86, 563, 564, 566, 569], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [79, 82, 84, 86, 563, 564, 566, 569], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [79, 82, 84, 86, 563, 564, 566, 569], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [79, 82, 84, 86, 563, 564, 566, 569], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [79, 82, 84, 86, 483, 484, 486, 563, 564, 566, 569], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [79, 82, 84, 86, 563, 564, 566, 569], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [79, 82, 84, 86, 563, 564, 566, 569], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [79, 82, 84, 86, 563, 564, 566, 569], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [79, 82, 84, 86, 563, 564, 566, 569], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [79, 82, 84, 86, 563, 564, 566, 569], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [79, 82, 84, 86, 563, 564, 566, 569], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [79, 82, 84, 86, 146, 563, 564, 566, 569], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [79, 82, 84, 86, 563, 564, 566, 569], "com.google.gson.functional.PrimitiveTest::testNegativeInfinitySerialization": [569], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatSerialization": [569], "com.google.gson.functional.PrimitiveTest::testDoubleInfinitySerialization": [569], "com.google.gson.functional.PrimitiveTest::testFloatInfinitySerialization": [569], "com.google.gson.functional.PrimitiveTest::testDoubleNaNSerialization": [569], "com.google.gson.functional.PrimitiveTest::testFloatNaNSerialization": [569], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [79, 82, 84, 86, 476, 477, 486, 563, 564, 566, 569], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [79, 82, 84, 86, 476, 477, 486, 563, 564, 566, 569], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [79, 84, 86, 486, 563, 564, 566, 569], "com.google.gson.functional.ObjectTest::testAnonymousLocalClassesCustomSerialization": [569], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [79, 82, 84, 86, 169, 563, 564, 566, 569], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [79, 82, 84, 86, 169, 563, 564, 566, 569], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [79, 82, 84, 86, 563, 564, 566, 569], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [79, 82, 84, 86, 287, 563, 564, 566, 569], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicySerialization": [569], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicySerialiation": [569], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicySerialization": [569], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [79, 82, 84, 86, 563, 564, 566, 569], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [79, 82, 84, 86, 287, 563, 564, 566, 569], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [79, 82, 84, 86, 287, 563, 564, 566, 569], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicySerialization": [569], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [79, 82, 84, 86, 287, 563, 564, 566, 569], "com.google.gson.functional.MapTest::testCustomSerializerForSpecificMapType": [569], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [84, 86, 486, 563, 564, 566, 569], "com.google.gson.functional.MapTest::testGeneralMapField": [569], "com.google.gson.functional.MapTest::testSerializeMaps": [169, 362, 569], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [84, 86, 250, 563, 564, 566, 569], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [79, 82, 84, 86, 250, 563, 564, 566, 569], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [79, 82, 84, 86, 249, 250, 563, 564, 566, 569], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [79, 82, 84, 86, 250, 563, 564, 566, 569], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [79, 82, 84, 86, 483, 484, 486, 563, 564, 566, 569], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [82, 84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [79, 82, 84, 86, 274, 563, 564, 566, 569], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArrayWithStringSerializationPolicy": [84, 86, 274, 563, 564, 566, 569], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [79, 84, 86, 486, 563, 564, 566, 569], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [79, 84, 86, 486, 563, 564, 566, 569], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [79, 82, 84, 86, 476, 477, 486, 563, 564, 566, 569], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [82, 84, 86, 476, 477, 486, 563, 564, 566, 569], "com.google.gson.functional.FieldNamingTest::testIdentity": [569], "com.google.gson.functional.FieldNamingTest::testLowerCaseWithUnderscores": [569], "com.google.gson.functional.FieldNamingTest::testLowerCaseWithDashes": [569], "com.google.gson.functional.FieldNamingTest::testUpperCamelCaseWithSpaces": [569], "com.google.gson.functional.FieldNamingTest::testUpperCamelCase": [569], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [79, 82, 84, 86, 156, 157, 476, 477, 486, 563, 564, 566, 569], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationSerialization": [569], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [79, 82, 84, 86, 156, 157, 476, 477, 486, 563, 564, 566, 569], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [79, 82, 84, 86, 169, 350, 563, 564, 566, 569], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [79, 82, 84, 86, 169, 350, 563, 564, 566, 569], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [79, 82, 84, 86, 169, 333, 563, 564, 566, 569], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [79, 82, 84, 86, 333, 334, 563, 564, 566, 569], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserialization": [79, 84, 86, 350, 351, 563, 564, 566, 569], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerialization": [569], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [79, 82, 84, 86, 387, 563, 564, 566, 569], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [82, 84, 86, 521, 522, 528, 563, 564, 566, 569], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [84, 86, 498, 499, 563, 564, 566, 569], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [79, 82, 84, 86, 498, 499, 563, 564, 566, 569], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigIntegerTypeAdapter": [84, 86, 483, 484, 486, 563, 564, 566, 569], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [84, 86, 408, 409, 563, 564, 566, 567, 569, 578, 579, 586, 587, 588], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [84, 86, 408, 409, 429, 563, 564, 566, 567, 569, 578, 579, 586, 587, 588], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [84, 86, 563, 564, 566, 569], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigDecimalTypeAdapter": [84, 86, 483, 484, 486, 563, 564, 566, 569], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [84, 86, 408, 409, 563, 564, 566, 567, 569, 578, 579, 586, 587, 588], "com.google.gson.functional.DefaultTypeAdaptersTest::testClassDeserialization": [569], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [84, 86, 408, 409, 563, 564, 566, 567, 569, 578, 579, 586, 587, 588], "com.google.gson.functional.DefaultTypeAdaptersTest::testClassSerialization": [569], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomSerializerInvokedForPrimitives": [569], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [84, 86, 521, 522, 528, 563, 564, 566, 569], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomSerializers": [569], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedSerializers": [569], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [79, 82, 84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [79, 82, 84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [79, 82, 84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [79, 82, 84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [79, 82, 84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [79, 82, 84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [79, 82, 84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [79, 82, 84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [79, 82, 84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [79, 82, 84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.functional.CollectionTest::testUserCollectionTypeAdapter": [569], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideStringAdapter": [569], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideWrapperBooleanAdapter": [569], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverridePrimitiveBooleanAdapter": [569], "com.google.gson.ObjectTypeAdapterTest::testDeserializeNullValue": [84, 86, 563, 564, 566, 569], "com.google.gson.ObjectTypeAdapterTest::testSerializeObject": [84, 86, 563, 564, 566, 569], "com.google.gson.ObjectTypeAdapterTest::testSerialize": [84, 86, 563, 564, 566, 569], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [84, 86, 563, 564, 566, 569], "com.google.gson.ObjectTypeAdapterTest::testSerializeNullValue": [84, 86, 563, 564, 566, 569], "com.google.gson.LongSerializationPolicyTest::testDefaultLongSerializationIntegration": [569], "com.google.gson.LongSerializationPolicyTest::testStringLongSerializationIntegration": [569], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [84, 86, 479, 480, 481, 486, 563, 564, 566, 569], "com.google.gson.GsonBuilderTest::testExcludeFieldsWithModifiers": [569], "com.google.gson.GsonBuilderTest::testTransientFieldExclusion": [569]}, "com.google.gson.internal.LinkedTreeMap": {"com.google.gson.internal.bind.JsonElementReaderTest::testNestedObjects": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 154, 159, 161, 166, 167, 169, 180, 430, 431], "com.google.gson.internal.bind.JsonElementReaderTest::testObject": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 154, 159, 161, 166, 167, 169, 180, 430, 431], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 175, 180, 186, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416, 430, 431], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 154, 159, 161, 166, 167, 169, 180, 430, 431], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 175, 180, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416, 430, 431], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 155, 161, 166, 167, 169, 170, 171, 180, 186], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 161, 166, 167, 169, 170, 171, 180, 186], "com.google.gson.functional.MapTest::testMapDeserialization": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 161, 166, 167, 169, 170, 173, 180, 186], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [48, 60, 72, 78, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 177, 180, 186], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [48, 60, 72, 78, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 177, 180, 186], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [48, 60, 72, 78, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 177, 180, 186], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 161, 166, 167, 169, 170, 171, 180, 186], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.MapTest::testMapDeserializationEmpty": [48, 60, 78], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [60, 72, 94, 95, 96, 97, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [52, 60, 94, 96, 123, 126, 154, 159, 161, 166, 180, 430, 431], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [48, 60, 72, 94, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 161, 166, 167, 169, 170, 171, 175, 177, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416, 430, 431], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [48, 60, 72, 94, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 161, 166, 167, 169, 170, 171, 175, 177, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416, 430, 431], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [60, 72, 87, 94, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 155, 161, 166, 167, 169, 170, 171, 175, 186, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 180, 430, 431], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 154, 159, 161, 166, 167, 169, 180, 430, 431], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [52, 60, 72, 94, 96, 111, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 173, 175, 180, 186, 218, 219, 223, 224, 226, 261, 264, 268, 277, 278, 279, 285, 291, 292, 293, 296, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 347, 348, 354, 362, 363, 375, 385, 388, 402, 405, 408, 413, 416, 417, 430, 431], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 154, 159, 161, 166, 167, 169, 180, 430, 431], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 154, 155, 161, 166, 167, 180, 186], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 173, 175, 180, 186, 285, 291, 292, 296, 299, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 329, 330, 336, 354, 362, 363, 375, 385, 388, 402, 413, 416, 430, 431], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 173, 180, 430, 431], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [48, 60, 72, 78, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 177, 180, 186], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 159, 161, 166, 167, 180, 186, 430, 431], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 159, 161, 166, 167, 180, 186, 430, 431], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 159, 161, 166, 167, 180, 186, 430, 431], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 159, 161, 166, 167, 180, 186, 430, 431], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 180, 186, 430, 431], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 175, 180, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416, 430, 431], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [48, 60, 72, 78, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 161, 166, 167, 169, 170, 173, 175, 177, 180, 186, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 326, 336, 354, 362, 363, 375, 385, 388], "com.google.gson.JsonParserTest::testParseString": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 161, 166, 167, 169, 170, 173, 180, 186], "com.google.gson.JsonParserTest::testParseReader": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 161, 166, 167, 169, 170, 173, 180, 186], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 175, 180, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416, 430, 431], "com.google.gson.JsonObjectTest::testDeepCopy": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 159, 161, 166, 167, 180, 186, 430, 431], "com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.JsonObjectTest::testAddingBooleanProperties": [60, 72, 82, 83, 87, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.JsonObjectTest::testAddingNullOrEmptyPropertyName": [91, 92], "com.google.gson.JsonObjectTest::testAddingCharacterProperties": [60, 72, 82, 83, 87, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.JsonObjectTest::testAddingStringProperties": [60, 72, 82, 83, 87, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.JsonObjectTest::testAddingNullPropertyValue": [60, 72, 82, 83, 87, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.JsonObjectTest::testAddingAndRemovingObjectProperties": [60, 72, 82, 83, 87, 94, 96, 111, 112, 122, 123, 126, 129, 134, 139, 140, 154, 155, 161, 166, 167, 180, 186, 223, 224, 226, 261, 264, 268, 277, 278, 279, 281, 285, 291, 299], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [60, 72, 87, 94, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 186], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [48, 60, 430, 431], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [48, 60, 430, 431]}, "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory": {"com.google.gson.regression.JsonAdapterNullSafeTest::testNullSafeBugDeserialize": [93, 95, 100], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 166, 174, 175, 177], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [93, 95, 100], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [93, 95, 100], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [93, 95, 100], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [93, 95, 100], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 144, 149, 150, 151, 152, 154, 158, 159, 161, 164], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 144, 149, 150, 151, 152, 154, 158, 159, 161, 164], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 144, 149, 150, 151, 152, 154, 158, 159, 161, 164], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 144, 149, 150, 151, 152, 154, 158, 159, 161, 164], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 144, 149, 150, 151, 152, 154, 158, 159, 161, 164], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 144, 149, 150, 151, 152, 154, 158, 159, 161, 164], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 144, 149, 150, 151, 152, 154, 158, 159, 161, 164], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [56, 58, 63, 67, 72, 73, 78, 79, 80, 81, 84, 85, 86, 87, 89, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [56, 58, 63, 67, 72, 73, 78, 79, 80, 81, 84, 85, 86, 87, 89, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialized": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 164, 174, 175, 177], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [56, 93, 95, 99, 100], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [58, 63, 67, 72, 73, 74, 75, 93, 95, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [56, 58, 63, 67, 72, 73, 78, 79, 80, 81, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [56, 58, 63, 67, 72, 73, 74, 75, 78, 79, 80, 81, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 154, 159, 160, 161, 162, 164, 166, 167, 169, 170], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [56, 58, 63, 67, 72, 73, 78, 79, 80, 81, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnFields": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 108, 110, 111, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnClass": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JavaUtilTest::testCurrency": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [58, 63, 67, 72, 73, 74, 75, 93, 95, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [58, 63, 67, 72, 73, 74, 75, 93, 95, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [56, 93, 95, 99, 100], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [56, 93, 95, 99, 100], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CollectionTest::testSetDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177]}, "com.google.gson.internal.UnsafeAllocator": {"com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [40, 41, 44, 45], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [40, 41, 44, 45], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [40, 41, 44, 45], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [40, 41, 44, 45], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [40, 41, 44, 45], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [40, 41, 44, 45], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [40, 41, 44, 45], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [40, 41, 44, 45], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnFields": [40, 41, 44, 45], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnClass": [40, 41, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [40, 41, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [40, 41, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [40, 41, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [40, 41, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [40, 41, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [40, 41, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [40, 41, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [40, 41, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [40, 41, 44, 45], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [40, 41, 44, 45], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [40, 41, 44, 45], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [40, 41, 44, 45], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [40, 41, 44, 45], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [40, 41, 44, 45], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [40, 41, 44, 45], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [40, 41, 44, 45], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [40, 41, 44, 45], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [40, 41, 44, 45], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [40, 41, 44, 45]}, "com.google.gson.JsonParseException": {"com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch": [42]}, "com.google.gson.internal.bind.CollectionTypeAdapterFactory": {"com.google.gson.regression.JsonAdapterNullSafeTest::testNullSafeBugDeserialize": [47, 48, 49], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [47, 48, 49], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [47, 48, 49], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [47, 48, 49], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [47, 48, 49], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [47, 48, 49], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [47, 48, 49], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [47, 48, 49], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [47, 48, 49, 57, 58], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [47, 48, 49], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [47, 48, 49], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [47, 48, 49, 57, 58], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [47, 48, 49, 57, 58], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [47, 48, 49, 57, 58], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [47, 48, 49], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [47, 48, 49], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [47, 48, 49], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [47, 48, 49], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [47, 48, 49], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [47, 48, 49], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [47, 48, 49], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [45, 47, 48, 49, 52, 53], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [45, 47, 48, 49, 52, 53], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [47, 48, 49], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [45, 47, 48, 49, 52, 53], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [45, 47, 48, 49, 52, 53], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [45, 47, 48, 49, 52, 53], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [45, 47, 48, 49, 52, 53], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [47, 48, 49], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [47, 48, 49], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [47, 48, 49], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [47, 48, 49], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [47, 48, 49], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialized": [47, 48, 49], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [47, 48, 49], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [47, 48, 49], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [47, 48, 49], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [47, 48, 49], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [47, 48, 49], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [47, 48, 49], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [47, 48, 49], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [47, 48, 49], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [40, 45, 47, 48, 49, 52, 53, 54, 57, 58], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [40, 45, 47, 48, 49, 52, 53, 54, 57, 58], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [47, 48, 49], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [47, 48, 49], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [47, 48, 49], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [47, 48, 49], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [47, 48, 49], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [47, 48, 49], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [47, 48, 49], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [47, 48, 49], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [47, 48, 49], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [47, 48, 49], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [47, 48, 49], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [47, 48, 49], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [47, 48, 49], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.MapTest::testMapDeserialization": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedLongKeys": [47, 48, 49], "com.google.gson.functional.MapTest::testHashMapDeserialization": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedIntegerKeys": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [47, 48, 49], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [47, 48, 49], "com.google.gson.functional.MapTest::testConcurrentHashMap": [47, 48, 49], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [47, 48, 49], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [47, 48, 49], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [47, 48, 49], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserializationWithLongKeys": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [47, 48, 49], "com.google.gson.functional.MapTest::testConcurrentMap": [47, 48, 49], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [47, 48, 49], "com.google.gson.functional.MapTest::testSortedMap": [47, 48, 49], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [47, 48, 49], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [47, 48, 49], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [47, 48, 49], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [47, 48, 49], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [47, 48, 49], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [47, 48, 49], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [47, 48, 49], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [47, 48, 49], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [47, 48, 49], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [47, 48, 49], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [47, 48, 49], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnFields": [47, 48, 49], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnClass": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [47, 48, 49], "com.google.gson.functional.JavaUtilTest::testProperties": [47, 48, 49], "com.google.gson.functional.JavaUtilTest::testCurrency": [47, 48, 49], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [47, 48, 49], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [47, 48, 49], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [47, 48, 49], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [47, 48, 49], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [40, 45, 47, 48, 52, 53, 54, 57, 58], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [47, 48, 49], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [47, 48, 49], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [47, 48, 49], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [47, 48, 49], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [47, 48, 49], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [47, 48, 49], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [47, 48, 49], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [47, 48, 49], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [47, 48, 49], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [47, 48, 49], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [47, 48, 49], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [47, 48, 49], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [47, 48, 49], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [47, 48, 49], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [47, 48, 49], "com.google.gson.functional.EnumTest::testEnumSubclass": [40, 47, 48, 49, 54], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [47, 48, 49], "com.google.gson.functional.EnumTest::testEnumSet": [40, 45, 47, 48, 49, 52, 53, 54, 57, 58], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [47, 48, 49], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [47, 48, 49], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [40, 45, 47, 48, 52, 53, 54, 57, 58], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [47, 48, 49], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [47, 48, 49], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [47, 48, 49], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [47, 48, 49], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [40, 45, 47, 48, 52, 53, 54, 57, 58], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [47, 48, 49], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [47, 48, 49], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [47, 48, 49], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [47, 48, 49], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [47, 48, 49], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [47, 48, 49], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [47, 48, 49], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [47, 48, 49], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [47, 48, 49], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [47, 48, 49], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [47, 48, 49], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [47, 48, 49], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testSetDeserialization": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [40, 45, 47, 48, 52, 53, 54, 57, 58], "com.google.gson.functional.CollectionTest::testPriorityQueue": [40, 45, 47, 48, 52, 53, 54, 57, 58], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testVector": [40, 45, 47, 48, 52, 53, 54, 57, 58], "com.google.gson.functional.CollectionTest::testStack": [40, 45, 47, 48, 52, 53, 54, 57, 58], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [40, 47, 48, 49, 54], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testQueueDeserialization": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [47, 48, 49], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [47, 48, 49], "com.google.gson.JavaSerializationTest::testNumberIsSerializable": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [47, 48, 49], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [47, 48, 49], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [47, 48, 49]}, "com.google.gson.internal.ConstructorConstructor": {"com.google.gson.regression.JsonAdapterNullSafeTest::testNullSafeBugDeserialize": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 88, 89, 94, 99, 103, 123, 134, 178, 213, 218], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 88, 89, 94, 99, 103, 123, 134, 178, 213, 218], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 88, 89, 94, 99, 103, 123, 134, 178, 213, 218], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialized": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 88, 89, 94, 99, 103, 123, 134, 178, 213, 218], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [52, 56, 62, 63, 64], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [52, 56, 62, 63, 64], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.MapTest::testHashMapDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.MapTest::testConcurrentHashMap": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnFields": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 88, 89, 94, 99, 103, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnClass": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 88, 89, 94, 99, 103, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.JavaUtilTest::testProperties": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.JavaUtilTest::testCurrency": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [52, 56, 57, 62, 63, 73, 75, 76], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.EnumTest::testEnumSubclass": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 99, 123, 134, 135, 141, 142], "com.google.gson.functional.EnumTest::testEnumSet": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 90, 99, 123, 134, 135, 141, 142], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 99, 123, 134, 135, 141, 142], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CollectionTest::testSetDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CollectionTest::testPriorityQueue": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 88, 89, 94, 99, 103, 123, 134, 178, 213, 218], "com.google.gson.functional.CollectionTest::testVector": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CollectionTest::testStack": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103]}, "com.google.gson.FieldAttributes": {"com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [46, 111], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [46, 111], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [46, 111]}, "com.google.gson.JsonArray": {"com.google.gson.internal.bind.JsonElementReaderTest::testLenientNansAndInfinities": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbersFromStrings": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testStrings": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testArray": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testSkipValue": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testBooleans": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testStrictNansAndInfinities": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbers": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testWrongType": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testStringsFromNumbers": [40, 97, 171], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [40, 97, 171], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [40, 97, 171], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [40, 97, 171], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [40, 97, 171], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [40, 97, 171], "com.google.gson.JsonParserTest::testParseMixedArray": [40, 97, 183], "com.google.gson.JsonParserTest::testParseUnquotedStringArrayFails": [40, 97, 161, 183], "com.google.gson.JsonObjectTest::testDeepCopy": [33, 40, 45, 46, 49, 161]}, "com.google.gson.FieldNamingPolicy": {"com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [125, 132, 140, 141, 143, 144, 152, 156, 158], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [140, 141, 143, 144, 152, 156, 158]}, "com.google.gson.internal.bind.JsonTreeReader": {"com.google.gson.internal.bind.JsonElementReaderTest::testLenientNansAndInfinities": [51, 52, 67, 72, 73, 107, 111, 112, 113, 114, 115, 116, 119, 150, 154, 207, 212, 216, 220, 291], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbersFromStrings": [51, 52, 67, 72, 73, 107, 111, 112, 113, 114, 115, 116, 119, 150, 154, 207, 212, 220, 224, 229, 230, 234, 238, 243, 244, 248, 291], "com.google.gson.internal.bind.JsonElementReaderTest::testStrings": [51, 52, 67, 72, 73, 107, 111, 112, 113, 114, 115, 116, 119, 150, 154, 156, 177, 182, 186, 291], "com.google.gson.internal.bind.JsonElementReaderTest::testArray": [51, 52, 67, 72, 73, 79, 80, 107, 108, 111, 112, 113, 114, 115, 116, 119, 120, 123, 125, 127, 128, 150, 154, 243, 244, 248, 291], "com.google.gson.internal.bind.JsonElementReaderTest::testNestedObjects": [51, 52, 67, 88, 89, 94, 95, 150, 154, 168, 169, 170, 172, 173, 291], "com.google.gson.internal.bind.JsonElementReaderTest::testSkipValue": [51, 52, 67, 72, 73, 107, 111, 112, 113, 114, 115, 116, 119, 120, 150, 154, 156, 177, 182, 186, 257, 261, 291], "com.google.gson.internal.bind.JsonElementReaderTest::testEarlyClose": [107, 111, 112, 125, 127, 129, 140, 142, 143, 150, 252, 253], "com.google.gson.internal.bind.JsonElementReaderTest::testBooleans": [51, 52, 67, 72, 73, 107, 111, 112, 113, 114, 115, 116, 119, 150, 154, 156, 160, 190, 191, 195, 291], "com.google.gson.internal.bind.JsonElementReaderTest::testStrictNansAndInfinities": [51, 52, 67, 72, 73, 107, 111, 112, 113, 114, 115, 116, 119, 150, 154, 156, 182, 186, 207, 212, 213, 214, 291], "com.google.gson.internal.bind.JsonElementReaderTest::testObject": [51, 52, 67, 88, 89, 94, 95, 107, 108, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 127, 129, 130, 131, 133, 135, 136, 150, 154, 168, 169, 170, 172, 173, 243, 244, 248, 291], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbers": [51, 52, 67, 72, 73, 107, 111, 112, 113, 114, 115, 116, 119, 150, 154, 207, 212, 220, 224, 229, 230, 234, 238, 243, 244, 248, 291], "com.google.gson.internal.bind.JsonElementReaderTest::testWrongType": [51, 52, 67, 72, 73, 78, 79, 80, 87, 93, 107, 111, 112, 113, 114, 115, 116, 119, 120, 125, 127, 128, 129, 130, 131, 132, 150, 154, 156, 160, 161, 167, 177, 178, 179, 182, 186, 190, 199, 207, 208, 209, 212, 224, 225, 226, 229, 238, 239, 240, 243, 291], "com.google.gson.internal.bind.JsonElementReaderTest::testStringsFromNumbers": [51, 52, 67, 72, 73, 107, 111, 112, 113, 114, 115, 116, 119, 150, 154, 156, 177, 182, 186, 291], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [51, 52, 67, 72, 73, 79, 80, 88, 89, 94, 95, 102, 103, 107, 111, 112, 113, 114, 115, 116, 117, 119, 120, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 150, 154, 156, 168, 169, 170, 172, 173, 182, 186, 291], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [51, 52, 67, 72, 73, 79, 80, 88, 89, 94, 95, 102, 103, 107, 111, 112, 113, 114, 115, 116, 117, 119, 120, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 150, 154, 168, 169, 170, 172, 173, 182, 216, 244, 291], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [51, 52, 67, 107, 111, 112, 125, 127, 129, 130, 131, 132, 150, 154, 156, 182, 186, 291], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [51, 52, 67, 88, 89, 102, 103, 107, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 150, 154, 168, 169, 170, 172, 173, 182, 191, 230, 244, 291], "com.google.gson.functional.PrimitiveTest::testPrimitiveClassLiteral": [51, 52, 67, 107, 111, 112, 125, 127, 129, 130, 131, 133, 135, 136, 150, 243, 248, 291], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [51, 52, 67, 88, 89, 102, 103, 107, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 127, 129, 130, 131, 132, 150, 154, 182, 216, 273, 274, 275, 276, 291], "com.google.gson.functional.JsonParserTest::testBadTypeForDeserializingCustomTree": [51, 52, 67, 87, 107, 111, 112, 125, 127, 128, 150, 160, 161, 291], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [51, 52, 67, 88, 89, 102, 103, 107, 111, 112, 113, 114, 115, 116, 117, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 150, 154, 168, 169, 170, 172, 173, 182, 224, 225, 226, 244, 291], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [51, 52, 67, 88, 89, 102, 103, 107, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 150, 154, 168, 169, 170, 172, 173, 182, 244, 291], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [51, 52, 67, 88, 89, 102, 103, 107, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 150, 154, 168, 169, 170, 172, 173, 182, 230, 244, 291], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [51, 52, 67, 87, 88, 89, 94, 95, 102, 103, 107, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 150, 154, 160, 161, 168, 169, 170, 172, 173, 244, 257, 261, 291], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [51, 52, 67, 88, 89, 102, 103, 107, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 150, 154, 168, 169, 170, 172, 173, 230, 257, 261, 291], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [51, 52, 67, 88, 89, 102, 103, 107, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 150, 154, 168, 169, 170, 172, 173, 230, 257, 261, 291], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [51, 52, 67, 88, 89, 102, 103, 107, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 127, 129, 130, 131, 132, 150, 154, 168, 169, 170, 172, 173, 182, 257, 261, 291], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [51, 52, 67, 88, 89, 102, 103, 107, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 150, 154, 168, 169, 170, 172, 173, 182, 191, 230, 244, 291]}, "com.google.gson.JsonStreamParser": {"com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [69, 70, 82, 87, 105], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [69, 70, 82, 87, 105], "com.google.gson.JsonStreamParserTest::testNoSideEffectForHasNext": [61, 69, 70, 87, 105], "com.google.gson.JsonStreamParserTest::testCallingNextBeyondAvailableInput": [61, 69, 70, 82, 83, 87, 105], "com.google.gson.JsonStreamParserTest::testIterator": [61, 69, 70, 87, 105], "com.google.gson.JsonStreamParserTest::testParseTwoStrings": [61, 69, 70, 82, 87, 105]}, "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory": {"com.google.gson.regression.JsonAdapterNullSafeTest::testNullSafeBugDeserialize": [38, 44, 45, 46, 49, 55, 58, 60, 61, 76, 77, 80], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [44, 45, 46, 47], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [44, 45, 46, 47], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [44, 45, 46, 47], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [44, 45, 46, 47], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [44, 45, 46, 47], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [44, 45, 46, 47], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [44, 45, 46, 47], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [44, 45, 46, 47], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [44, 45, 46, 47], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [44, 45, 46, 47], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [44, 45, 46, 47], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [44, 45, 46, 47], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [44, 45, 46, 47], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [44, 45, 46, 47], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [44, 45, 46, 47], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [44, 45, 46, 47], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [44, 45, 46, 47], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [44, 45, 46, 47], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [44, 45, 46, 47], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [44, 45, 46, 47], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialized": [38, 44, 45, 46, 47, 49, 55, 58, 60, 61, 76, 77, 80], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [44, 45, 46, 47], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [44, 45, 46, 47], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [44, 45, 46, 47], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [44, 45, 46, 47], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [44, 45, 46, 47], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [44, 45, 46, 47], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [44, 45, 46, 47], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [44, 45, 46, 47], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [44, 45, 46, 47], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [44, 45, 46, 47], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [44, 45, 46, 47], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [44, 45, 46, 47], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [44, 45, 46, 47], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [44, 45, 46, 47], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [44, 45, 46, 47], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [44, 45, 46, 47], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [44, 45, 46, 47], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [44, 45, 46, 47], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [44, 45, 46, 47], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [44, 45, 46, 47], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [44, 45, 46, 47], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [44, 45, 46, 47], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [44, 45, 46, 47], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [44, 45, 46, 47], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [44, 45, 46, 47], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [44, 45, 46, 47], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnFields": [44, 45, 46, 47, 55, 58, 60, 62, 66, 69, 76, 77, 80], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnClass": [38, 44, 45, 46, 47, 49, 55, 58, 60, 62, 66, 69, 76, 77, 80], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [44, 45, 46, 47], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [44, 45, 46, 47], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [44, 45, 46, 47], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [44, 45, 46, 47], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [44, 45, 46, 47], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [44, 45, 46, 47], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [44, 45, 46, 47], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [44, 45, 46, 47], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [44, 45, 46, 47], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [38, 44, 45, 46, 49, 55, 58, 60, 61, 76, 77, 80], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [38, 44, 45, 46, 49, 55, 58, 59, 76, 77, 80], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [38, 44, 45, 46, 49, 55, 58, 59, 76, 77, 80], "com.google.gson.functional.JavaUtilTest::testCurrency": [44, 45, 46, 47], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [44, 45, 46, 47], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [44, 45, 46, 47], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [44, 45, 46, 47], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [44, 45, 46, 47], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [44, 45, 46, 47], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [44, 45, 46, 47], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [44, 45, 46, 47], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [44, 45, 46, 47], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [44, 45, 46, 47], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [44, 45, 46, 47], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [44, 45, 46, 47], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [44, 45, 46, 47], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [44, 45, 46, 47], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [44, 45, 46, 47], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [44, 45, 46, 47], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [44, 45, 46, 47], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [44, 45, 46, 47], "com.google.gson.functional.EnumTest::testEnumSubclass": [44, 45, 46, 47], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [44, 45, 46, 47], "com.google.gson.functional.EnumTest::testEnumSet": [44, 45, 46, 47], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [44, 45, 46, 47], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [44, 45, 46, 47], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [44, 45, 46, 47], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [44, 45, 46, 47], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [44, 45, 46, 47], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [44, 45, 46, 47], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [44, 45, 46, 47], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [44, 45, 46, 47], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [44, 45, 46, 47], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [44, 45, 46, 47], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [44, 45, 46, 47], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [44, 45, 46, 47], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [44, 45, 46, 47], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [44, 45, 46, 47], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [44, 45, 46, 47], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [44, 45, 46, 47], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [44, 45, 46, 47], "com.google.gson.functional.CollectionTest::testSetDeserialization": [44, 45, 46, 47], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [44, 45, 46, 47], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [44, 45, 46, 47], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [44, 45, 46, 47], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [44, 45, 46, 47], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [44, 45, 46, 47]}, "com.google.gson.internal.Excluder": {"com.google.gson.regression.JsonAdapterNullSafeTest::testNullSafeBugDeserialize": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [63, 70, 71, 72, 112, 113, 114, 116, 117, 150, 151, 154, 156, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216, 229, 233, 234, 235, 236, 239, 243, 244, 245, 249], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [63, 70, 71, 72, 112, 113, 114, 116, 117, 150, 151, 154, 156, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216, 229, 233, 234, 235, 239, 243, 244, 245, 246, 249], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassDeserialization": [63, 70, 71, 112, 113, 114, 116, 120, 192, 194, 229, 233, 234, 235, 236], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [63, 70, 71, 72, 112, 113, 114, 116, 117, 150, 151, 154, 156, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216, 229, 233, 234, 235, 236, 239, 243, 244, 245, 246, 249], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [63, 70, 71, 72, 112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216, 229, 233, 239, 243, 249], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialized": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 160, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedLongKeys": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testHashMapDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedIntegerKeys": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testConcurrentHashMap": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithLongKeys": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testConcurrentMap": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testSortedMap": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnFields": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnClass": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilTest::testProperties": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilTest::testCurrency": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicIntegerArray": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicInteger": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLong": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArrayWithStringSerializationPolicy": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArray": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicBoolean": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [63, 91, 92, 93, 112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 164, 165, 166, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [63, 91, 92, 93, 112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 164, 165, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [63, 98, 103, 104, 106, 108, 112, 113, 114, 116, 117, 120, 150, 151, 154, 159, 163, 170, 174, 178, 179, 180, 181, 182, 183, 188, 192, 197, 201, 205, 206, 207, 208, 212, 216], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [63, 98, 103, 104, 106, 108, 112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 180, 181, 182, 183, 188, 192, 197, 201, 205, 206, 207, 208, 212, 216], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [63, 98, 99, 100, 101, 108, 112, 113, 114, 116, 117, 120, 150, 151, 154, 159, 163, 170, 174, 178, 179, 180, 181, 182, 183, 188, 192, 197, 201, 205, 206, 207, 208, 212, 216], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [63, 98, 99, 100, 101, 112, 113, 114, 116, 120, 192, 197, 201, 205, 206, 207, 208, 212, 216], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserialization": [63, 98, 103, 104, 106, 112, 113, 114, 116, 120, 192, 197, 201, 205, 206, 207, 208, 212, 216], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testEnumSubclass": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testEnumSet": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigIntegerTypeAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigDecimalTypeAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testSetDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testPriorityQueue": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testVector": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testStack": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testQueueDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.JavaSerializationTest::testNumberIsSerializable": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.DefaultInetAddressTypeAdapterTest::testInetAddressSerializationAndDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216]}, "com.google.gson.JsonParser": {"com.google.gson.internal.bind.JsonElementReaderTest::testLenientNansAndInfinities": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbersFromStrings": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testStrings": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testArray": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testNestedObjects": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testSkipValue": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testBooleans": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testStrictNansAndInfinities": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testObject": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbers": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testWrongType": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testStringsFromNumbers": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [58, 59, 63, 82, 84, 90], "com.google.gson.JsonParserTest::testParseUnquotedMultiWordStringFails": [45, 58, 59, 60, 65, 81, 82, 84, 90], "com.google.gson.JsonParserTest::testParseMixedArray": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.JsonParserTest::testParseEmptyString": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.JsonParserTest::testParseUnquotedSingleWordStringFails": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.JsonParserTest::testParseEmptyWhitespaceInput": [45, 58, 59, 63, 84, 90], "com.google.gson.JsonParserTest::testParseString": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.JsonParserTest::testParseReader": [58, 59, 63, 82, 84, 90], "com.google.gson.JsonParserTest::testParseUnquotedStringArrayFails": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.JsonParserTest::testParseInvalidJson": [45, 58, 59, 82, 84, 90], "com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName": [45, 58, 59, 63, 82, 84, 90]}, "com.google.gson.stream.JsonWriter": {"com.google.gson.internal.bind.JsonTreeWriterTest::testStrictBoxedNansAndInfinities": [235, 242], "com.google.gson.internal.bind.JsonTreeWriterTest::testStrictNansAndInfinities": [235, 242], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigDecimalSerialization": [523, 528], "com.google.gson.MixedStreamTest::testWriteClosed": [308, 325, 366, 367, 561, 629], "com.google.gson.MixedStreamTest::testWriteInvalidState": [167, 168, 170, 308, 325, 326, 359, 369, 629, 656], "com.google.gson.MixedStreamTest::testWriteDoesNotMutateState": [235, 242, 253, 261]}, "com.google.gson.TypeAdapter": {"com.google.gson.regression.JsonAdapterNullSafeTest::testNullSafeBugDeserialize": [186], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [284, 285], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialized": [186], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [234], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnFields": [186], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnClass": [186], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [186], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [186], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [186], "com.google.gson.ObjectTypeAdapterTest::testDeserializeNullValue": [259, 260, 273], "com.google.gson.ObjectTypeAdapterTest::testSerializeObject": [215, 221], "com.google.gson.ObjectTypeAdapterTest::testSerialize": [215, 221], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [259, 260, 273], "com.google.gson.ObjectTypeAdapterTest::testSerializeNullValue": [215, 221]}, "com.google.gson.internal.bind.TypeAdapters": {"com.google.gson.regression.JsonAdapterNullSafeTest::testNullSafeBugDeserialize": [851, 864], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [851, 864], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [851, 864], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [851, 864], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [851, 864], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [851, 864], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [851, 864], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [851, 864], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [851, 864], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [851, 864], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [851, 864], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [898], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical": [851, 898], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [851, 864], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [851, 864], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [851, 864], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [851, 864], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [851, 864], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [851, 864], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [851, 864], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [851, 864], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [851, 864], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [851, 864], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [851, 864], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [851, 864], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [851, 864], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [851, 864], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [851, 864], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [851, 864], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [851, 864], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [851, 864], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [851, 864], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [851, 864], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [851, 864], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [851, 864], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [851, 864], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [851, 864], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [851, 864], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [851, 864], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialized": [851, 864], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [851, 864], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [851, 864], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [851, 864], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [851, 864], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [851, 864], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [851, 864], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [851, 864], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [851, 864], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [851, 864], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [851, 864], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [851, 864], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [851, 864], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [851, 864], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [851, 864], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [851, 864], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [851, 864], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [851, 864], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [851, 864], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [851, 864], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [851, 864], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [851, 864], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [851, 864], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [851, 864], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [851, 864], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [851, 864], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [851, 864], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [851, 864], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [851, 864], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [851, 864], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [851, 864], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [851, 864], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [851, 864], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [851, 864], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [851, 864], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [851, 864], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [851, 864], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [851, 864], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [851, 864], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [851, 864], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [851, 864], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [851, 864], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [851, 864], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [851, 864], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [851, 864], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [851, 864], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [851, 864], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [851, 864], "com.google.gson.functional.MapTest::testMapDeserialization": [851, 864], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedLongKeys": [851, 864], "com.google.gson.functional.MapTest::testHashMapDeserialization": [851, 864], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedIntegerKeys": [851, 864], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [851, 864], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [851, 864], "com.google.gson.functional.MapTest::testConcurrentHashMap": [851, 864], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [851, 864], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [851, 864], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [851, 864], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [851, 864], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [851, 864], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [851, 864], "com.google.gson.functional.MapTest::testMapDeserializationWithLongKeys": [851, 864], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [851, 864], "com.google.gson.functional.MapTest::testConcurrentMap": [851, 864], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [851, 864], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [851, 864], "com.google.gson.functional.MapTest::testSortedMap": [851, 864], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [851, 864], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [851, 864], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [851, 864], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [851, 864], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [851, 864], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [851, 864], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [851, 864], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [851, 864], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [851, 864], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [851, 864], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [851, 864], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnFields": [851, 864], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnClass": [851, 864], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [851, 864], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [851, 864], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [851, 864], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [851, 864], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [851, 864], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [851, 864], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [851, 864], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [851, 864], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [851, 864], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [851, 864], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [851, 864], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [851, 864], "com.google.gson.functional.JavaUtilTest::testProperties": [851, 864], "com.google.gson.functional.JavaUtilTest::testCurrency": [851, 864], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicIntegerArray": [851, 864], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [851, 864], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicInteger": [851, 864], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLong": [851, 864], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArrayWithStringSerializationPolicy": [851, 864], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArray": [851, 864], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicBoolean": [851, 864], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [851, 864], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [851, 864], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [851, 864], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [851, 864], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [851, 864], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [851, 864], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [851, 864], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [851, 864], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [851, 864], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [851, 864], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [851, 864], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [851, 864], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [851, 864], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [851, 864], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [851, 864], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [851, 864], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [851, 864], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [864], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [851, 864], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [851, 864], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [851, 864], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [851, 864], "com.google.gson.functional.EnumTest::testEnumSubclass": [851, 864], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [851, 864], "com.google.gson.functional.EnumTest::testEnumSet": [851, 864], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [851, 864], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [851, 864], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [851, 864], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [851, 864], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [851, 864], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigIntegerTypeAdapter": [851], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonArrayDeserialization": [851], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [851, 864], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonPrimitiveDeserialization": [851], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [851, 864], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [851, 864], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonNullDeserialization": [851], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigDecimalTypeAdapter": [851], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [851, 864], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [851, 864], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch": [851], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonObjectDeserialization": [851], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [851, 864], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [851, 864], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [851, 864], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [851, 864], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [851, 864], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [851, 864], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [851, 864], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [851, 864], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [851, 864], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [851, 864], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [851, 864], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [851, 864], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [851, 864], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [851, 864], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [851, 864], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [851, 864], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [851, 864], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [851, 864], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [851, 864], "com.google.gson.functional.CollectionTest::testSetDeserialization": [851, 864], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [851, 864], "com.google.gson.functional.CollectionTest::testPriorityQueue": [851, 864], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [851, 864], "com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization": [851, 864], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [851, 864], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [851, 864], "com.google.gson.functional.CollectionTest::testVector": [851, 864], "com.google.gson.functional.CollectionTest::testStack": [851, 864], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [851, 864], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [851, 864], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [851, 864], "com.google.gson.functional.CollectionTest::testQueueDeserialization": [851, 864], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [851, 864], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [851, 864], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [851, 864], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [851, 864], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [851, 864], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [851, 864], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [851, 864], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [851, 864], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [851, 864], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [851, 864], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [851, 864], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [851, 864], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [851, 864], "com.google.gson.JavaSerializationTest::testNumberIsSerializable": [851, 864], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [851, 864], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [851, 864], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [851, 864], "com.google.gson.DefaultInetAddressTypeAdapterTest::testInetAddressSerializationAndDeserialization": [851, 864]}, "com.google.gson.JsonElement": {"com.google.gson.internal.bind.JsonTreeWriterTest::testNestedArray": [321, 325], "com.google.gson.internal.bind.JsonTreeWriterTest::testNestedObject": [321, 325], "com.google.gson.internal.bind.JsonTreeWriterTest::testSerializeNullsFalse": [321, 325], "com.google.gson.internal.bind.JsonTreeWriterTest::testLenientNansAndInfinities": [321, 325], "com.google.gson.internal.bind.JsonTreeWriterTest::testSerializeNullsTrue": [321, 325], "com.google.gson.internal.bind.JsonTreeWriterTest::testObject": [321, 325], "com.google.gson.internal.bind.JsonTreeWriterTest::testArray": [321, 325], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [55, 74, 87, 88], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [46, 55, 64, 74, 87, 88, 103, 104, 119, 120], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [74], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [74], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [74], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [74], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [74], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [74], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [55, 74, 87, 88], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [74], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [55, 74, 87, 88], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [55, 74, 87, 88], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [55, 74, 87, 88], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [55, 74, 87, 88], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [74], "com.google.gson.functional.JsonArrayTest::testMixedPrimitiveAddition": [321, 325], "com.google.gson.functional.JsonArrayTest::testStringPrimitiveAddition": [321, 325], "com.google.gson.functional.JsonArrayTest::testNullPrimitiveAddition": [321, 325], "com.google.gson.functional.JsonArrayTest::testDoublePrimitiveAddition": [321, 325], "com.google.gson.functional.JsonArrayTest::testCharPrimitiveAddition": [321, 325], "com.google.gson.functional.JsonArrayTest::testBooleanPrimitiveAddition": [321, 325], "com.google.gson.functional.JsonArrayTest::testIntegerPrimitiveAddition": [321, 325], "com.google.gson.functional.JsonArrayTest::testSameAddition": [321, 325], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnFields": [74], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnClass": [74], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [74], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [55, 74, 87, 88], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [55, 74, 87, 88], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [55, 74, 87, 88], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [46, 55, 74, 87, 88, 103, 104], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [46, 55, 74, 87, 88, 103, 104], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [55, 74, 87, 88], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [55, 74, 87, 88], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [74], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [74], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [74], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [74], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [74], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [74], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [74], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [74], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [74], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [55, 74, 87, 88], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [74], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [74], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [74], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [46, 55, 64, 74, 87, 88, 119, 120], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [46, 55, 64, 74, 87, 88, 103, 104, 119, 120], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [46, 55, 64, 74, 87, 88, 119, 120], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [46, 55, 64, 74, 87, 88, 119, 120], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [74], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [74], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [74], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [55, 74, 87, 88], "com.google.gson.LongSerializationPolicyTest::testStringLongSerialization": [64, 119, 120], "com.google.gson.LongSerializationPolicyTest::testDefaultLongSerialization": [64, 119, 120], "com.google.gson.JsonPrimitiveTest::testValidJsonOnToString": [321, 325], "com.google.gson.JsonParserTest::testParseUnquotedMultiWordStringFails": [74], "com.google.gson.JsonParserTest::testParseMixedArray": [46, 103, 104, 321, 325], "com.google.gson.JsonParserTest::testParseEmptyString": [64], "com.google.gson.JsonParserTest::testParseEmptyWhitespaceInput": [74], "com.google.gson.JsonParserTest::testParseString": [55, 87, 88], "com.google.gson.JsonParserTest::testParseReader": [55, 87, 88], "com.google.gson.JsonParserTest::testParseUnquotedStringArrayFails": [46, 103, 104], "com.google.gson.JsonObjectTest::testDeepCopy": [46, 103, 104], "com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName": [55, 87, 88], "com.google.gson.JsonObjectTest::testAddingNullPropertyValue": [74], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [74], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [74], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [55, 74, 87, 88]}, "com.google.gson.internal.bind.MapTypeAdapterFactory": {"com.google.gson.regression.JsonAdapterNullSafeTest::testNullSafeBugDeserialize": [118, 119, 120], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [118, 119, 120], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [118, 119, 120], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [118, 119, 120], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [118, 119, 120], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [118, 119, 120], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [118, 119, 120], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [118, 119, 120], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [116, 118, 119, 120, 123, 124, 126, 131, 133], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [118, 119, 120], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [118, 119, 120], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [118, 119, 120], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [118, 119, 120], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [118, 119, 120], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [118, 119, 120], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [118, 119, 120, 131, 133], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [118, 119, 120, 131, 133], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [118, 119, 120], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [118, 119, 120], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [118, 119, 120], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [118, 119, 120], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [118, 119, 120], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [118, 119, 120], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialized": [118, 119, 120], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [118, 119, 120], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [118, 119, 120], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [118, 119, 120], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [118, 119, 120], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [118, 119, 120], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [118, 119, 120], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [118, 119, 120], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [118, 119, 120], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [112, 116, 118, 119, 120, 123, 124, 126, 131, 133], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [112, 116, 118, 119, 120, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserialization": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedLongKeys": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testHashMapDeserialization": [111, 116, 118, 119, 123, 124, 125, 126, 127, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedIntegerKeys": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [111, 116, 118, 119, 123, 124, 125, 126, 127, 131, 133, 140], "com.google.gson.functional.MapTest::testConcurrentHashMap": [111, 116, 118, 119, 123, 124, 125, 126, 127, 131, 133, 140], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithLongKeys": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testConcurrentMap": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [111, 116, 118, 119, 123, 124, 125, 126, 127, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testSortedMap": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [116, 118, 119, 120, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [112, 116, 118, 119, 120, 123, 124, 125, 131, 133, 140], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [116, 118, 119, 120, 123, 124, 125, 131, 133, 140], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [118, 119, 120], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [118, 119, 120], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [118, 119, 120], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [118, 119, 120], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [118, 119, 120], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [118, 119, 120], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [118, 119, 120], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnFields": [118, 119, 120], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnClass": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [118, 119, 120], "com.google.gson.functional.JavaUtilTest::testProperties": [111, 116, 118, 119, 124, 125, 126, 127, 131, 133, 140], "com.google.gson.functional.JavaUtilTest::testCurrency": [118, 119, 120], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [118, 119, 120], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [118, 119, 120], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [118, 119, 120], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [118, 119, 120], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [118, 119, 120], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [118, 119, 120], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [118, 119, 120], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [118, 119, 120], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [118, 119, 120], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [118, 119, 120], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [118, 119, 120], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [118, 119, 120], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [118, 119, 120], "com.google.gson.functional.EnumTest::testEnumSubclass": [118, 119, 120], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [118, 119, 120], "com.google.gson.functional.EnumTest::testEnumSet": [118, 119, 120], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [118, 119, 120], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [118, 119, 120], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [118, 119, 120], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [118, 119, 120], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [118, 119, 120], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [111, 116, 118, 119, 124, 125, 126, 127, 131, 133, 140], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [118, 119, 120], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [118, 119, 120], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [118, 119, 120], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [118, 119, 120], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [118, 119, 120], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [118, 119, 120], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [118, 119, 120], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [118, 119, 120], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [118, 119, 120], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [118, 119, 120], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [118, 119, 120], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [118, 119, 120], "com.google.gson.functional.CollectionTest::testSetDeserialization": [118, 119, 120], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [118, 119, 120], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [118, 119, 120], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [118, 119, 120], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [118, 119, 120], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [118, 119, 120], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [112, 118, 119, 131, 133], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [112, 118, 119, 131, 133], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [112, 118, 119, 131, 133]}, "com.google.gson.internal.Streams": {"com.google.gson.internal.bind.JsonElementReaderTest::testLenientNansAndInfinities": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbersFromStrings": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testStrings": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testArray": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testNestedObjects": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testSkipValue": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testBooleans": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testStrictNansAndInfinities": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testObject": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbers": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testWrongType": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testStringsFromNumbers": [46, 48], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [48], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [46, 48, 72], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [48], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [48], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [48], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [48], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [48], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [46, 48], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [48], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [48], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [48], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [48], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [46, 48], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [46, 48], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnFields": [48], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnClass": [48], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [48], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [48], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [48], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [48], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [48], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [46, 48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [46, 48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [46, 48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [48], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [72], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [72], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [72], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [72], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [72], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [48], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [48], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [46, 48], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [46, 48], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [48], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [48], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [48], "com.google.gson.JsonStreamParserTest::testNoSideEffectForHasNext": [48], "com.google.gson.JsonStreamParserTest::testCallingNextBeyondAvailableInput": [48], "com.google.gson.JsonStreamParserTest::testIterator": [48], "com.google.gson.JsonStreamParserTest::testParseTwoStrings": [48], "com.google.gson.JsonParserTest::testParseUnquotedMultiWordStringFails": [46, 48], "com.google.gson.JsonParserTest::testParseMixedArray": [46, 48], "com.google.gson.JsonParserTest::testParseEmptyString": [46, 48], "com.google.gson.JsonParserTest::testParseUnquotedSingleWordStringFails": [46, 48], "com.google.gson.JsonParserTest::testParseString": [46, 48], "com.google.gson.JsonParserTest::testParseReader": [46, 48], "com.google.gson.JsonParserTest::testParseUnquotedStringArrayFails": [46, 48], "com.google.gson.JsonParserTest::testParseInvalidJson": [46, 47, 48, 54, 58], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [46, 48], "com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName": [46, 48], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [48], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [48]}, "com.google.gson.internal.bind.SqlDateTypeAdapter": {"com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlDateDeserialization": [38, 51, 57]}, "com.google.gson.Gson": {"com.google.gson.regression.JsonAdapterNullSafeTest::testNullSafeBugDeserialize": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 493, 494, 497, 498, 499, 500, 501, 506, 507, 508, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.VersioningTest::testVersionedUntilSerialization": [580, 583, 602, 604], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.VersioningTest::testVersionedClassesSerialization": [580, 583, 602, 604], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilSerialization": [580, 583, 602, 604], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassSerialization": [580, 583, 602, 604], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassDeserialization": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 773, 774, 797, 801, 802, 852, 854, 885, 886, 887, 888, 904], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesSerialization": [580, 583, 602, 604], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 885, 886, 887, 902, 904], "com.google.gson.functional.UncategorizedTest::testObjectEqualButNotSameSerialization": [580, 583, 602, 604], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.UncategorizedTest::testTrailingWhitespace": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.UncategorizedTest::testStaticFieldsAreNotSerialized": [580, 583, 602, 604], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 602, 603, 604, 648, 661, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 561, 562, 563, 602, 603, 604, 648, 661, 669, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904, 949, 952], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByStreaming": [580, 583, 602, 604, 773, 774, 797, 801, 802, 852, 854, 887, 888, 904], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 773, 774, 797, 801, 802, 852, 854, 885, 886, 887, 888, 904], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreamingHierarchical": [580, 583, 602, 604, 773, 774, 797, 801, 802, 852, 854, 887, 888, 904], "com.google.gson.functional.TypeAdapterPrecedenceTest::testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter": [580, 583, 602, 604, 773, 774, 797, 801, 802, 852, 854, 887, 888, 904], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.TreeTypeAdaptersTest::testSerializeId": [602, 604], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 580, 583, 602, 603, 604, 648, 661, 669, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 432, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 580, 583, 602, 603, 604, 648, 661, 669, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 432, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ThrowableFunctionalTest::testSerializedNameOnExceptionFields": [580, 583, 602, 604], "com.google.gson.functional.StringTest::testAssignmentCharSerialization": [580, 583, 602, 604], "com.google.gson.functional.StringTest::testEscapedBackslashInStringSerialization": [580, 583, 602, 604], "com.google.gson.functional.StringTest::testSingleQuoteInStringDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.StringTest::testAssignmentCharDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.StringTest::testJavascriptKeywordsInStringSerialization": [580, 583, 602, 604], "com.google.gson.functional.StringTest::testEscapingQuotesInStringDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.StringTest::testEscapingQuotesInStringSerialization": [580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.StringTest::testEscapedCtrlNInStringSerialization": [580, 583, 602, 604], "com.google.gson.functional.StringTest::testStringValueSerialization": [580, 583, 602, 604], "com.google.gson.functional.StringTest::testStringWithEscapedSlashDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.StringTest::testEscapedCtrlNInStringDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.StringTest::testEscapedBackslashInStringDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.StringTest::testStringValueAsSingleElementArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.StringTest::testJavascriptKeywordsInStringDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.StringTest::testStringValueDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.StringTest::testEscapedCtrlRInStringDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.StringTest::testSingleQuoteInStringSerialization": [580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.StringTest::testEscapedCtrlRInStringSerialization": [580, 583, 602, 604], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 521], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.SerializedNameTest::testFirstNameIsChosenForSerialization": [580, 583, 602, 604], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.SecurityTest::testNonExecutableJsonSerialization": [580, 583, 602, 604], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenSerialization": [580, 583, 602, 604], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialized": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 427, 435, 493, 494, 497, 498, 499, 500, 501, 506, 507, 580, 583, 602, 603, 604, 648, 661, 669, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ReadersWritersTest::testTopLevelNullObjectDeserializationWithReader": [728, 730, 824, 825, 827, 881, 883, 887, 888, 904], "com.google.gson.functional.ReadersWritersTest::testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls": [728, 730, 824, 825, 827, 881, 883, 887, 888, 904], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [580, 583, 602, 604, 887, 888, 904, 925, 926, 949, 952], "com.google.gson.functional.ReadersWritersTest::testTypeMismatchThrowsJsonSyntaxExceptionForReaders": [728, 730, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 824, 825, 827, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ReadersWritersTest::testTypeMismatchThrowsJsonSyntaxExceptionForStrings": [728, 730, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 580, 583, 602, 603, 604, 648, 661, 885, 886, 887, 888, 904, 925, 926, 949, 952], "com.google.gson.functional.RawSerializationTest::testThreeLevelParameterizedObject": [580, 583, 602, 604], "com.google.gson.functional.RawSerializationTest::testTwoLevelParameterizedObject": [580, 583, 602, 604], "com.google.gson.functional.RawSerializationTest::testCollectionOfPrimitives": [580, 583, 602, 604], "com.google.gson.functional.RawSerializationTest::testParameterizedObject": [580, 583, 602, 604], "com.google.gson.functional.RawSerializationTest::testCollectionOfObjects": [580, 583, 602, 604], "com.google.gson.functional.PrintFormattingTest::testJsonObjectWithNullValues": [687, 689], "com.google.gson.functional.PrintFormattingTest::testJsonObjectWithNullValuesSerialized": [687, 689], "com.google.gson.functional.PrintFormattingTest::testCompactFormattingLeavesNoWhiteSpace": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testBigIntegerSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testNegativeInfinitySerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsInt": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsLongPrimitive": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsFloat": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testPrimitiveLongAutoboxedDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsFloatPrimitive": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testBooleanDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testPrimitiveBooleanAutoboxedInASingleElementArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testPrimitiveBooleanAutoboxedSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testLongAsStringSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testPrimitiveIntegerAutoboxedSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testReallyLongValuesSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testBigDecimalSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsBigIntegerFails": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testDoubleInfinitySerializationNotSupportedByDefault": [323, 324, 580, 583, 603, 648, 669, 673, 675], "com.google.gson.functional.PrimitiveTest::testBigDecimalNegativeInfinityDeserializationNotSupported": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testLargeDoubleDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testLongAsStringDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testPrimitiveLongAutoboxedInASingleElementArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testBigDecimalPreservePrecisionSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsShortWrapper": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testMoreSpecificSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testStringsAsBooleans": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testNegativeInfinitySerializationNotSupportedByDefault": [323, 324, 580, 583, 603, 648, 669, 673, 675], "com.google.gson.functional.PrimitiveTest::testFloatInfinityDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testBigDecimalNoFractAsStringRepresentationDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testBigDecimalPreservePrecisionDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializingNonZeroDecimalPointValuesAsIntegerFails": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigIntegerDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDoubleNaNDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatSerializationNotSupportedByDefault": [323, 324, 580, 583, 603, 648, 669, 673, 675], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBigInteger": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testNumberAsStringDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBigDecimal": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsIntegerFails": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testShortSerialization": [602, 604], "com.google.gson.functional.PrimitiveTest::testBigDecimalAsStringRepresentationDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsShortPrimitive": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBooleanWrapper": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testPrimitiveIntegerAutoboxedDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testBigIntegerDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testByteDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsByteWrapper": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testDoubleInfinityDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testBigDecimalInfinityDeserializationNotSupported": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsNumber": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testDeserializingDecimalPointValueZeroSucceeds": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBigInteger": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testPrimitiveLongAutoboxedSerialization": [602, 604], "com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsLong": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigIntegerSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testDoubleInfinitySerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testUnquotedStringDeserializationFails": [174, 194, 728, 729, 730, 773, 774, 797, 800, 801, 802, 851, 852, 853, 854, 859, 863, 880, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBigDecimal": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testHtmlCharacterSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testPrimitiveClassLiteral": [728, 730, 773, 774, 797, 800, 801, 802, 824, 825, 827, 851, 852, 854, 881, 883, 887, 888, 904, 925, 926, 949, 952], "com.google.gson.functional.PrimitiveTest::testDoubleNaNSerializationNotSupportedByDefault": [323, 324, 580, 583, 603, 648, 669, 673, 675], "com.google.gson.functional.PrimitiveTest::testNumberSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testFloatInfinitySerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigDecimalSerialization": [580, 583, 602, 603, 604, 648, 669], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testBigDecimalInASingleElementArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsFloatWrapper": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testFloatNaNSerializationNotSupportedByDefault": [323, 324, 580, 583, 603, 648, 669, 673, 675], "com.google.gson.functional.PrimitiveTest::testFloatInfinitySerializationNotSupportedByDefault": [323, 324, 580, 583, 603, 648, 669, 673, 675], "com.google.gson.functional.PrimitiveTest::testBigDecimalDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testNumberDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBooleanPrimitive": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testBigIntegerInASingleElementArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testFloatNaNDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsDouble": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsInteger": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testValueVeryCloseToZeroIsZero": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsBigDecimal": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testReallyLongValuesDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBytePrimitive": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testBigDecimalNaNDeserializationNotSupported": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsDoubleWrapper": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testQuotedStringSerializationAndDeserialization": [580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedInASingleElementArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testBadValueForBigIntegerDeserialization": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsNumber": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testByteSerialization": [602, 604], "com.google.gson.functional.PrimitiveTest::testDoubleNaNSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigDecimalDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsLongWrapper": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsInteger": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsDoublePrimitive": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testDoubleAsStringRepresentationDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testFloatNaNSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testPrimitiveIntegerAutoboxedInASingleElementArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testDoubleNoFractAsStringRepresentationDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveCharacterTest::testPrimitiveCharacterAutoboxedSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveCharacterTest::testPrimitiveCharacterAutoboxedDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrettyPrintingTest::testPrettyPrintArrayOfPrimitives": [580, 583, 602, 604], "com.google.gson.functional.PrettyPrintingTest::testEmptyMapField": [580, 583, 602, 604], "com.google.gson.functional.PrettyPrintingTest::testMultipleArrays": [580, 583, 602, 604], "com.google.gson.functional.PrettyPrintingTest::testPrettyPrintArrayOfPrimitiveArrays": [580, 583, 602, 604], "com.google.gson.functional.PrettyPrintingTest::testMap": [580, 583, 602, 604], "com.google.gson.functional.PrettyPrintingTest::testPrettyPrintListOfPrimitiveArrays": [580, 583, 602, 604], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysSerialization": [602, 604], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 602, 603, 604, 648, 661, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysSerialization": [602, 604], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithCustomSerializer": [602, 604], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeSerialization": [580, 583, 602, 604], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 602, 603, 604, 648, 661, 669, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesSerialization": [602, 604], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 602, 603, 604, 648, 661, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 602, 603, 604, 648, 661, 669, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 602, 603, 604, 648, 661, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersSerialization": [602, 604], "com.google.gson.functional.ObjectTest::testArrayOfObjectsSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testNullSerialization": [687, 689], "com.google.gson.functional.ObjectTest::testNullDeserialization": [773, 774, 797, 798], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testArrayOfObjectsAsFields": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testNullFieldsSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testInnerClassSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testDateAsMapObjectField": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testSingletonLists": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testJsonObjectSerialization": [687, 689], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testClassWithObjectFieldSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testPrimitiveArrayFieldSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testEmptyStringDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 879, 881, 883, 894, 895, 904], "com.google.gson.functional.ObjectTest::testTruncatedDeserialization": [728, 730, 797, 800, 801, 851, 852, 881, 883, 884, 887, 894, 897, 904], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testNestedSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testAnonymousLocalClassesSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testAnonymousLocalClassesCustomSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testArrayOfArraysSerialization": [580, 583, 602, 604], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberSerialization": [580, 583, 602, 604], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitSerializationOfNullArrayMembers": [580, 583, 602, 604], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.NullObjectAndFieldTest::testPrintPrintingObjectWithNulls": [580, 583, 602, 604], "com.google.gson.functional.NullObjectAndFieldTest::testTopLevelNullObjectDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitSerializationOfNullCollectionMembers": [580, 583, 602, 604], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitSerializationOfNulls": [580, 583, 602, 604], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullSerialization": [580, 583, 602, 604], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904, 949, 950], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitSerializationOfNullStringMembers": [580, 583, 602, 604], "com.google.gson.functional.NullObjectAndFieldTest::testTopLevelNullObjectSerialization": [602, 604, 687, 689], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.NullObjectAndFieldTest::testPrintPrintingArraysWithNulls": [580, 583, 602, 604], "com.google.gson.functional.NullObjectAndFieldTest::testCustomSerializationOfNulls": [580, 583, 602, 604], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.NamingPolicyTest::testDeprecatedNamingStrategy": [580, 583, 602, 604], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicySerialization": [580, 583, 602, 604], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicySerialiation": [580, 583, 602, 604], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicySerialization": [580, 583, 602, 604], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 432, 435, 580, 583, 603, 648, 661], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicySerialization": [580, 583, 602, 604], "com.google.gson.functional.NamingPolicyTest::testAtSignInSerializedName": [580, 583, 602, 604], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicySerialization": [580, 583, 602, 604], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testListOfSubclassFields": [580, 583, 602, 604], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testSubclassFields": [580, 583, 602, 604], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 538, 541, 561, 562, 563, 661, 669], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testListOfParameterizedSubclassFields": [580, 583, 602, 604], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testParameterizedSubclassFields": [580, 583, 602, 604], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 538, 541, 561, 562, 563, 661, 669], "com.google.gson.functional.MapTest::testMapDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedLongKeys": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testComplexKeysDeserialization": [728, 730, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.MapTest::testBooleanKeyDeserialization": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.MapTest::testHashMapDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedIntegerKeys": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testWriteMapsWithEmptyStringKey": [580, 583, 602, 604], "com.google.gson.functional.MapTest::testMapSerializationWithNullValuesSerialized": [580, 583, 602, 604], "com.google.gson.functional.MapTest::testConcurrentHashMap": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 580, 583, 602, 604, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testParameterizedMapSubclassSerialization": [602, 604], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 580, 583, 602, 604, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testInterfaceTypeMapWithSerializer": [580, 583, 602, 604], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testNumberKeyDeserialization": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.MapTest::testCustomSerializerForSpecificMapType": [602, 604], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapSerializationWithNullKey": [602, 604], "com.google.gson.functional.MapTest::testComplexKeysSerialization": [602, 604], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapSubclassSerialization": [602, 604], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapSerializationEmpty": [602, 604], "com.google.gson.functional.MapTest::testMapWithQuotes": [580, 583, 602, 604], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapDeserializationEmpty": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.MapTest::testMapDeserializationWithLongKeys": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapSerializationWithNullValues": [580, 583, 602, 604], "com.google.gson.functional.MapTest::testGeneralMapField": [580, 583, 602, 604], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapOfMapSerialization": [580, 583, 602, 604], "com.google.gson.functional.MapTest::testConcurrentMap": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 580, 583, 602, 604, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testSerializeMaps": [580, 583, 602, 604], "com.google.gson.functional.MapTest::testRawMapSerialization": [580, 583, 602, 604], "com.google.gson.functional.MapTest::testMapSerializationWithNullValue": [602, 604], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 580, 583, 602, 604, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 851, 852, 881, 883, 885, 886, 887, 904], "com.google.gson.functional.MapTest::testMapSerializationWithNullValueButSerializeNulls": [602, 604], "com.google.gson.functional.MapTest::testMapSerialization": [602, 604], "com.google.gson.functional.MapTest::testStringKeyDeserialization": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.MapTest::testMapSerializationWithIntegerKeys": [602, 604], "com.google.gson.functional.MapTest::testMapSerializationWithWildcardValues": [602, 604], "com.google.gson.functional.MapTest::testDeerializeMapOfMaps": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.MapTest::testSerializeMapOfMaps": [602, 604], "com.google.gson.functional.MapTest::testInterfaceTypeMap": [580, 583, 602, 604], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [887, 888, 904, 949, 952], "com.google.gson.functional.MapTest::testSortedMap": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 851, 852, 881, 883, 885, 886, 887, 904], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 602, 603, 604, 648, 661, 669, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 602, 603, 604, 648, 661, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableSerialization": [602, 604], "com.google.gson.functional.LeniencyTest::testLenientFromJson": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 561, 562, 563, 661, 669], "com.google.gson.functional.JsonTreeTest::testJsonTreeToString": [580, 583, 602, 604, 687, 689], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 538, 541, 561, 562, 563, 661, 669], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 561, 562, 563, 661, 669], "com.google.gson.functional.JsonParserTest::testBadTypeForDeserializingCustomTree": [887, 904, 925, 949, 952], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 885, 886, 887, 904, 925, 949, 952], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 885, 886, 887, 888, 904, 925, 926, 949, 952], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 885, 886, 887, 888, 904, 925, 926, 949, 952], "com.google.gson.functional.JsonParserTest::testParseInvalidJson": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 884, 887, 894, 897, 904], "com.google.gson.functional.JsonParserTest::testExtraCommasInMaps": [728, 730, 797, 800, 801, 851, 852, 881, 883, 887, 902, 904], "com.google.gson.functional.JsonParserTest::testExtraCommasInArrays": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 885, 886, 887, 904, 925, 949, 952], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnFields": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 427, 435, 580, 583, 602, 603, 604, 648, 661, 669, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnClass": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 580, 583, 602, 603, 604, 648, 661, 669, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testDifferentJsonAdaptersForGenericFieldsOfSameRawType": [580, 583, 602, 604], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testSuperclassTypeAdapterNotInvoked": [580, 583, 602, 604], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 497, 498, 499, 500, 501, 506, 507, 508, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testNullSafeObjectFromJson": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testIncorrectTypeAdapterFails": [580, 583, 603, 648, 669, 673, 675], "com.google.gson.functional.JavaUtilTest::testProperties": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JavaUtilTest::testCurrency": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 427, 435, 580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicIntegerArray": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicInteger": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLong": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArrayWithStringSerializationPolicy": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArray": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicBoolean": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.InternationalizationTest::testStringsWithUnicodeChineseCharactersDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.InternationalizationTest::testStringsWithUnicodeChineseCharactersSerialization": [580, 583, 602, 604], "com.google.gson.functional.InternationalizationTest::testStringsWithUnicodeChineseCharactersEscapedDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.InternationalizationTest::testStringsWithRawChineseCharactersDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.InterfaceTest::testSerializingObjectImplementingInterface": [580, 583, 602, 604], "com.google.gson.functional.InterfaceTest::testSerializingInterfaceObjectField": [580, 583, 602, 604], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForCollectionType": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 538, 541, 561, 562, 563, 661, 669], "com.google.gson.functional.InheritanceTest::testSubClassSerialization": [580, 583, 602, 604], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionSerialization": [580, 583, 602, 604], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod": [602, 604], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 538, 541, 561, 562, 563, 661, 669], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 561, 562, 563, 661, 669], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod": [602, 604], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 538, 541, 561, 562, 563, 661, 669], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 538, 541, 561, 562, 563, 661, 669], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubForToJsonMethod": [580, 583, 602, 604], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 561, 562, 563, 661, 669], "com.google.gson.functional.FieldNamingTest::testIdentity": [580, 583, 602, 604], "com.google.gson.functional.FieldNamingTest::testLowerCaseWithUnderscores": [580, 583, 602, 604], "com.google.gson.functional.FieldNamingTest::testLowerCaseWithDashes": [580, 583, 602, 604], "com.google.gson.functional.FieldNamingTest::testUpperCamelCaseWithSpaces": [580, 583, 602, 604], "com.google.gson.functional.FieldNamingTest::testUpperCamelCase": [580, 583, 602, 604], "com.google.gson.functional.FieldExclusionTest::testDefaultNestedStaticClassIncluded": [580, 583, 602, 604], "com.google.gson.functional.FieldExclusionTest::testDefaultInnerClassExclusion": [580, 583, 602, 604], "com.google.gson.functional.FieldExclusionTest::testInnerClassExclusion": [580, 583, 602, 604], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldSerialization": [580, 583, 602, 604], "com.google.gson.functional.ExposeFieldsTest::testNoExposedFieldSerialization": [580, 583, 602, 604], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationSerialization": [580, 583, 602, 604], "com.google.gson.functional.ExposeFieldsTest::testArrayWithOneNullExposeFieldObjectSerialization": [580, 583, 602, 604], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ExposeFieldsTest::testNullExposeFieldSerialization": [580, 583, 602, 604], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 498, 538, 541, 561, 562, 563, 661, 669, 885, 886, 887, 888, 904, 925, 926, 949, 952], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 885, 886, 887, 888, 904, 925, 926, 949, 952], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 497, 498, 499, 500, 501, 506, 507, 508, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserialization": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 773, 774, 797, 801, 802, 852, 854, 885, 886, 887, 888, 904], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerialization": [580, 583, 602, 604], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactSerialization": [580, 583, 602, 604], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserializationDoesNotImpactSerialization": [602, 604], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerialization": [602, 604], "com.google.gson.functional.EscapingTest::testEscapeAllHtmlCharacters": [580, 583, 602, 604], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.EnumTest::testClassWithEnumFieldSerialization": [580, 583, 602, 604], "com.google.gson.functional.EnumTest::testEnumSubclass": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.EnumTest::testEnumSubclassAsParameterizedType": [580, 583, 602, 604, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.EnumTest::testTopLevelEnumSerialization": [580, 583, 602, 604], "com.google.gson.functional.EnumTest::testCollectionOfEnumsDeserialization": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.EnumTest::testCollectionOfEnumsSerialization": [580, 583, 602, 604], "com.google.gson.functional.EnumTest::testEnumSet": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 580, 583, 602, 603, 604, 648, 661, 669, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 427, 435, 580, 583, 602, 603, 604, 648, 661, 669, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 497, 498, 499, 500, 501, 506, 507, 508, 580, 583, 602, 603, 604, 648, 661, 669, 728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 885, 886, 887], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 497, 498, 499, 500, 501, 506, 507, 508, 580, 583, 602, 603, 604, 648, 661, 669, 728, 730, 797, 800, 801, 851, 852, 881, 883, 885, 886, 887], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleSerializationWithLanguage": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonNullSerialization": [602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBufferDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigIntegerTypeAdapter": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 602, 603, 604, 648, 661, 773, 774, 797, 801, 802, 852, 854, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonArrayDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 773, 774, 797, 801, 802, 852, 854, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleSerializationWithLanguageCountryVariant": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimeSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimeDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testUriSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testBitSetSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testBitSetDeserialization": [580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguage": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultGregorianCalendarSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testSetSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonPrimitiveDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 427, 435, 773, 774, 797, 801, 802, 852, 854, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testUuidDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultGregorianCalendarDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testNullJsonElementSerialization": [602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlDateDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testUuidSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonObjectSerialization": [602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationWithPatternNotOverridenByTypeAdapter": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testUriDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonArraySerialization": [602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonNullDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 773, 774, 797, 801, 802, 852, 854, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigDecimalTypeAdapter": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 602, 603, 604, 648, 661, 773, 774, 797, 801, 802, 852, 854, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBuilderDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlDateSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationWithPattern": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 602, 603, 604, 648, 661, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBuilderSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 773, 797, 801, 852, 885, 886, 887, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testClassDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonPrimitiveSerialization": [602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonObjectDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 773, 774, 797, 801, 802, 852, 854, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguageCountryVariant": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 521, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 885, 886, 887, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultCalendarSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguageCountry": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateSerializationUsingBuilder": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBufferSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleSerializationWithLanguageCountry": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testClassSerialization": [580, 583, 602, 603, 604, 648, 669, 673, 675], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultCalendarDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementSerializationWithType": [602, 604], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomSerializerInvokedForPrimitives": [602, 604], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass": [580, 583, 602, 604], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomTypeAdapterDoesNotAppliesToSubClasses": [580, 583, 602, 604], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomSerializers": [580, 583, 602, 604], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedSerializers": [580, 583, 602, 604], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArraySerializer": [580, 583, 602, 604], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementSerialization": [580, 583, 602, 604], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementSerialization": [580, 583, 602, 604], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomSerializerNotInvokedForNullValues": [580, 583, 602, 604], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementSerializationWithType": [602, 604], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 538, 541, 561, 562, 563, 661, 669], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 538, 541, 561, 562, 563, 661, 669], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 538, 541, 561, 562, 563, 661, 669], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 538, 541, 561, 562, 563, 661, 669], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 538, 541, 561, 562, 563, 661, 669], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 497, 498, 499, 500, 501, 506, 507, 580, 583, 602, 603, 604, 648, 661, 669, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904, 949, 952], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testSetDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testTopLevelCollectionOfIntegersDeserialization": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testLinkedListSerialization": [602, 604], "com.google.gson.functional.CollectionTest::testSetSerialization": [580, 583, 602, 604], "com.google.gson.functional.CollectionTest::testPriorityQueue": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testCollectionOfObjectWithNullSerialization": [580, 583, 602, 604], "com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testCollectionOfStringsSerialization": [580, 583, 602, 604], "com.google.gson.functional.CollectionTest::testNullsInListSerialization": [602, 604], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testCollectionOfBagOfPrimitivesSerialization": [580, 583, 602, 604], "com.google.gson.functional.CollectionTest::testRawCollectionOfIntegersSerialization": [580, 583, 602, 604], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionSerilaization": [580, 583, 602, 604], "com.google.gson.functional.CollectionTest::testCollectionOfObjectSerialization": [580, 583, 602, 604], "com.google.gson.functional.CollectionTest::testVector": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testStack": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testUserCollectionTypeAdapter": [602, 604], "com.google.gson.functional.CollectionTest::testQueueSerialization": [602, 604], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testRawCollectionSerialization": [580, 583, 602, 604], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testTopLevelCollectionOfIntegersSerialization": [602, 604], "com.google.gson.functional.CollectionTest::testQueueDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CircularReferenceTest::testSelfReferenceIgnoredInSerialization": [580, 583, 602, 604], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 415, 419, 420, 422, 423, 424, 425, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphSerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ArrayTest::testObjectArrayWithNonPrimitivesSerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ArrayTest::testInvalidArrayDeserialization": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 902, 904], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysSerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testMultiDimenstionalObjectArraysSerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ArrayTest::testArrayElementsAreArrays": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ArrayTest::testEmptyArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ArrayTest::testSingleNullInArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsSerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testSingleStringArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsSerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testArrayOfNullSerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testNullsInArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testArrayOfCollectionSerialization": [602, 604], "com.google.gson.functional.ArrayTest::testNullsInArrayWithSerializeNullPropertySetSerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ArrayTest::testMixingTypesInObjectArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testArrayOfStringsSerialization": [580, 583, 602, 604], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideStringAdapter": [602, 604, 773, 774, 797, 801, 802, 852, 854, 887, 888, 904], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideWrapperBooleanAdapter": [602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverridePrimitiveBooleanAdapter": [602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.ObjectTypeAdapterTest::testDeserializeNullValue": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.ObjectTypeAdapterTest::testSerializeObject": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.ObjectTypeAdapterTest::testSerialize": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.ObjectTypeAdapterTest::testSerializeNullValue": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.MixedStreamTest::testReadInvalidState": [883, 887, 899, 904], "com.google.gson.MixedStreamTest::testWriteClosed": [669, 673, 675], "com.google.gson.MixedStreamTest::testWriteInvalidState": [669, 673, 675], "com.google.gson.MixedStreamTest::testWriteLenient": [323, 324, 669, 673, 675], "com.google.gson.MixedStreamTest::testReadClosed": [883, 899, 904], "com.google.gson.MixedStreamTest::testReadNulls": [880, 885, 904], "com.google.gson.MixedStreamTest::testReaderDoesNotMutateState": [880, 904], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 427, 435, 883, 885, 886, 887, 888, 904], "com.google.gson.MixedStreamTest::testWriteDoesNotMutateState": [662, 664, 673, 674], "com.google.gson.MixedStreamTest::testWriteNulls": [738], "com.google.gson.LongSerializationPolicyTest::testDefaultLongSerializationIntegration": [602, 604], "com.google.gson.LongSerializationPolicyTest::testStringLongSerializationIntegration": [602, 604], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 580, 583, 602, 603, 604, 648, 661, 885, 886, 887, 888, 904, 925, 926, 949, 952], "com.google.gson.JsonObjectTest::testPropertyWithQuotes": [687, 689], "com.google.gson.JsonObjectTest::testWritePropertyWithEmptyStringName": [687, 689], "com.google.gson.JavaSerializationTest::testNumberIsSerializable": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.JavaSerializationTest::testMapIsSerializable": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.JavaSerializationTest::testListIsSerializable": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterDoesNotAffectNonAdaptedTypes": [580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 427, 435, 580, 583, 603, 648, 661, 669, 673, 675, 728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 885, 886, 887, 899, 904], "com.google.gson.GsonTypeAdapterTest::testDefaultTypeAdapterThrowsParseException": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.GsonTest::testOverridesDefaultExcluder": [188, 189, 190, 192, 259, 263, 267, 271], "com.google.gson.GsonBuilderTest::testExcludeFieldsWithModifiers": [580, 583, 602, 604], "com.google.gson.GsonBuilderTest::testTransientFieldExclusion": [580, 583, 602, 604], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 561, 562, 563, 661, 669], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 561, 562, 563, 661, 669], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 561, 562, 563, 661, 669], "com.google.gson.DefaultInetAddressTypeAdapterTest::testInetAddressSerializationAndDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 580, 583, 602, 604, 773, 774, 797, 801, 802, 852, 854, 885, 886, 887, 888, 904], "com.google.gson.CommentsTest::testParseComments": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904]}, "com.google.gson.internal.bind.DateTypeAdapter": {"com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [41, 49, 51, 55, 59, 64], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [41, 49, 51, 55, 59, 64], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [41, 49, 51, 55, 59, 64]}, "com.google.gson.internal.bind.TimeTypeAdapter": {"com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimeDeserialization": [40, 51, 57]}, "com.google.gson.internal.bind.TreeTypeAdapter": {"com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [41, 47, 54, 55, 56, 62, 65, 66, 69, 73, 77, 81, 82, 116], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [55, 62, 65, 66, 69, 116], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [55, 62, 65, 66, 69, 106, 107], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [55, 57, 62, 65, 66, 69, 106, 107], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnFields": [55, 62, 65, 66, 69], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnClass": [55, 62, 65, 66, 69], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [55, 56, 57, 58, 62, 63, 86, 87, 107], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [55, 62, 65, 66, 69, 116], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [55, 57, 62, 65, 66, 69, 96], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [55, 57, 62, 65, 66, 69, 96], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [55, 62, 65, 66, 69, 96], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [55, 57, 62, 65, 66, 69, 96], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [55, 62, 65, 66, 69, 106, 107], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [55, 57, 62, 65, 66, 69, 116], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [55, 62, 65, 106, 107], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [55, 62, 65, 66, 69, 106, 107], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [55, 62, 65, 66, 69, 106, 107], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [54, 73, 77, 81, 82, 107], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [54, 73, 77, 81, 82, 106, 107], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [54, 73, 77, 81, 82, 106, 107], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [54, 73, 77, 81, 82, 106, 107], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [54, 73, 77, 81, 82, 106, 107], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [55, 62, 65, 106, 107], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [55, 62, 65, 106, 107], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [54, 55, 56, 57, 58, 62, 65, 66, 69, 73, 74, 86, 87, 106, 107], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [55, 62, 65, 106, 107], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [41, 47, 55, 56, 62, 65, 66, 69, 106, 107], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [55, 62, 65, 66, 69, 107], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [54, 55, 62, 65, 66, 69, 73, 77, 81, 106, 107]}, "com.google.gson.DefaultDateTypeAdapter": {"com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [37, 50, 64, 83, 84, 86, 87, 98], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [37, 50, 64, 83, 84, 85, 98], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [37, 50, 64, 83, 98], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [37, 50, 64, 83, 84, 86, 88, 89, 98]}, "com.google.gson.internal.Primitives": {"com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [82, 98, 100], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [82, 98, 100]}, "com.google.gson.JsonSyntaxException": {"com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch": [30]}, "com.google.gson.internal.bind.ObjectTypeAdapter": {"com.google.gson.functional.JsonParserTest::testParseInvalidJson": [55, 56, 59, 60, 63], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [55, 56, 76], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [55, 56, 76, 79], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [55, 56, 67, 68, 69, 70, 72, 76, 79, 82], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [55, 56, 76, 79], "com.google.gson.ObjectTypeAdapterTest::testDeserializeNullValue": [55, 56, 67, 68, 69, 70, 73, 85], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [55, 56, 59, 60, 61, 63, 67, 68, 69, 70, 72, 73, 76, 79, 85]}, "com.google.gson.internal.bind.ArrayTypeAdapter": {"com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [58, 60, 64, 69, 70, 71, 72, 73, 76, 77, 80, 85, 90, 91, 92, 93], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [60, 64, 69, 70, 71, 72, 73, 75, 76, 77, 80], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [58, 64, 70, 71, 72, 75, 85, 91, 92, 93], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [58, 64, 70, 71, 72, 75, 85, 91, 92, 93], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [64, 70, 71, 72, 75], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [58, 64, 70, 71, 72, 75], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [64, 70, 71, 72, 75], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [58, 64, 70, 71, 72, 75], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [64, 65], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [64, 70, 71, 72, 75], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [64, 70, 71, 72, 75], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [64, 70, 71, 72, 75], "com.google.gson.functional.JsonParserTest::testParseInvalidJson": [64, 70, 71, 72], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [58, 85, 90, 91, 92, 93], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [58, 64, 70, 71, 72, 85, 91, 93], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [58, 85, 90, 91, 92, 93], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [58, 60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [58, 64, 70, 71, 72, 75], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testInvalidArrayDeserialization": [64, 70, 71, 72], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [60, 64, 69, 70, 71, 76, 77, 80], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [60, 64, 69, 70, 71, 72, 73, 75, 76, 77, 80]}, "com.google.gson.stream.JsonReader": {"com.google.gson.regression.JsonAdapterNullSafeTest::testNullSafeBugDeserialize": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.internal.bind.JsonElementReaderTest::testLenientNansAndInfinities": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 612, 613, 616, 620, 621, 622, 625, 626, 627, 643, 644, 645, 650, 652, 655, 656, 669, 670, 672, 705, 706, 709, 745, 765, 805, 810, 811, 827, 829, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbersFromStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.internal.bind.JsonElementReaderTest::testStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.internal.bind.JsonElementReaderTest::testArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 732, 733, 734, 745, 763, 805, 810, 812, 814, 816, 819, 820, 827, 829, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.internal.bind.JsonElementReaderTest::testNestedObjects": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 462, 463, 465, 478, 479, 481, 482, 483, 494, 495, 497, 502, 503, 516, 517, 519, 532, 533, 534, 549, 550, 574, 777, 782, 784, 786, 787, 791, 793, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.internal.bind.JsonElementReaderTest::testSkipValue": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 552, 553, 570, 572, 574, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 638, 745, 763, 777, 782, 784, 786, 787, 791, 805, 810, 812, 814, 815, 827, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.internal.bind.JsonElementReaderTest::testBooleans": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 443, 462, 463, 464, 465, 467, 468, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 581, 599, 603, 604, 606, 607, 608, 610, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 840, 844, 845, 847, 848, 851, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.internal.bind.JsonElementReaderTest::testStrictNansAndInfinities": [238, 239, 240, 245, 269, 270, 272, 293, 326, 333, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 612, 613, 616, 620, 621, 622, 625, 626, 627, 643, 644, 645, 650, 652, 655, 656, 669, 670, 672, 705, 706, 709, 745, 765, 805, 810, 811, 827, 829, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.internal.bind.JsonElementReaderTest::testObject": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 732, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 816, 819, 820, 827, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbers": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 732, 733, 734, 745, 763, 805, 810, 812, 814, 816, 819, 820, 827, 829, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.internal.bind.JsonElementReaderTest::testWrongType": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 478, 516, 532, 533, 534, 549, 550, 552, 553, 570, 572, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.internal.bind.JsonElementReaderTest::testStringsFromNumbers": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 732, 734, 745, 763, 805, 810, 812, 814, 816, 819, 820, 829, 1267, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1222, 1223, 1224, 1248, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1222, 1223, 1224, 1248, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1222, 1223, 1224, 1248, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 840, 844, 848, 849, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 385, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 494, 495, 509, 510, 511, 516, 519, 520, 530, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 777, 782, 783, 791, 793, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1222, 1223, 1224, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1559, 1567, 1568], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 848, 849, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.UncategorizedTest::testTrailingWhitespace": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 599, 603, 604, 606, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 777, 782, 784, 786, 787, 791, 793, 840, 844, 845, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 443, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 572, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 848, 849, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 443, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 552, 553, 570, 572, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 845, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 608, 609, 620, 621, 622, 625, 626, 627, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 608, 609, 620, 621, 622, 625, 626, 627, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 608, 609, 620, 621, 622, 625, 626, 627, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 608, 609, 620, 621, 622, 625, 626, 627, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 502, 503, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 732, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 814, 816, 819, 820, 827, 829, 987, 990, 991, 994, 995, 997, 998, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.StringTest::testSingleQuoteInStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.StringTest::testAssignmentCharDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 570, 805, 810, 812, 813, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.StringTest::testEscapingQuotesInStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1001, 1002, 1004, 1005, 1006, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1499, 1567, 1568], "com.google.gson.functional.StringTest::testEscapingQuotesInStringSerialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1001, 1002, 1004, 1005, 1006, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1499, 1567, 1568], "com.google.gson.functional.StringTest::testStringWithEscapedSlashDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 805, 810, 812, 813, 829, 987, 990, 991, 994, 995, 997, 1000, 1001, 1002, 1004, 1005, 1006, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1499, 1567, 1568, 1570], "com.google.gson.functional.StringTest::testEscapedCtrlNInStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 805, 810, 812, 813, 829, 987, 990, 991, 994, 995, 997, 1000, 1001, 1002, 1004, 1005, 1006, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1499, 1567, 1568], "com.google.gson.functional.StringTest::testEscapedBackslashInStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 805, 810, 812, 813, 829, 987, 990, 991, 994, 995, 997, 1000, 1001, 1002, 1004, 1005, 1006, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1499, 1567, 1568], "com.google.gson.functional.StringTest::testJavascriptKeywordsInStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 805, 810, 812, 813, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.StringTest::testStringValueDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.StringTest::testEscapedCtrlRInStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 805, 810, 812, 813, 829, 987, 990, 991, 994, 995, 997, 1000, 1001, 1002, 1004, 1005, 1006, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1499, 1567, 1568], "com.google.gson.functional.StringTest::testSingleQuoteInStringSerialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1001, 1002, 1004, 1005, 1006, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1499, 1500, 1507, 1520, 1567, 1568], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 445, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 611, 612, 614, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 650, 652, 655, 656, 669, 670, 698, 699, 705, 706, 711, 713, 714, 722, 723, 731, 735, 737, 738, 745, 763, 777, 782, 784, 785, 791, 793, 864, 868, 869, 886, 891, 897, 899, 915, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 698, 699, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 722, 723, 731, 733, 734, 735, 737, 738, 745, 763, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 886, 891, 897, 899, 915, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 611, 612, 614, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 650, 652, 655, 656, 669, 670, 698, 699, 705, 706, 711, 713, 714, 722, 723, 731, 735, 737, 738, 745, 763, 777, 782, 784, 785, 791, 793, 864, 868, 869, 886, 891, 897, 899, 915, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 669, 670, 698, 699, 705, 706, 711, 713, 714, 722, 723, 731, 735, 737, 738, 745, 763, 886, 891, 897, 899, 915, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 669, 670, 698, 699, 705, 706, 711, 713, 714, 722, 723, 731, 735, 737, 738, 745, 763, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 886, 891, 897, 899, 915, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 669, 670, 698, 699, 705, 706, 711, 713, 714, 722, 723, 731, 735, 737, 738, 745, 763, 886, 891, 897, 899, 915, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 669, 670, 698, 699, 705, 706, 711, 712, 713, 714, 715, 722, 723, 731, 735, 737, 738, 745, 763, 805, 810, 812, 813, 827, 886, 891, 897, 899, 915, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1001, 1002, 1004, 1005, 1006, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1499, 1500, 1507, 1520, 1567, 1568, 1570, 1574, 1575, 1581], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1001, 1002, 1004, 1005, 1006, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1499, 1500, 1507, 1520, 1567, 1568, 1570, 1574, 1575, 1581], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 931, 936, 937, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570, 1574, 1575, 1581], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialized": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ReadersWritersTest::testTopLevelNullObjectDeserializationWithReader": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 445, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 638, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.ReadersWritersTest::testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 445, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 638, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 536, 537, 538, 539, 543, 549, 550, 570, 805, 810, 812, 814, 815, 827, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ReadersWritersTest::testTypeMismatchThrowsJsonSyntaxExceptionForReaders": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 385, 423, 424, 425, 428, 443, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 599, 603, 604, 606, 620, 621, 622, 625, 626, 631, 638, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 848, 849, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ReadersWritersTest::testTypeMismatchThrowsJsonSyntaxExceptionForStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 385, 423, 424, 425, 428, 443, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 599, 603, 604, 606, 620, 621, 622, 625, 626, 631, 638, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 455, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 536, 537, 538, 539, 540, 543, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 829, 840, 844, 845, 847, 848, 849, 851, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1395, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsInt": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 1155, 1161, 1171, 1174, 1189, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsLongPrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 931, 936, 942, 945, 960, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsFloat": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 672, 674, 676, 677, 691, 692, 698, 699, 705, 711, 712, 713, 714, 715, 718, 721, 722, 723, 724, 725, 731, 735, 738, 886, 891, 897, 898, 909, 917, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testPrimitiveLongAutoboxedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 731, 732, 734, 931, 936, 939, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsFloatPrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 886, 891, 897, 900, 902, 904, 905, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testBooleanDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 443, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 599, 603, 604, 606, 607, 608, 610, 620, 621, 622, 625, 626, 631, 638, 840, 844, 847, 848, 851, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsBigIntegerFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 672, 674, 676, 677, 691, 692, 698, 699, 705, 711, 712, 713, 714, 715, 718, 721, 722, 723, 724, 725, 731, 735, 738, 805, 810, 812, 814, 816, 819, 821, 822, 829, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testBigDecimalNegativeInfinityDeserializationNotSupported": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 669, 670, 672, 705, 706, 709, 745, 765, 805, 810, 811, 829, 1027, 1028, 1032, 1033, 1056, 1057, 1077, 1078, 1084, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testLargeDoubleDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 691, 692, 698, 699, 705, 711, 713, 714, 722, 723, 724, 725, 731, 735, 738, 886, 891, 897, 898, 909, 917, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testLongAsStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 931, 936, 942, 945, 946, 949, 952, 955, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsShortWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 1155, 1161, 1171, 1174, 1189, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testStringsAsBooleans": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 568, 572, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testFloatInfinityDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 886, 891, 897, 900, 902, 903, 909, 917, 1027, 1028, 1032, 1033, 1056, 1057, 1077, 1078, 1084, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testBigDecimalNoFractAsStringRepresentationDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 683, 684, 691, 692, 705, 711, 713, 714, 722, 724, 725, 731, 735, 738, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.PrimitiveTest::testBigDecimalPreservePrecisionDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 698, 699, 705, 711, 713, 714, 722, 723, 731, 735, 738, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDeserializingNonZeroDecimalPointValuesAsIntegerFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 698, 699, 705, 711, 713, 714, 722, 723, 731, 735, 738, 931, 936, 942, 943, 964, 965, 966, 967, 1155, 1161, 1171, 1172, 1193, 1194, 1195, 1196, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigIntegerDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 714, 715, 718, 719, 721, 731, 734, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.PrimitiveTest::testDoubleNaNDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 612, 613, 620, 621, 622, 625, 626, 627, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 886, 891, 897, 900, 902, 903, 909, 917, 1027, 1028, 1032, 1033, 1056, 1057, 1077, 1078, 1084, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBigInteger": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 805, 810, 812, 814, 816, 819, 821, 825, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testNumberAsStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBigDecimal": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 805, 810, 812, 814, 816, 819, 821, 825, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsIntegerFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 672, 674, 676, 677, 691, 692, 698, 699, 705, 711, 712, 713, 714, 715, 718, 721, 722, 723, 724, 725, 731, 735, 738, 1155, 1161, 1171, 1172, 1193, 1194, 1195, 1196, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testBigDecimalAsStringRepresentationDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 683, 684, 691, 692, 698, 699, 705, 711, 713, 714, 722, 723, 724, 725, 731, 735, 738, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsShortPrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 1155, 1161, 1171, 1174, 1189, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBooleanWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 840, 844, 848, 853, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testPrimitiveIntegerAutoboxedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 731, 732, 734, 1155, 1161, 1162, 1168, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.PrimitiveTest::testBigIntegerDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 714, 715, 718, 719, 721, 731, 735, 738, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testByteDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 731, 732, 734, 1155, 1161, 1162, 1168, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 669, 670, 672, 705, 706, 709, 745, 765, 886, 891, 897, 900, 902, 903, 909, 917, 1027, 1028, 1032, 1033, 1056, 1057, 1077, 1078, 1084, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsByteWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 1155, 1161, 1171, 1174, 1189, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDoubleInfinityDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 886, 891, 897, 900, 902, 903, 909, 917, 1027, 1028, 1032, 1033, 1056, 1057, 1077, 1078, 1084, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testBigDecimalInfinityDeserializationNotSupported": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 805, 810, 811, 829, 1027, 1028, 1032, 1033, 1056, 1057, 1077, 1078, 1084, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsNumber": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDeserializingDecimalPointValueZeroSucceeds": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 698, 699, 705, 711, 713, 714, 722, 723, 731, 735, 738, 1155, 1161, 1171, 1172, 1193, 1194, 1201, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBigInteger": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 805, 810, 812, 814, 816, 819, 821, 825, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 672, 674, 698, 699, 705, 711, 712, 713, 714, 715, 718, 721, 722, 723, 731, 735, 738, 886, 891, 897, 898, 909, 917, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsLong": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 714, 715, 718, 719, 721, 731, 735, 738, 931, 936, 942, 943, 964, 965, 966, 967, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testUnquotedStringDeserializationFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 333, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 536, 537, 538, 539, 542, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 805, 810, 811, 827, 829, 1027, 1028, 1032, 1033, 1056, 1057, 1077, 1078, 1083, 1084, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1400, 1401, 1559, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBigDecimal": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 805, 810, 812, 814, 816, 819, 821, 825, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 669, 670, 672, 676, 677, 691, 692, 698, 699, 705, 706, 711, 713, 714, 722, 723, 724, 725, 731, 735, 737, 738, 745, 763, 886, 891, 897, 899, 915, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testPrimitiveClassLiteral": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 731, 732, 734, 1155, 1161, 1162, 1168, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 669, 670, 672, 705, 706, 709, 745, 765, 886, 891, 897, 900, 902, 903, 909, 917, 1027, 1028, 1032, 1033, 1056, 1057, 1077, 1078, 1084, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsFloatWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 886, 891, 897, 900, 902, 904, 905, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testBigDecimalDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 672, 674, 676, 677, 691, 692, 698, 699, 705, 711, 712, 713, 714, 715, 718, 721, 722, 723, 724, 725, 731, 735, 738, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testNumberDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 698, 699, 705, 711, 712, 713, 714, 715, 718, 719, 721, 722, 723, 731, 732, 734, 735, 738, 805, 810, 812, 814, 816, 819, 820, 821, 822, 829, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBooleanPrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 840, 844, 848, 853, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testFloatNaNDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 612, 613, 620, 621, 622, 625, 626, 627, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 886, 891, 897, 900, 902, 903, 909, 917, 1027, 1028, 1032, 1033, 1056, 1057, 1077, 1078, 1084, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsDouble": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 672, 674, 676, 677, 691, 692, 698, 699, 705, 711, 712, 713, 714, 715, 718, 721, 722, 723, 724, 725, 731, 735, 738, 886, 891, 897, 898, 909, 917, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsInteger": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 1155, 1161, 1171, 1174, 1189, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.PrimitiveTest::testValueVeryCloseToZeroIsZero": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 672, 674, 676, 677, 691, 692, 698, 699, 705, 711, 712, 713, 714, 715, 718, 721, 722, 723, 724, 725, 731, 735, 738, 931, 936, 942, 943, 964, 965, 972, 1155, 1161, 1171, 1172, 1193, 1194, 1201, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsBigDecimal": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 714, 715, 718, 719, 721, 731, 735, 738, 805, 810, 812, 814, 816, 819, 821, 822, 829, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testReallyLongValuesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 714, 715, 718, 719, 721, 731, 732, 734, 931, 936, 939, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBytePrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 1155, 1161, 1171, 1174, 1189, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testBigDecimalNaNDeserializationNotSupported": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 612, 613, 620, 621, 622, 625, 626, 627, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 805, 810, 811, 829, 1027, 1028, 1032, 1033, 1056, 1057, 1077, 1078, 1084, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsDoubleWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 886, 891, 897, 900, 902, 904, 905, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testQuotedStringSerializationAndDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testBadValueForBigIntegerDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 698, 699, 705, 711, 712, 713, 714, 715, 722, 723, 731, 735, 738, 805, 810, 812, 814, 816, 819, 821, 822, 829, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsNumber": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigDecimalDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 698, 699, 705, 711, 713, 714, 722, 723, 731, 735, 738, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsLongWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 931, 936, 942, 945, 960, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsInteger": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 714, 715, 718, 719, 721, 731, 735, 738, 1155, 1161, 1171, 1172, 1193, 1194, 1195, 1196, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsDoublePrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 886, 891, 897, 900, 902, 904, 905, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDoubleAsStringRepresentationDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 683, 684, 691, 692, 698, 699, 705, 711, 713, 714, 722, 723, 724, 725, 731, 735, 738, 886, 891, 897, 898, 909, 917, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.PrimitiveTest::testDoubleNoFractAsStringRepresentationDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 683, 684, 691, 692, 705, 711, 713, 714, 722, 724, 725, 731, 735, 738, 886, 891, 897, 898, 909, 917, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.PrimitiveCharacterTest::testPrimitiveCharacterAutoboxedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 805, 810, 811, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1027, 1028, 1032, 1033, 1056, 1057, 1077, 1078, 1084, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 848, 849, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 732, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 816, 819, 820, 827, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 848, 849, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 698, 699, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 722, 723, 731, 733, 734, 735, 737, 738, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 848, 849, 886, 891, 897, 899, 915, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 840, 844, 848, 849, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 462, 463, 465, 478, 481, 494, 495, 502, 503, 516, 532, 533, 534, 549, 550, 574, 1267, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 443, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 572, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 848, 849, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 848, 849, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 443, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 572, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 848, 849, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 785, 786, 787, 791, 793, 805, 810, 812, 813, 827, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 552, 553, 572, 574, 777, 782, 784, 786, 787, 791, 793, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 500, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 765, 777, 782, 783, 784, 785, 786, 787, 791, 793, 805, 810, 812, 813, 827, 840, 844, 845, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 848, 849, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 777, 782, 784, 786, 787, 791, 793, 864, 868, 869, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 845, 848, 849, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 745, 765, 777, 782, 783, 791, 793, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ObjectTest::testEmptyStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 462, 463, 465, 478, 516, 532, 533, 534, 1276, 1278, 1282, 1287, 1301, 1320, 1321, 1323, 1324, 1325, 1392, 1393, 1567], "com.google.gson.functional.ObjectTest::testTruncatedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1392, 1393, 1567, 1568], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 785, 791, 793, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 683, 684, 691, 692, 698, 699, 705, 706, 711, 712, 713, 714, 722, 723, 724, 725, 731, 733, 734, 735, 737, 738, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 816, 819, 821, 823, 827, 840, 844, 845, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 777, 782, 784, 786, 787, 791, 793, 864, 868, 869, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1222, 1223, 1224, 1248, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 777, 782, 784, 786, 787, 791, 793, 864, 868, 869, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 777, 782, 784, 785, 791, 793, 864, 868, 869, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.NullObjectAndFieldTest::testTopLevelNullObjectDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 445, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 638, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 777, 782, 784, 786, 787, 791, 793, 864, 868, 869, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 777, 782, 783, 791, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1028, 1032, 1033, 1083, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 765, 777, 782, 783, 791, 793, 864, 868, 869, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1001, 1002, 1004, 1005, 1006, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1499, 1567, 1568], "com.google.gson.functional.MapTest::testMapDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedLongKeys": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 745, 765, 805, 810, 812, 814, 815, 827, 931, 936, 942, 945, 946, 947, 952, 953, 955, 987, 990, 991, 994, 995, 997, 998, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testComplexKeysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 385, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 481, 494, 495, 500, 516, 532, 533, 534, 549, 550, 574, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testBooleanKeyDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testHashMapDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1155, 1161, 1171, 1174, 1175, 1178, 1182, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedIntegerKeys": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 745, 765, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1028, 1032, 1033, 1083, 1155, 1161, 1171, 1174, 1175, 1176, 1182, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 805, 810, 812, 814, 815, 827, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 805, 810, 811, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1028, 1032, 1033, 1083, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testConcurrentHashMap": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1155, 1161, 1171, 1174, 1175, 1178, 1182, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1155, 1161, 1171, 1174, 1175, 1178, 1182, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 765, 805, 810, 811, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1028, 1032, 1033, 1083, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testNumberKeyDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 805, 810, 812, 813, 827, 886, 891, 897, 900, 901, 915, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 805, 810, 812, 814, 815, 827, 864, 868, 869, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 805, 810, 811, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1028, 1032, 1033, 1083, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 599, 603, 604, 606, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 805, 810, 812, 814, 815, 827, 840, 844, 845, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testMapDeserializationEmpty": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 462, 463, 465, 478, 481, 494, 495, 502, 503, 516, 532, 533, 534, 549, 550, 574, 1267, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.MapTest::testMapDeserializationWithLongKeys": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 805, 810, 812, 814, 815, 827, 931, 936, 942, 945, 946, 949, 952, 953, 955, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1155, 1161, 1171, 1174, 1175, 1178, 1182, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testConcurrentMap": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1155, 1161, 1171, 1174, 1175, 1178, 1182, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1155, 1161, 1171, 1174, 1175, 1178, 1182, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testStringKeyDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testDeerializeMapOfMaps": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 494, 495, 500, 516, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapTest::testSortedMap": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1155, 1161, 1171, 1174, 1175, 1178, 1182, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 360, 361, 363, 364, 366, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 886, 891, 897, 900, 901, 909, 915, 917, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 360, 361, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 360, 361, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 443, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 572, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 845, 848, 849, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 360, 361, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.LeniencyTest::testLenientFromJson": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 568, 572, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1377, 1384, 1385, 1386, 1388, 1389, 1411, 1412, 1413, 1417, 1567, 1568], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.JsonParserTest::testParseInvalidJson": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 412, 413, 414, 416, 423, 424, 425, 428, 434, 462, 463, 464, 465, 467, 478, 516, 532, 533, 534, 549, 550, 552, 553, 572, 1267, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1392, 1393, 1567, 1568, 1570], "com.google.gson.functional.JsonParserTest::testExtraCommasInMaps": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 494, 495, 502, 505, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 805, 810, 811, 827, 1028, 1032, 1033, 1083, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1559, 1567, 1568], "com.google.gson.functional.JsonParserTest::testExtraCommasInArrays": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 445, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 552, 559, 561, 562, 572, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 805, 810, 811, 827, 864, 868, 869, 1028, 1032, 1033, 1083, 1267, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnFields": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnClass": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 777, 782, 784, 785, 791, 793, 864, 868, 869, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 777, 782, 784, 786, 787, 791, 793, 931, 936, 942, 945, 946, 949, 953, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 806, 807, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 494, 495, 500, 516, 519, 532, 533, 534, 549, 550, 568, 570, 574, 777, 778, 779, 782, 784, 785, 791, 805, 806, 807, 810, 812, 813, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testNullSafeObjectFromJson": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 445, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 638, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.JavaUtilTest::testProperties": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.JavaUtilTest::testCurrency": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 829, 864, 868, 869, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicIntegerArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 931, 936, 942, 945, 946, 949, 952, 953, 955, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicInteger": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 714, 715, 718, 719, 721, 731, 732, 734, 1155, 1161, 1162, 1168, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLong": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 714, 715, 718, 719, 721, 731, 732, 734, 931, 936, 939, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArrayWithStringSerializationPolicy": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 568, 572, 931, 936, 942, 945, 946, 949, 953, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 931, 936, 937, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicBoolean": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 443, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 599, 603, 604, 606, 620, 621, 622, 625, 626, 631, 638, 840, 844, 847, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.InternationalizationTest::testStringsWithUnicodeChineseCharactersDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.InternationalizationTest::testStringsWithUnicodeChineseCharactersEscapedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 805, 810, 812, 813, 829, 987, 990, 991, 994, 995, 997, 1000, 1001, 1002, 1004, 1005, 1006, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1499, 1500, 1507, 1520, 1567, 1568], "com.google.gson.functional.InternationalizationTest::testStringsWithRawChineseCharactersDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForCollectionType": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1222, 1223, 1224, 1227, 1230, 1233, 1236, 1239, 1241, 1242, 1248, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1222, 1223, 1224, 1227, 1230, 1233, 1236, 1239, 1241, 1242, 1248, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1222, 1223, 1224, 1227, 1230, 1233, 1236, 1239, 1241, 1242, 1248, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 698, 699, 705, 706, 711, 712, 713, 714, 722, 723, 731, 733, 734, 735, 737, 738, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 886, 891, 897, 898, 899, 909, 915, 917, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 845, 848, 849, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 698, 699, 705, 706, 711, 712, 713, 714, 715, 722, 723, 731, 733, 734, 735, 737, 738, 745, 763, 765, 777, 782, 783, 791, 793, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1155, 1161, 1166, 1222, 1223, 1224, 1227, 1230, 1233, 1236, 1239, 1241, 1243, 1245, 1246, 1248, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 502, 503, 516, 517, 519, 532, 533, 534, 549, 550, 574, 777, 782, 784, 786, 787, 791, 793, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1001, 1002, 1004, 1005, 1006, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1499, 1567, 1568], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 845, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1001, 1002, 1004, 1005, 1006, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1499, 1500, 1507, 1520, 1567, 1568], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 829, 840, 844, 845, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1001, 1002, 1004, 1005, 1006, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1499, 1567, 1568], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 845, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1001, 1002, 1004, 1005, 1006, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1499, 1500, 1507, 1520, 1567, 1568], "com.google.gson.functional.EnumTest::testEnumSubclass": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.EnumTest::testEnumSubclassAsParameterizedType": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.EnumTest::testCollectionOfEnumsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.EnumTest::testEnumSet": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 443, 450, 453, 462, 463, 464, 465, 467, 468, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 572, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 845, 848, 849, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBufferDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 462, 463, 465, 478, 481, 494, 495, 502, 503, 516, 532, 533, 534, 549, 550, 574, 1267, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimeDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testBitSetDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 423, 424, 425, 428, 434, 436, 443, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 805, 810, 812, 814, 815, 827, 840, 844, 845, 848, 849, 987, 990, 991, 994, 995, 997, 998, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguage": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.DefaultTypeAdaptersTest::testUuidDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultGregorianCalendarDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 423, 424, 425, 428, 430, 432, 440, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 732, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1155, 1156, 1157, 1161, 1162, 1166, 1168, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 735, 737, 738, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 816, 819, 821, 823, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlDateDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testUriDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 805, 810, 811, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1028, 1032, 1033, 1083, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBuilderDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testClassDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 805, 810, 811, 829, 1027, 1028, 1032, 1033, 1056, 1057, 1077, 1078, 1084, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 805, 810, 812, 813, 829, 987, 990, 991, 994, 995, 997, 1000, 1001, 1002, 1004, 1005, 1006, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1499, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguageCountryVariant": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 805, 810, 812, 813, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 494, 495, 497, 516, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 669, 670, 672, 676, 677, 691, 692, 698, 699, 702, 705, 711, 713, 714, 722, 723, 724, 725, 777, 782, 784, 786, 787, 791, 793, 805, 810, 811, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1027, 1028, 1032, 1033, 1077, 1078, 1084, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 568, 572, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguageCountry": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 805, 810, 812, 813, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 669, 670, 672, 674, 676, 677, 691, 692, 698, 699, 705, 706, 711, 712, 713, 714, 715, 718, 721, 722, 723, 724, 725, 731, 735, 737, 738, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 816, 819, 821, 823, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultCalendarDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 423, 424, 425, 428, 430, 432, 440, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 732, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1155, 1156, 1157, 1161, 1162, 1166, 1168, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 805, 810, 812, 813, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 568, 572, 805, 810, 812, 813, 827, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 731, 734, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 765, 777, 782, 783, 791, 793, 864, 868, 869, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 732, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 816, 819, 820, 827, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 732, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 816, 819, 820, 827, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 805, 810, 812, 813, 827, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 443, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 604, 606, 607, 611, 616, 620, 621, 622, 625, 626, 631, 638, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 731, 732, 734, 805, 810, 812, 814, 816, 819, 820, 829, 840, 844, 847, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 572, 574, 745, 765, 777, 782, 783, 791, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1028, 1032, 1033, 1083, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 572, 574, 745, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 777, 782, 783, 791, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1028, 1032, 1033, 1083, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 777, 782, 784, 786, 787, 791, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 827, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 805, 810, 812, 814, 815, 827, 886, 891, 892, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CollectionTest::testSetDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CollectionTest::testTopLevelCollectionOfIntegersDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 568, 572, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CollectionTest::testPriorityQueue": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 443, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 572, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 845, 848, 849, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 443, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 572, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 732, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 848, 849, 886, 891, 892, 894, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 445, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 805, 810, 812, 814, 815, 827, 864, 868, 869, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CollectionTest::testVector": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CollectionTest::testStack": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CollectionTest::testQueueDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 568, 572, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 552, 553, 572, 574, 777, 782, 784, 786, 787, 791, 793, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 568, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 698, 699, 705, 706, 711, 712, 713, 714, 722, 723, 731, 732, 733, 734, 735, 737, 738, 745, 763, 805, 810, 812, 813, 827, 886, 891, 892, 894, 897, 898, 899, 909, 915, 917, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ArrayTest::testInvalidArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 476, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1559, 1567, 1568], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 445, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 864, 868, 869, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 445, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 805, 810, 812, 814, 815, 827, 864, 868, 869, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 445, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 864, 868, 869, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 552, 553, 572, 1267, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 568, 572, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideWrapperBooleanAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 443, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 604, 606, 607, 611, 616, 620, 621, 622, 625, 626, 631, 638, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 731, 732, 734, 840, 844, 847, 1155, 1161, 1162, 1168, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverridePrimitiveBooleanAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 443, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 604, 606, 607, 611, 616, 620, 621, 622, 625, 626, 631, 638, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 731, 732, 734, 840, 844, 847, 1155, 1161, 1162, 1168, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.ObjectTypeAdapterTest::testDeserializeNullValue": [238, 239, 240, 245, 269, 270, 272, 293, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 549, 550, 574, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 777, 782, 784, 786, 787, 791, 864, 868, 869, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [238, 239, 240, 245, 269, 270, 272, 293, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 445, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 549, 550, 570, 572, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 611, 612, 614, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 864, 868, 869, 886, 891, 892, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389], "com.google.gson.MixedStreamTest::testReadInvalidState": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 377, 378, 379, 381, 382, 383, 423, 424, 425, 428, 440, 462, 463, 465, 478, 481, 494, 495, 497, 516, 532, 549, 550, 572, 574, 805, 810, 812, 814, 816, 819, 821, 825, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389], "com.google.gson.MixedStreamTest::testReadClosed": [269, 423, 424, 425, 462, 463, 465, 478, 516, 532, 537, 545, 546, 1208, 1209, 1210], "com.google.gson.MixedStreamTest::testReaderDoesNotMutateState": [326, 333], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 464, 465, 467, 468, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 549, 550, 570, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1000, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389], "com.google.gson.JsonStreamParserTest::testNoSideEffectForHasNext": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 455, 462, 463, 465, 478, 516, 532, 533, 534, 536, 537, 538, 539, 540, 543, 549, 550, 568, 805, 810, 812, 813, 827, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1395, 1567, 1568], "com.google.gson.JsonStreamParserTest::testCallingNextBeyondAvailableInput": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 455, 462, 463, 465, 478, 516, 532, 533, 534, 536, 537, 538, 539, 540, 543, 549, 550, 568, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1395, 1567, 1568], "com.google.gson.JsonStreamParserTest::testIterator": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 455, 462, 463, 465, 478, 516, 532, 533, 534, 536, 537, 538, 539, 540, 543, 549, 550, 568, 805, 810, 812, 813, 827, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1395, 1567, 1568], "com.google.gson.JsonStreamParserTest::testParseTwoStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 536, 537, 538, 539, 543, 549, 550, 568, 805, 810, 812, 813, 827, 829, 987, 990, 991, 994, 995, 997, 998, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.JsonParserTest::testParseUnquotedMultiWordStringFails": [230, 238, 239, 240, 245, 269, 270, 272, 293, 326, 333, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 536, 537, 538, 539, 542, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 604, 605, 620, 621, 622, 625, 626, 627, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 805, 810, 811, 827, 1028, 1032, 1033, 1083, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1400, 1401, 1559, 1567, 1568], "com.google.gson.JsonParserTest::testParseMixedArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 450, 453, 462, 463, 464, 465, 467, 468, 478, 481, 494, 495, 502, 503, 516, 532, 533, 534, 549, 550, 570, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 732, 733, 734, 745, 763, 805, 810, 812, 814, 815, 816, 819, 820, 827, 829, 987, 990, 991, 994, 995, 997, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.JsonParserTest::testParseEmptyString": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.JsonParserTest::testParseUnquotedSingleWordStringFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 604, 605, 620, 621, 622, 625, 626, 627, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 805, 810, 811, 829, 1027, 1028, 1032, 1033, 1056, 1057, 1077, 1078, 1084, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.JsonParserTest::testParseString": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 732, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 814, 816, 819, 820, 827, 829, 987, 990, 991, 994, 995, 997, 1000, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.JsonParserTest::testParseReader": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 732, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 814, 816, 819, 820, 827, 829, 987, 990, 991, 994, 995, 997, 1000, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.JsonParserTest::testParseUnquotedStringArrayFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 805, 810, 811, 827, 829, 1027, 1028, 1032, 1033, 1077, 1078, 1083, 1084, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.JsonParserTest::testParseInvalidJson": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 412, 413, 414, 416, 423, 424, 425, 428, 434, 462, 463, 464, 465, 467, 478, 516, 532, 533, 534, 549, 550, 552, 553, 572, 1267, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1392, 1393, 1567, 1568, 1570], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 536, 537, 538, 539, 543, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 829, 840, 844, 845, 847, 848, 849, 851, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 462, 463, 465, 478, 479, 481, 494, 495, 497, 516, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 599, 603, 604, 606, 620, 621, 622, 625, 626, 631, 638, 745, 763, 777, 782, 784, 786, 787, 791, 793, 840, 844, 847, 987, 990, 991, 994, 995, 997, 998, 1000, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.JavaSerializationTest::testNumberIsSerializable": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 672, 676, 677, 691, 692, 698, 699, 705, 706, 711, 712, 713, 714, 722, 723, 724, 725, 731, 733, 734, 735, 737, 738, 745, 763, 805, 810, 812, 814, 816, 819, 821, 823, 827, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.JavaSerializationTest::testMapIsSerializable": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1155, 1161, 1166, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.JavaSerializationTest::testListIsSerializable": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterDoesNotAffectNonAdaptedTypes": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 990, 991, 994, 995, 997, 1000, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 731, 732, 734, 805, 810, 812, 814, 816, 819, 820, 829, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 714, 715, 718, 719, 721, 731, 734, 1276, 1278, 1279, 1282, 1285, 1287, 1288, 1297, 1298, 1301, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568, 1570], "com.google.gson.GsonTypeAdapterTest::testDefaultTypeAdapterThrowsParseException": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 805, 810, 812, 814, 816, 819, 821, 825, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1376, 1388, 1389, 1567, 1568], "com.google.gson.CommentsTest::testParseComments": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1267, 1276, 1278, 1282, 1285, 1287, 1288, 1297, 1298, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1332, 1333, 1337, 1341, 1342, 1343, 1353, 1354, 1357, 1358, 1361, 1362, 1367, 1368, 1369, 1370, 1376, 1377, 1384, 1385, 1386, 1388, 1389, 1411, 1412, 1413, 1417, 1428, 1429, 1434, 1435, 1567, 1568]}, "com.google.gson.JsonObject": {"com.google.gson.internal.bind.JsonElementReaderTest::testNestedObjects": [33, 57, 132], "com.google.gson.internal.bind.JsonElementReaderTest::testObject": [33, 57, 132], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [33, 57, 161], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [33, 57, 132, 161], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [33, 57, 132], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [33, 57, 132], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [33, 57, 161], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [33, 57, 161], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [33, 57, 161], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [33, 57, 132], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [33, 57, 132], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [33, 57, 132], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [33, 57, 151], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [33, 57, 79, 90, 122, 132], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [33, 57, 79, 90, 122, 132], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [33, 57, 68, 79, 122, 132], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [33, 57, 79, 90, 122, 132], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [33, 57, 161], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [33, 57, 161], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [33, 57, 161], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [33, 57, 161], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [33, 57, 161], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [33, 57, 161], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [33, 57, 132, 161], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [33, 57, 132], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [33, 57, 161], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [33, 57, 79, 122, 132, 161], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [33, 57, 79, 122, 132, 161], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [33, 57, 79, 122, 132, 161], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [33, 57, 79, 122, 132, 161], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [33, 57, 132, 161], "com.google.gson.JsonParserTest::testParseString": [33, 57, 161], "com.google.gson.JsonParserTest::testParseReader": [33, 57, 161], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [33, 57, 132], "com.google.gson.JsonObjectTest::testSize": [33, 141], "com.google.gson.JsonObjectTest::testDeepCopy": [33, 38, 39, 40, 42, 57, 161], "com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName": [33, 57, 161], "com.google.gson.JsonObjectTest::testAddingBooleanProperties": [33, 57, 101, 122, 151, 161], "com.google.gson.JsonObjectTest::testAddingNullOrEmptyPropertyName": [57], "com.google.gson.JsonObjectTest::testAddingCharacterProperties": [33, 57, 112, 122, 151, 161], "com.google.gson.JsonObjectTest::testEqualsNonEmptyObject": [33, 196], "com.google.gson.JsonObjectTest::testAddingStringProperties": [33, 57, 79, 122, 151, 161], "com.google.gson.JsonObjectTest::testAddingNullPropertyValue": [33, 54, 55, 57, 151, 161], "com.google.gson.JsonObjectTest::testAddingAndRemovingObjectProperties": [33, 57, 68, 151, 161], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [33, 57, 151], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [33, 132], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [33, 132]}, "com.google.gson.reflect.TypeToken": {"com.google.gson.regression.JsonAdapterNullSafeTest::testNullSafeBugDeserialize": [72, 73, 74, 94, 101, 280, 296, 303], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassDeserialization": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [72, 73, 74, 94, 101, 280, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [72, 73, 74, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [72, 73, 74, 94, 101, 280, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [72, 73, 74, 94, 101, 280, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [72, 73, 74, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [72, 73, 74, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [72, 73, 74, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [72, 73, 74, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialized": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.PrimitiveTest::testStringsAsBooleans": [62, 82, 86, 87, 101], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.MapTest::testMapDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedLongKeys": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testBooleanKeyDeserialization": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testHashMapDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedIntegerKeys": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.MapTest::testConcurrentHashMap": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.MapTest::testNumberKeyDeserialization": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testComplexKeysSerialization": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithLongKeys": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testConcurrentMap": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testStringKeyDeserialization": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testDeerializeMapOfMaps": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testSerializeMapOfMaps": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testSortedMap": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JsonParserTest::testExtraCommasInArrays": [62, 82, 86, 87, 101], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnFields": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.JsonAdapterSerializerDeserializerTest::testJsonSerializerDeserializerBasedJsonAdapterOnClass": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.JavaUtilTest::testProperties": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JavaUtilTest::testCurrency": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicIntegerArray": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicInteger": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLong": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArrayWithStringSerializationPolicy": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArray": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicBoolean": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserialization": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.EnumTest::testEnumSubclass": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.EnumTest::testEnumSet": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigIntegerTypeAdapter": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonArrayDeserialization": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonPrimitiveDeserialization": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonNullDeserialization": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigDecimalTypeAdapter": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonObjectDeserialization": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [72, 73, 74, 94, 280, 296, 303], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CollectionTest::testSetDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testPriorityQueue": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CollectionTest::testCollectionOfObjectWithNullSerialization": [62, 82, 86, 87, 101], "com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testCollectionOfObjectSerialization": [62, 82, 86, 87, 101], "com.google.gson.functional.CollectionTest::testVector": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testStack": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CollectionTest::testUserCollectionTypeAdapter": [62, 82, 86, 87, 101], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testQueueDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.ObjectTypeAdapterTest::testDeserializeNullValue": [72, 73, 74, 94, 280, 303], "com.google.gson.ObjectTypeAdapterTest::testSerializeObject": [72, 73, 74, 94, 280, 303], "com.google.gson.ObjectTypeAdapterTest::testSerialize": [72, 73, 74, 94, 280, 303], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [72, 73, 74, 94, 280, 303], "com.google.gson.ObjectTypeAdapterTest::testSerializeNullValue": [72, 73, 74, 94, 280, 303], "com.google.gson.MixedStreamTest::testReadNulls": [72, 296], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.JavaSerializationTest::testNumberIsSerializable": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.DefaultInetAddressTypeAdapterTest::testInetAddressSerializationAndDeserialization": [72, 73, 74, 94, 280, 296]}, "com.google.gson.internal.LazilyParsedNumber": {"com.google.gson.internal.bind.JsonElementReaderTest::testArray": [31, 37], "com.google.gson.internal.bind.JsonElementReaderTest::testObject": [31, 37], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbers": [31, 37, 50, 63], "com.google.gson.internal.bind.JsonElementReaderTest::testStringsFromNumbers": [31, 68], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [31, 68], "com.google.gson.functional.PrimitiveTest::testNumberAsStringDeserialization": [31, 37], "com.google.gson.functional.PrimitiveTest::testNumberDeserialization": [31, 37, 50, 52], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [31, 37], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [31, 37], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [31, 37], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [31, 37], "com.google.gson.JsonParserTest::testParseMixedArray": [31, 37], "com.google.gson.JsonParserTest::testParseString": [31, 37], "com.google.gson.JsonParserTest::testParseReader": [31, 37], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [31, 37]}, "com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper": {"com.google.gson.functional.UncategorizedTest::testTrailingWhitespace": [41], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [41], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [41], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [34, 35, 36, 41, 53, 54, 55, 56, 57, 59, 69, 76, 78, 80], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [35, 41], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [34, 36, 54, 55, 56, 76, 78, 80], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [34, 36, 54, 55, 56, 76, 78, 80], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [41], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [35, 41], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [35, 41], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [41], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [41], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [41], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [41], "com.google.gson.functional.PrimitiveTest::testStringsAsBooleans": [41], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [41], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [41], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [34, 35, 36, 41, 53, 54, 55, 56, 69, 76, 78, 80], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [34, 35, 36, 41, 53, 54, 55, 56, 69, 76, 78, 80], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [41], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [35, 41], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [41], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [35, 41], "com.google.gson.functional.ObjectTest::testTruncatedDeserialization": [41], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [41], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [41], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [41], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [35, 53, 69], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [34, 35, 36, 53, 54, 55, 56, 57, 60, 66, 69, 76, 78, 80], "com.google.gson.functional.MapTest::testMapDeserialization": [35, 41], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedLongKeys": [35, 41], "com.google.gson.functional.MapTest::testComplexKeysDeserialization": [41], "com.google.gson.functional.MapTest::testBooleanKeyDeserialization": [41], "com.google.gson.functional.MapTest::testHashMapDeserialization": [35, 41], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedIntegerKeys": [35, 41], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [35, 41], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [35, 41], "com.google.gson.functional.MapTest::testConcurrentHashMap": [35, 41], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [35, 41], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [35, 41], "com.google.gson.functional.MapTest::testNumberKeyDeserialization": [41], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [35, 41], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [35, 41], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [35, 41], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [35, 41], "com.google.gson.functional.MapTest::testMapDeserializationWithLongKeys": [35, 41], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [35, 41], "com.google.gson.functional.MapTest::testConcurrentMap": [35, 41], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [35, 41], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [35, 41], "com.google.gson.functional.MapTest::testStringKeyDeserialization": [41], "com.google.gson.functional.MapTest::testDeerializeMapOfMaps": [41], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [41], "com.google.gson.functional.MapTest::testSortedMap": [35, 41], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [35, 41], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [35, 41], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [34, 35, 36, 41, 53, 54, 55, 56, 69, 76, 78, 80], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [35, 41], "com.google.gson.functional.LeniencyTest::testLenientFromJson": [41], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [34, 36, 54, 55, 56, 69, 76, 78, 80], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [34, 36, 54, 55, 56, 69, 76, 78, 80], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [34, 36, 54, 55, 56, 69, 76, 78, 80], "com.google.gson.functional.JsonParserTest::testParseInvalidJson": [41], "com.google.gson.functional.JsonParserTest::testExtraCommasInMaps": [41], "com.google.gson.functional.JsonParserTest::testExtraCommasInArrays": [41], "com.google.gson.functional.JavaUtilTest::testProperties": [35, 41], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForCollectionType": [41], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [35, 41], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [69], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [35, 41], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [34, 35, 36, 54, 55, 56, 57, 60, 66, 69, 76, 78, 80], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [69], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [34, 35, 36, 53, 54, 55, 56, 57, 60, 66, 69, 76, 78, 80], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [34, 35, 36, 53, 54, 55, 56, 57, 60, 66, 69, 76, 78, 80], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [69], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [34, 35, 36, 53, 54, 55, 56, 69, 76, 78, 80], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [41], "com.google.gson.functional.EnumTest::testEnumSubclass": [41], "com.google.gson.functional.EnumTest::testEnumSubclassAsParameterizedType": [41], "com.google.gson.functional.EnumTest::testCollectionOfEnumsDeserialization": [41], "com.google.gson.functional.EnumTest::testEnumSet": [34, 35, 36, 41, 54, 55, 56, 76, 78, 80], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [34, 35, 36, 41, 54, 55, 56, 76, 78, 80], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [35, 41, 53, 69], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [34, 35, 36, 41, 53, 54, 55, 56, 57, 59, 69, 76, 78, 80], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [35, 41], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [35, 41], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [35, 41], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [35, 41], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [35, 41], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [34, 36, 54, 55, 56, 57, 59, 69, 76, 78, 80], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [34, 35, 36, 53, 54, 55, 56, 57, 59, 69, 76, 78, 80], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [35, 53, 69], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [34, 35, 36, 54, 55, 56, 57, 60, 63, 69, 76, 78, 80], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [35, 41], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [35, 41], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [35, 53, 69], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [35, 41], "com.google.gson.functional.CollectionTest::testSetDeserialization": [35, 41], "com.google.gson.functional.CollectionTest::testTopLevelCollectionOfIntegersDeserialization": [41], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [35, 41], "com.google.gson.functional.CollectionTest::testPriorityQueue": [35, 41], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [35, 41], "com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization": [35, 41], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [35, 41], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [35, 41], "com.google.gson.functional.CollectionTest::testVector": [35, 41], "com.google.gson.functional.CollectionTest::testStack": [35, 41], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [41], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [35, 41], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [35, 41], "com.google.gson.functional.CollectionTest::testQueueDeserialization": [35, 41], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [35, 41], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [41], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [41], "com.google.gson.functional.ArrayTest::testInvalidArrayDeserialization": [41], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [41], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [41], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [41], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [41], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [41], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [41], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [41], "com.google.gson.MixedStreamTest::testWriteLenient": [69], "com.google.gson.JavaSerializationTest::testNumberIsSerializable": [35, 41], "com.google.gson.JavaSerializationTest::testMapIsSerializable": [41], "com.google.gson.JavaSerializationTest::testListIsSerializable": [41], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [69], "com.google.gson.CommentsTest::testParseComments": [41]}, "com.google.gson.JsonPrimitive": {"com.google.gson.internal.bind.JsonElementReaderTest::testLenientNansAndInfinities": [65, 94, 102, 112, 146, 176, 178, 181, 193], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbersFromStrings": [65, 94, 102, 112, 146, 176, 178, 181, 193, 238, 260], "com.google.gson.internal.bind.JsonElementReaderTest::testStrings": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.internal.bind.JsonElementReaderTest::testArray": [56, 94, 102, 146, 157, 260], "com.google.gson.internal.bind.JsonElementReaderTest::testSkipValue": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.internal.bind.JsonElementReaderTest::testBooleans": [47, 94, 102, 112, 122, 132, 133], "com.google.gson.internal.bind.JsonElementReaderTest::testStrictNansAndInfinities": [65, 94, 102, 112, 146, 176, 178, 181, 193], "com.google.gson.internal.bind.JsonElementReaderTest::testObject": [56, 94, 102, 112, 146, 157, 166, 260], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbers": [56, 94, 102, 146, 157, 193, 238, 260], "com.google.gson.internal.bind.JsonElementReaderTest::testWrongType": [65, 94, 102, 112, 146, 166, 176, 178, 181, 193, 238, 260], "com.google.gson.internal.bind.JsonElementReaderTest::testStringsFromNumbers": [56, 94, 102, 146, 157, 176, 177], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [56, 65, 94, 102, 112, 146, 157, 166, 176, 178, 181], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [56, 94, 102, 146, 157, 176, 177], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [56, 65, 94, 102, 112, 146, 166], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [65, 94, 102, 112, 146, 166, 176, 178, 181], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [47, 56, 65, 94, 102, 112, 146, 166], "com.google.gson.functional.PrimitiveTest::testPrimitiveClassLiteral": [56, 94, 102, 112, 146, 157, 166, 260], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [56, 65, 94, 102, 112, 146, 157, 176, 178, 181, 260], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [56, 94, 102, 146, 157, 260], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [65, 94, 102, 166], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [85, 94, 102, 112, 146, 166], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [85, 94, 102, 112, 146, 166], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [56, 85, 94, 102, 112, 146, 166], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [85, 94, 102, 112, 146, 166], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [56, 65, 94, 102, 112, 146, 157, 166, 176, 178, 181, 238, 260], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [56, 65, 94, 102, 112, 146, 166], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [56, 94, 102, 146, 157, 260], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [56, 94, 102, 146, 157, 260], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [56, 94, 102, 146, 157, 260], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [65, 85, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [65, 85, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [65, 85, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [65, 85, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [65, 94, 102, 112, 146, 166, 176, 178, 181], "com.google.gson.LongSerializationPolicyTest::testStringLongSerialization": [65, 94, 102, 112, 146, 166, 176, 178, 181], "com.google.gson.LongSerializationPolicyTest::testDefaultLongSerialization": [56, 94, 102, 146, 157, 166, 238], "com.google.gson.JsonStreamParserTest::testNoSideEffectForHasNext": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.JsonStreamParserTest::testIterator": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.JsonStreamParserTest::testParseTwoStrings": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.JsonPrimitiveTest::testEqualsIntegerAndBigInteger": [56, 94, 102, 157, 306, 309, 312, 313, 316, 317, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testShortEqualsLong": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testByteEqualsLong": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testExponential": [65, 94, 102, 112, 146, 176, 178, 181, 193, 204, 260], "com.google.gson.JsonPrimitiveTest::testDoubleEqualsBigDecimal": [56, 94, 102, 157, 289, 293, 297, 298, 299, 306, 309, 312, 313, 316, 319, 323, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testByteEqualsBigInteger": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testIntegerEqualsLong": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testByteEqualsShort": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testParsingStringAsNumber": [65, 94, 102, 112, 146, 176, 178, 181, 193, 204, 215, 227, 238, 249, 260, 265], "com.google.gson.JsonPrimitiveTest::testEquals": [47, 56, 65, 94, 102, 157, 306, 309, 312, 313, 316, 317, 319, 326, 334, 335, 336, 339], "com.google.gson.JsonPrimitiveTest::testDeepCopy": [90], "com.google.gson.JsonPrimitiveTest::testIntegerEqualsBigInteger": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testEqualsDoesNotEquateStringAndNonStringTypes": [47, 56, 65, 94, 102, 306, 309, 312, 313, 316, 319, 326, 334, 339], "com.google.gson.JsonPrimitiveTest::testBoolean": [47, 56, 65, 94, 102, 112, 122, 132, 133, 136, 146, 157, 176, 177, 178, 181], "com.google.gson.JsonPrimitiveTest::testFloatEqualsBigDecimal": [56, 94, 102, 157, 289, 293, 297, 298, 299, 306, 309, 312, 313, 316, 319, 323, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testByteEqualsInteger": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testStringsAndChar": [65, 75, 94, 97, 98, 102, 112, 146, 166, 176, 178, 181, 270], "com.google.gson.JsonPrimitiveTest::testFloatEqualsDouble": [56, 94, 102, 157, 289, 293, 297, 298, 299, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testShortEqualsBigInteger": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testShortEqualsInteger": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testLongEqualsBigInteger": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonParserTest::testParseMixedArray": [56, 65, 94, 102, 112, 146, 157, 176, 178, 181, 260], "com.google.gson.JsonParserTest::testParseEmptyString": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.JsonParserTest::testParseUnquotedSingleWordStringFails": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.JsonParserTest::testParseString": [56, 65, 94, 102, 112, 146, 157, 176, 178, 181, 260], "com.google.gson.JsonParserTest::testParseReader": [56, 65, 94, 102, 112, 146, 157, 176, 178, 181, 260], "com.google.gson.JsonParserTest::testParseUnquotedStringArrayFails": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [47, 56, 65, 94, 102, 112, 146, 166], "com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName": [47, 94, 102, 112, 122, 132, 133], "com.google.gson.JsonObjectTest::testAddingBooleanProperties": [85, 94, 102, 112, 122, 132, 133], "com.google.gson.JsonObjectTest::testAddingCharacterProperties": [85, 94, 97, 98, 112, 146, 176, 178, 181, 270], "com.google.gson.JsonObjectTest::testAddingStringProperties": [85, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [56, 94, 102, 146, 157, 260]}}