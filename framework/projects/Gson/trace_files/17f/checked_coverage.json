{"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory": {"com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 166, 174, 175, 177], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 144, 149, 150, 151, 152, 154, 158, 159, 161, 164], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 144, 149, 150, 151, 152, 154, 158, 159, 161, 164], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 144, 149, 150, 151, 152, 154, 158, 159, 161, 164], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [93, 95, 100], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [93, 95, 100], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [93, 95, 100], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 144, 149, 150, 151, 152, 154, 158, 159, 161, 164], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 144, 149, 150, 151, 152, 154, 158, 159, 161, 164], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [93, 95, 100], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 144, 149, 150, 151, 152, 154, 158, 159, 161, 164], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 144, 149, 150, 151, 152, 154, 158, 159, 161, 164], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [58, 63, 67, 72, 73, 74, 75, 93, 95, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [56, 93, 95, 99, 100], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [56, 58, 63, 67, 72, 73, 74, 75, 78, 79, 80, 81, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 154, 159, 160, 161, 162, 164, 166, 167, 169, 170], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [56, 58, 63, 67, 72, 73, 78, 79, 80, 81, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [56, 58, 63, 67, 72, 73, 78, 79, 80, 81, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [58, 63, 67, 72, 73, 74, 75, 93, 95, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [58, 63, 67, 72, 73, 74, 75, 93, 95, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [56, 93, 95, 99, 100], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [56, 93, 95, 99, 100], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 114, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CollectionTest::testSetDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 118, 143, 144, 149, 150, 151, 152, 153, 154, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [56, 58, 63, 67, 72, 73, 74, 75, 93, 95, 99, 100, 109, 115, 117, 118, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 166, 174, 175, 177]}, "com.google.gson.stream.JsonWriter": {"com.google.gson.functional.PrimitiveTest::testSmallValueForBigDecimalSerialization": [523, 528], "com.google.gson.MixedStreamTest::testWriteClosed": [308, 325, 366, 367, 561, 629], "com.google.gson.MixedStreamTest::testWriteInvalidState": [167, 168, 170, 308, 325, 326, 359, 369, 629, 656], "com.google.gson.MixedStreamTest::testWriteDoesNotMutateState": [235, 242, 253, 261]}, "com.google.gson.internal.bind.SqlDateTypeAdapter": {"com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlDateDeserialization": [38, 51, 57]}, "com.google.gson.internal.bind.ObjectTypeAdapter": {"com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [55, 56, 76], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [55, 56, 76, 79], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [55, 56, 67, 68, 69, 70, 72, 76, 79, 82], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [55, 56, 76, 79], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [55, 56, 59, 60, 61, 63, 67, 68, 69, 70, 72, 73, 76, 79, 85]}, "com.google.gson.FieldAttributes": {"com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [46, 111], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [46, 111], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [46, 111]}, "com.google.gson.internal.UnsafeAllocator": {"com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [40, 41, 44, 45], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [40, 41, 44, 45], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [40, 41, 44, 45], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [40, 41, 44, 45], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [40, 41, 44, 45], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [40, 41, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [40, 41, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [40, 41, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [40, 41, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [40, 41, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [40, 41, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [40, 41, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [40, 41, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [40, 41, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [40, 41, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testIncorrectJsonAdapterType": [40, 41, 44, 45], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [40, 41, 44, 45], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [40, 41, 44, 45], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [40, 41, 44, 45], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [40, 41, 44, 45], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [40, 41, 44, 45], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [40, 41, 44, 45], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [40, 41, 44, 45], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [40, 41, 44, 45]}, "com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper": {"com.google.gson.functional.UncategorizedTest::testTrailingWhitespace": [41], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [34, 35, 36, 41, 53, 54, 55, 56, 57, 59, 69, 76, 78, 80], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [35, 41], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [41], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [41], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [35, 41], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [41], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [41], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [41], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [35, 41], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [34, 36, 54, 55, 56, 76, 78, 80], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [41], "com.google.gson.functional.PrimitiveTest::testStringsAsBooleans": [41], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [41], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [41], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [34, 35, 36, 41, 53, 54, 55, 56, 69, 76, 78, 80], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [34, 35, 36, 41, 53, 54, 55, 56, 69, 76, 78, 80], "com.google.gson.functional.ObjectTest::testTruncatedDeserialization": [41], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [41], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [41], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [35, 41], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [35, 41], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [41], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [41], "com.google.gson.functional.MapTest::testMapDeserialization": [35, 41], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedIntegerKeys": [35, 41], "com.google.gson.functional.MapTest::testStringKeyDeserialization": [41], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [35, 41], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [35, 41], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [35, 41], "com.google.gson.functional.MapTest::testSortedMap": [35, 41], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [35, 41], "com.google.gson.functional.MapTest::testMapDeserializationWithLongKeys": [35, 41], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [35, 41], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedLongKeys": [35, 41], "com.google.gson.functional.MapTest::testConcurrentMap": [35, 41], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [35, 41], "com.google.gson.functional.MapTest::testComplexKeysDeserialization": [41], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [35, 41], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [41], "com.google.gson.functional.MapTest::testBooleanKeyDeserialization": [41], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [35, 41], "com.google.gson.functional.MapTest::testDeerializeMapOfMaps": [41], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [35, 41], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [35, 41], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [35, 41], "com.google.gson.functional.MapTest::testNumberKeyDeserialization": [41], "com.google.gson.functional.MapTest::testHashMapDeserialization": [35, 41], "com.google.gson.functional.MapTest::testConcurrentHashMap": [35, 41], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [35, 41], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [35, 41], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [35, 41], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [34, 35, 36, 41, 53, 54, 55, 56, 69, 76, 78, 80], "com.google.gson.functional.LeniencyTest::testLenientFromJson": [41], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForCollectionType": [41], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [35, 41], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [34, 35, 36, 53, 54, 55, 56, 69, 76, 78, 80], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [41], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [34, 36, 54, 55, 56, 76, 78, 80], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [35, 41], "com.google.gson.functional.EnumTest::testEnumSubclass": [41], "com.google.gson.functional.EnumTest::testEnumSubclassAsParameterizedType": [41], "com.google.gson.functional.EnumTest::testCollectionOfEnumsDeserialization": [41], "com.google.gson.functional.EnumTest::testEnumSet": [34, 35, 36, 41, 54, 55, 56, 76, 78, 80], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [35, 41, 53, 69], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [34, 35, 36, 41, 53, 54, 55, 56, 57, 59, 69, 76, 78, 80], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [35, 41], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [35, 41], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [35, 41], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [35, 41], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [35, 41], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [34, 36, 54, 55, 56, 57, 59, 69, 76, 78, 80], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [34, 35, 36, 54, 55, 56, 57, 60, 63, 69, 76, 78, 80], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [34, 35, 36, 53, 54, 55, 56, 57, 59, 69, 76, 78, 80], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [35, 53, 69], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [35, 41], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [35, 53, 69], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [35, 41], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [35, 41], "com.google.gson.functional.CollectionTest::testStack": [35, 41], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [35, 41], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [35, 41], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [35, 41], "com.google.gson.functional.CollectionTest::testTopLevelCollectionOfIntegersDeserialization": [41], "com.google.gson.functional.CollectionTest::testVector": [35, 41], "com.google.gson.functional.CollectionTest::testPriorityQueue": [35, 41], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [41], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [35, 41], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [35, 41], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [35, 41], "com.google.gson.functional.CollectionTest::testSetDeserialization": [35, 41], "com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization": [35, 41], "com.google.gson.functional.CollectionTest::testQueueDeserialization": [35, 41], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [35, 41], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [41], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [41], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [41], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [41], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [41], "com.google.gson.functional.ArrayTest::testInvalidArrayDeserialization": [41], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [41], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [41], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [41], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [41], "com.google.gson.MixedStreamTest::testWriteLenient": [69]}, "com.google.gson.JsonStreamParser": {"com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [69, 70, 82, 87, 105], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [69, 70, 82, 87, 105]}, "com.google.gson.DefaultDateTypeAdapter": {"com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [40, 55, 80, 99, 103, 119], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [40, 55, 78, 80, 99, 103, 104, 106, 107, 119], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [40, 55, 78, 80, 99, 103, 104, 106, 108, 109, 119], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [40, 55, 78, 80, 99, 103, 104, 105, 119], "com.google.gson.DefaultDateTypeAdapterTest::testDateSerialization": [59], "com.google.gson.DefaultDateTypeAdapterTest::testNullValue": [40, 99, 101], "com.google.gson.DefaultDateTypeAdapterTest::testInvalidDatePattern": [55], "com.google.gson.DefaultDateTypeAdapterTest::testUnexpectedToken": [40, 99, 103]}, "com.google.gson.internal.bind.DateTypeAdapter": {"com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [41, 49, 51, 55, 59, 64], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [41, 49, 51, 55, 59, 64], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [41, 49, 51, 55, 59, 64]}, "com.google.gson.internal.LinkedTreeMap": {"com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 175, 180, 186, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416, 430, 431], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 154, 159, 161, 166, 167, 169, 180, 430, 431], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 175, 180, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416, 430, 431], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.MapTest::testMapDeserialization": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 161, 166, 167, 169, 170, 173, 180, 186], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [48, 60, 72, 78, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 177, 180, 186], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [48, 60, 72, 78, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 177, 180, 186], "com.google.gson.functional.MapTest::testMapDeserializationEmpty": [48, 60, 78], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [60, 72, 94, 95, 96, 97, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [52, 60, 94, 96, 123, 126, 154, 159, 161, 166, 180, 430, 431], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [48, 60, 72, 78, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 177, 180, 186], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 161, 166, 167, 169, 170, 171, 180, 186], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 173, 180, 430, 431], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 173, 175, 180, 186, 285, 291, 292, 296, 299, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 329, 330, 336, 354, 362, 363, 375, 385, 388, 402, 413, 416, 430, 431], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [48, 60, 72, 78, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 177, 180, 186], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 159, 161, 166, 167, 180, 186, 430, 431], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 159, 161, 166, 167, 180, 186, 430, 431], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 159, 161, 166, 167, 180, 186, 430, 431], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 159, 161, 166, 167, 180, 186, 430, 431], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 180, 186, 430, 431], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 175, 180, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416, 430, 431], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [48, 60, 72, 78, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 161, 166, 167, 169, 170, 173, 175, 177, 180, 186, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 326, 336, 354, 362, 363, 375, 385, 388]}, "com.google.gson.internal.Primitives": {"com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [82, 98, 100], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [82, 98, 100]}, "com.google.gson.internal.bind.JsonTreeWriter": {"com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [49, 68, 72, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 95, 96, 97, 114, 115, 116, 124, 125, 126, 136, 137, 138, 145, 148, 184, 195], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148, 184, 195], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [49, 68, 76, 82, 83, 153], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [49, 68, 72, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 95, 96, 97, 114, 115, 116, 124, 125, 126, 136, 137, 138, 145, 148], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148]}, "com.google.gson.JsonSyntaxException": {"com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch": [30]}, "com.google.gson.internal.LazilyParsedNumber": {"com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [31, 68], "com.google.gson.functional.PrimitiveTest::testNumberDeserialization": [31, 37, 50, 52], "com.google.gson.functional.PrimitiveTest::testNumberAsStringDeserialization": [31, 37], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [31, 37], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [31, 37], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [31, 37], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [31, 37], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [31, 37]}, "com.google.gson.internal.bind.TreeTypeAdapter": {"com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [55, 62, 65, 66, 69, 116], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [47, 54, 55, 56, 62, 65, 66, 69, 73, 77, 81, 82, 116], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [55, 62, 65, 66, 69, 106, 107], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [55, 57, 62, 65, 66, 69, 106, 107], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [55, 56, 57, 58, 62, 63, 86, 87, 107], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [55, 62, 65, 66, 69, 116], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [55, 62, 65, 66, 69, 106, 107], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [55, 62, 65, 66, 69, 106, 107], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [55, 62, 65, 66, 69, 106, 107], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [55, 57, 62, 65, 66, 69, 116], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [55, 62, 65, 106, 107], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [54, 73, 77, 81, 82, 106, 107], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [54, 73, 77, 81, 82, 107], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [54, 73, 77, 81, 82, 106, 107], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [54, 73, 77, 81, 82, 106, 107], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [54, 73, 77, 81, 82, 106, 107], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [55, 62, 65, 66, 69, 107], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [55, 62, 65, 106, 107], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [55, 62, 65, 106, 107], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [47, 55, 56, 62, 65, 66, 69, 106, 107], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [54, 55, 56, 57, 58, 62, 65, 66, 69, 73, 74, 86, 87, 106, 107], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [55, 62, 65, 106, 107], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [55, 62, 65, 66, 69, 107], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [55, 62, 65, 66, 69, 107], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [54, 55, 62, 65, 66, 69, 73, 77, 81, 106, 107]}, "com.google.gson.internal.ConstructorConstructor": {"com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [52, 56, 62, 63, 64], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [52, 56, 62, 63, 64], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.MapTest::testHashMapDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.MapTest::testConcurrentHashMap": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testIncorrectJsonAdapterType": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [52, 56, 57, 62, 63, 73, 75, 76], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 99, 123, 134, 135, 141, 142], "com.google.gson.functional.EnumTest::testEnumSubclass": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 99, 123, 134, 135, 141, 142], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.EnumTest::testEnumSet": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 90, 99, 123, 134, 135, 141, 142], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CollectionTest::testStack": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 88, 89, 94, 99, 103, 123, 134, 178, 213, 218], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CollectionTest::testVector": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CollectionTest::testPriorityQueue": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CollectionTest::testSetDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103]}, "com.google.gson.JsonObject": {"com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [33, 61, 175], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [33, 61, 136, 175], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [33, 61, 136], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [33, 61, 136], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [33, 61, 175], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [33, 61, 136], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [33, 61, 136], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [33, 61, 136, 175], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [33, 61, 175], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [33, 61, 83, 126, 136, 175], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [33, 61, 83, 126, 136, 175], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [33, 61, 83, 126, 136, 175], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [33, 61, 83, 126, 136, 175], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [33, 61, 136, 175]}, "com.google.gson.Gson": {"com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesSerialization": [580, 583, 602, 604], "com.google.gson.functional.VersioningTest::testVersionedUntilSerialization": [580, 583, 602, 604], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassDeserialization": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 773, 774, 797, 801, 802, 852, 854, 885, 886, 887, 888, 904], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassSerialization": [580, 583, 602, 604], "com.google.gson.functional.VersioningTest::testVersionedClassesSerialization": [580, 583, 602, 604], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilSerialization": [580, 583, 602, 604], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 885, 886, 887, 902, 904], "com.google.gson.functional.UncategorizedTest::testTrailingWhitespace": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.UncategorizedTest::testObjectEqualButNotSameSerialization": [580, 583, 602, 604], "com.google.gson.functional.UncategorizedTest::testStaticFieldsAreNotSerialized": [580, 583, 602, 604], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 561, 562, 563, 602, 603, 604, 648, 661, 669, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904, 949, 952], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.TypeAdapterPrecedenceTest::testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter": [580, 583, 602, 604, 773, 774, 797, 801, 802, 852, 854, 887, 888, 904], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 773, 774, 797, 801, 802, 852, 854, 885, 886, 887, 888, 904], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreamingHierarchical": [580, 583, 602, 604, 773, 774, 797, 801, 802, 852, 854, 887, 888, 904], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByStreaming": [580, 583, 602, 604, 773, 774, 797, 801, 802, 852, 854, 887, 888, 904], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.TreeTypeAdaptersTest::testSerializeId": [602, 604], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 521], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 521], "com.google.gson.functional.SecurityTest::testNonExecutableJsonSerialization": [580, 583, 602, 604], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenSerialization": [580, 583, 602, 604], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ReadersWritersTest::testTypeMismatchThrowsJsonSyntaxExceptionForStrings": [728, 730, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [580, 583, 602, 604, 887, 888, 904, 925, 926, 949, 952], "com.google.gson.functional.ReadersWritersTest::testTypeMismatchThrowsJsonSyntaxExceptionForReaders": [728, 730, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 580, 583, 602, 603, 604, 648, 661, 669, 885, 886, 887, 888, 904, 925, 926, 949, 952], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 824, 825, 827, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ReadersWritersTest::testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls": [728, 730, 824, 825, 827, 881, 883, 887, 888, 904], "com.google.gson.functional.ReadersWritersTest::testTopLevelNullObjectDeserializationWithReader": [728, 730, 824, 825, 827, 881, 883, 887, 888, 904], "com.google.gson.functional.PrintFormattingTest::testJsonObjectWithNullValues": [687, 689], "com.google.gson.functional.PrintFormattingTest::testJsonObjectWithNullValuesSerialized": [687, 689], "com.google.gson.functional.PrintFormattingTest::testCompactFormattingLeavesNoWhiteSpace": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testBigIntegerDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDoubleNaNSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedInASingleElementArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testPrimitiveClassLiteral": [728, 730, 773, 774, 797, 800, 801, 802, 824, 825, 827, 851, 852, 854, 881, 883, 887, 888, 904, 925, 926, 949, 952], "com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testNumberDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsDoublePrimitive": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testDoubleAsStringRepresentationDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testLongAsStringDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigIntegerDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigIntegerSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testPrimitiveIntegerAutoboxedInASingleElementArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsFloat": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsShortWrapper": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testBigDecimalNoFractAsStringRepresentationDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testPrimitiveBooleanAutoboxedSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testDoubleInfinityDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testFloatNaNDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testBigDecimalNaNDeserializationNotSupported": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testPrimitiveLongAutoboxedDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testPrimitiveIntegerAutoboxedSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializingNonZeroDecimalPointValuesAsIntegerFails": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testByteSerialization": [602, 604], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsByteWrapper": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testPrimitiveLongAutoboxedSerialization": [602, 604], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testBigDecimalSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsFloatPrimitive": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsDouble": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testFloatNaNSerializationNotSupportedByDefault": [323, 324, 580, 583, 603, 648, 669, 673, 675], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsInteger": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testBigDecimalDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testReallyLongValuesSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testStringsAsBooleans": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsBigDecimal": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBytePrimitive": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testFloatInfinityDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testFloatInfinitySerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testQuotedStringSerializationAndDeserialization": [580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBooleanWrapper": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testDoubleNoFractAsStringRepresentationDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testBigDecimalAsStringRepresentationDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testNumberAsStringDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testBigDecimalPreservePrecisionSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatSerializationNotSupportedByDefault": [323, 324, 580, 583, 603, 648, 669, 673, 675], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsInteger": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBigDecimal": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsNumber": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsIntegerFails": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testNumberSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsLongPrimitive": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testDeserializingDecimalPointValueZeroSucceeds": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testFloatNaNSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBigInteger": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBooleanPrimitive": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testBooleanDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBigDecimal": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testPrimitiveIntegerAutoboxedDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testPrimitiveBooleanAutoboxedInASingleElementArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testNegativeInfinitySerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testShortSerialization": [602, 604], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsDoubleWrapper": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBigInteger": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigDecimalDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsBigIntegerFails": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testDoubleNaNSerializationNotSupportedByDefault": [323, 324, 580, 583, 603, 648, 669, 673, 675], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsShortPrimitive": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testFloatInfinitySerializationNotSupportedByDefault": [323, 324, 580, 583, 603, 648, 669, 673, 675], "com.google.gson.functional.PrimitiveTest::testReallyLongValuesDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testPrimitiveLongAutoboxedInASingleElementArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testValueVeryCloseToZeroIsZero": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsLongWrapper": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testDoubleInfinitySerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testBigIntegerInASingleElementArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testBigDecimalPreservePrecisionDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsFloatWrapper": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsLong": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testBigIntegerSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigDecimalSerialization": [580, 583, 602, 603, 604, 648, 669], "com.google.gson.functional.PrimitiveTest::testNegativeInfinitySerializationNotSupportedByDefault": [323, 324, 580, 583, 603, 648, 669, 673, 675], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsInt": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.functional.PrimitiveTest::testBigDecimalInASingleElementArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testBadValueForBigIntegerDeserialization": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testBigDecimalNegativeInfinityDeserializationNotSupported": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testByteDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testUnquotedStringDeserializationFails": [174, 194, 728, 729, 730, 773, 774, 797, 800, 801, 802, 851, 852, 853, 854, 859, 863, 880, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testLargeDoubleDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testBigDecimalInfinityDeserializationNotSupported": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testMoreSpecificSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testDoubleNaNDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsNumber": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.PrimitiveTest::testHtmlCharacterSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrimitiveTest::testDoubleInfinitySerializationNotSupportedByDefault": [323, 324, 580, 583, 603, 648, 669, 673, 675], "com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedSerialization": [580, 583, 602, 604], "com.google.gson.functional.PrettyPrintingTest::testEmptyMapField": [580, 583, 602, 604], "com.google.gson.functional.PrettyPrintingTest::testMap": [580, 583, 602, 604], "com.google.gson.functional.PrettyPrintingTest::testPrettyPrintArrayOfPrimitiveArrays": [580, 583, 602, 604], "com.google.gson.functional.PrettyPrintingTest::testMultipleArrays": [580, 583, 602, 604], "com.google.gson.functional.PrettyPrintingTest::testPrettyPrintArrayOfPrimitives": [580, 583, 602, 604], "com.google.gson.functional.PrettyPrintingTest::testPrettyPrintListOfPrimitiveArrays": [580, 583, 602, 604], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysSerialization": [602, 604], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysSerialization": [602, 604], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 602, 603, 604, 648, 661, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithCustomSerializer": [602, 604], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 602, 603, 604, 648, 661, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeSerialization": [580, 583, 602, 604], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersSerialization": [602, 604], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesSerialization": [602, 604], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 602, 603, 604, 648, 661, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 602, 603, 604, 648, 661, 669, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 602, 603, 604, 648, 661, 669, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testArrayOfObjectsSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testAnonymousLocalClassesSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testClassWithObjectFieldSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testNullFieldsSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testTruncatedDeserialization": [728, 730, 797, 800, 801, 851, 852, 881, 883, 884, 887, 894, 897, 904], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testJsonObjectSerialization": [687, 689], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testNestedSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testAnonymousLocalClassesCustomSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testDateAsMapObjectField": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testNullSerialization": [687, 689], "com.google.gson.functional.ObjectTest::testPrimitiveArrayFieldSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testArrayOfArraysSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testInnerClassSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testEmptyStringDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 879, 881, 883, 894, 895, 904], "com.google.gson.functional.ObjectTest::testArrayOfObjectsAsFields": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testSingletonLists": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testNullDeserialization": [773, 774, 797, 798], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsSerialization": [580, 583, 602, 604], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesSerialization": [580, 583, 602, 604], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitSerializationOfNullArrayMembers": [580, 583, 602, 604], "com.google.gson.functional.NullObjectAndFieldTest::testPrintPrintingArraysWithNulls": [580, 583, 602, 604], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitSerializationOfNullStringMembers": [580, 583, 602, 604], "com.google.gson.functional.NullObjectAndFieldTest::testTopLevelNullObjectDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullSerialization": [580, 583, 602, 604], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitSerializationOfNullCollectionMembers": [580, 583, 602, 604], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitSerializationOfNulls": [580, 583, 602, 604], "com.google.gson.functional.NullObjectAndFieldTest::testCustomSerializationOfNulls": [580, 583, 602, 604], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904, 949, 950], "com.google.gson.functional.NullObjectAndFieldTest::testTopLevelNullObjectSerialization": [602, 604, 687, 689], "com.google.gson.functional.NullObjectAndFieldTest::testPrintPrintingObjectWithNulls": [580, 583, 602, 604], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 432, 435, 580, 583, 603, 648, 661], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicySerialization": [580, 583, 602, 604], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicySerialization": [580, 583, 602, 604], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicySerialization": [580, 583, 602, 604], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.NamingPolicyTest::testDeprecatedNamingStrategy": [580, 583, 602, 604], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicySerialization": [580, 583, 602, 604], "com.google.gson.functional.NamingPolicyTest::testAtSignInSerializedName": [580, 583, 602, 604], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicySerialiation": [580, 583, 602, 604], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedIntegerKeys": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testStringKeyDeserialization": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapOfMapSerialization": [580, 583, 602, 604], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapDeserializationEmpty": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.MapTest::testMapSerializationWithWildcardValues": [602, 604], "com.google.gson.functional.MapTest::testMapSerializationWithNullValuesSerialized": [580, 583, 602, 604], "com.google.gson.functional.MapTest::testParameterizedMapSubclassSerialization": [602, 604], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 851, 852, 881, 883, 885, 886, 887, 904], "com.google.gson.functional.MapTest::testSortedMap": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testSerializeMapOfMaps": [602, 604], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testInterfaceTypeMap": [580, 583, 602, 604], "com.google.gson.functional.MapTest::testMapDeserializationWithLongKeys": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapSubclassSerialization": [602, 604], "com.google.gson.functional.MapTest::testInterfaceTypeMapWithSerializer": [580, 583, 602, 604], "com.google.gson.functional.MapTest::testMapWithQuotes": [580, 583, 602, 604], "com.google.gson.functional.MapTest::testWriteMapsWithEmptyStringKey": [580, 583, 602, 604], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedLongKeys": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testConcurrentMap": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 580, 583, 602, 604, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testCustomSerializerForSpecificMapType": [602, 604], "com.google.gson.functional.MapTest::testMapSerializationWithNullValues": [580, 583, 602, 604], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testComplexKeysDeserialization": [728, 730, 797, 800, 801, 851, 852, 881, 883, 887, 904], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [887, 888, 904, 949, 952], "com.google.gson.functional.MapTest::testBooleanKeyDeserialization": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapSerializationWithNullKey": [602, 604], "com.google.gson.functional.MapTest::testDeerializeMapOfMaps": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 580, 583, 602, 604, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testRawMapSerialization": [580, 583, 602, 604], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 580, 583, 602, 604, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapSerialization": [602, 604], "com.google.gson.functional.MapTest::testGeneralMapField": [580, 583, 602, 604], "com.google.gson.functional.MapTest::testNumberKeyDeserialization": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.MapTest::testHashMapDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapSerializationEmpty": [602, 604], "com.google.gson.functional.MapTest::testComplexKeysSerialization": [602, 604], "com.google.gson.functional.MapTest::testSerializeMaps": [580, 583, 602, 604], "com.google.gson.functional.MapTest::testConcurrentHashMap": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 580, 583, 602, 604, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapTest::testMapSerializationWithIntegerKeys": [602, 604], "com.google.gson.functional.MapTest::testMapSerializationWithNullValue": [602, 604], "com.google.gson.functional.MapTest::testMapSerializationWithNullValueButSerializeNulls": [602, 604], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 602, 603, 604, 648, 661, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 851, 852, 881, 883, 885, 886, 887, 904], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableSerialization": [602, 604], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 602, 603, 604, 648, 661, 669, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.LeniencyTest::testLenientFromJson": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testNullSafeObjectFromJson": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 497, 498, 499, 500, 501, 506, 507, 508, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testSuperclassTypeAdapterNotInvoked": [580, 583, 602, 604], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testIncorrectJsonAdapterType": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 432, 435, 580, 583, 603, 648, 661], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testIncorrectTypeAdapterFails": [580, 583, 603, 648, 669, 673, 675], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicIntegerArray": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArray": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArrayWithStringSerializationPolicy": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicBoolean": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicInteger": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLong": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForCollectionType": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.FieldNamingTest::testLowerCaseWithUnderscores": [580, 583, 602, 604], "com.google.gson.functional.FieldNamingTest::testUpperCamelCase": [580, 583, 602, 604], "com.google.gson.functional.FieldNamingTest::testLowerCaseWithDashes": [580, 583, 602, 604], "com.google.gson.functional.FieldNamingTest::testIdentity": [580, 583, 602, 604], "com.google.gson.functional.FieldNamingTest::testUpperCamelCaseWithSpaces": [580, 583, 602, 604], "com.google.gson.functional.FieldExclusionTest::testDefaultNestedStaticClassIncluded": [580, 583, 602, 604], "com.google.gson.functional.FieldExclusionTest::testDefaultInnerClassExclusion": [580, 583, 602, 604], "com.google.gson.functional.FieldExclusionTest::testInnerClassExclusion": [580, 583, 602, 604], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldSerialization": [580, 583, 602, 604], "com.google.gson.functional.ExposeFieldsTest::testNullExposeFieldSerialization": [580, 583, 602, 604], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationSerialization": [580, 583, 602, 604], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ExposeFieldsTest::testNoExposedFieldSerialization": [580, 583, 602, 604], "com.google.gson.functional.ExposeFieldsTest::testArrayWithOneNullExposeFieldObjectSerialization": [580, 583, 602, 604], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 885, 886, 887, 888, 904, 925, 926, 949, 952], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 498, 538, 541, 561, 562, 563, 661, 669, 885, 886, 887, 888, 904, 925, 926, 949, 952], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserializationDoesNotImpactSerialization": [602, 604], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerialization": [580, 583, 602, 604], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerialization": [602, 604], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 497, 498, 499, 500, 501, 506, 507, 508, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserialization": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 773, 774, 797, 801, 802, 852, 854, 885, 886, 887, 888, 904], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactSerialization": [580, 583, 602, 604], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 580, 583, 602, 603, 604, 648, 661, 669, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.EscapingTest::testEscapeAllHtmlCharacters": [580, 583, 602, 604], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 427, 435, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.EnumTest::testEnumSubclass": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.EnumTest::testEnumSubclassAsParameterizedType": [580, 583, 602, 604, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.EnumTest::testClassWithEnumFieldSerialization": [580, 583, 602, 604], "com.google.gson.functional.EnumTest::testCollectionOfEnumsDeserialization": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.EnumTest::testTopLevelEnumSerialization": [580, 583, 602, 604], "com.google.gson.functional.EnumTest::testCollectionOfEnumsSerialization": [580, 583, 602, 604], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.EnumTest::testEnumSet": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 580, 583, 602, 603, 604, 648, 661, 669, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 497, 498, 499, 500, 501, 506, 507, 508, 580, 583, 602, 603, 604, 648, 661, 669, 728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 885, 886, 887], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 497, 498, 499, 500, 501, 506, 507, 508, 580, 583, 602, 603, 604, 648, 661, 669, 728, 730, 797, 800, 801, 851, 852, 881, 883, 885, 886, 887], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonNullDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 773, 774, 797, 801, 802, 852, 854, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testUuidSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testUuidDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationWithPattern": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlDateSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testClassSerialization": [580, 583, 602, 603, 604, 648, 669, 673, 675], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 885, 886, 887, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBuilderSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigIntegerTypeAdapter": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 602, 603, 604, 648, 661, 773, 774, 797, 801, 802, 852, 854, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguageCountry": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultGregorianCalendarSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonArraySerialization": [602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonNullSerialization": [602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testUriDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonPrimitiveSerialization": [602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimeDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultGregorianCalendarDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleSerializationWithLanguageCountryVariant": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlDateDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 602, 603, 604, 648, 661, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonObjectDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 426, 427, 435, 773, 774, 797, 801, 802, 852, 854, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleSerializationWithLanguageCountry": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguage": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultCalendarSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testNullJsonElementSerialization": [602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBufferDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonObjectSerialization": [602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateSerializationUsingBuilder": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonPrimitiveDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 427, 435, 773, 774, 797, 801, 802, 852, 854, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimeSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testUriSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testBitSetDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testSetSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultCalendarDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testBitSetSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguageCountryVariant": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 521, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleSerializationWithLanguage": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testClassDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 773, 797, 801, 852, 885, 886, 887, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonArrayDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 773, 774, 797, 801, 802, 852, 854, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBufferSerialization": [580, 583, 602, 604], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigDecimalTypeAdapter": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 602, 603, 604, 648, 661, 773, 774, 797, 801, 802, 852, 854, 885, 886, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBuilderDeserialization": [728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationWithPatternNotOverridenByTypeAdapter": [580, 583, 602, 604], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomTypeAdapterDoesNotAppliesToSubClasses": [580, 583, 602, 604], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomSerializerNotInvokedForNullValues": [580, 583, 602, 604], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomSerializerInvokedForPrimitives": [602, 604], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass": [580, 583, 602, 604], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 432, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementSerializationWithType": [602, 604], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomSerializers": [580, 583, 602, 604], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementSerializationWithType": [602, 604], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedSerializers": [580, 583, 602, 604], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementSerialization": [580, 583, 602, 604], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArraySerializer": [580, 583, 602, 604], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementSerialization": [580, 583, 602, 604], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 538, 541, 561, 562, 563, 661, 669], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 538, 541, 561, 562, 563, 661, 669], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 538, 541, 561, 562, 563, 661, 669], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 538, 541, 561, 562, 563, 661, 669], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 538, 541, 561, 562, 563, 661, 669], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904, 949, 952], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [122, 125, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 497, 498, 499, 500, 501, 506, 507, 580, 583, 602, 603, 604, 648, 661, 669, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testCollectionOfObjectWithNullSerialization": [580, 583, 602, 604], "com.google.gson.functional.CollectionTest::testStack": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testCollectionOfObjectSerialization": [580, 583, 602, 604], "com.google.gson.functional.CollectionTest::testLinkedListSerialization": [602, 604], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testUserCollectionTypeAdapter": [602, 604], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionSerilaization": [580, 583, 602, 604], "com.google.gson.functional.CollectionTest::testTopLevelCollectionOfIntegersDeserialization": [728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.functional.CollectionTest::testVector": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testPriorityQueue": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 580, 583, 602, 604, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testTopLevelCollectionOfIntegersSerialization": [602, 604], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testNullsInListSerialization": [602, 604], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testCollectionOfStringsSerialization": [580, 583, 602, 604], "com.google.gson.functional.CollectionTest::testRawCollectionOfIntegersSerialization": [580, 583, 602, 604], "com.google.gson.functional.CollectionTest::testCollectionOfBagOfPrimitivesSerialization": [580, 583, 602, 604], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testSetDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testSetSerialization": [580, 583, 602, 604], "com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testQueueDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 420, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.CollectionTest::testRawCollectionSerialization": [580, 583, 602, 604], "com.google.gson.functional.CollectionTest::testQueueSerialization": [602, 604], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphSerialization": [580, 583, 602, 604], "com.google.gson.functional.CircularReferenceTest::testSelfReferenceIgnoredInSerialization": [580, 583, 602, 604], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 415, 419, 420, 422, 423, 424, 425, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ArrayTest::testArrayOfNullSerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testArrayOfStringsSerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ArrayTest::testArrayOfCollectionSerialization": [602, 604], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsSerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ArrayTest::testMixingTypesInObjectArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testEmptyArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysSerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsSerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ArrayTest::testInvalidArrayDeserialization": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 902, 904], "com.google.gson.functional.ArrayTest::testSingleStringArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testNullsInArrayWithSerializeNullPropertySetSerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ArrayTest::testArrayElementsAreArrays": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testNullsInArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ArrayTest::testSingleNullInArraySerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ArrayTest::testMultiDimenstionalObjectArraysSerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testObjectArrayWithNonPrimitivesSerialization": [580, 583, 602, 604], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [122, 125, 174, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverridePrimitiveBooleanAdapter": [602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideStringAdapter": [602, 604, 773, 774, 797, 801, 802, 852, 854, 887, 888, 904], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideWrapperBooleanAdapter": [602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.ObjectTypeAdapterTest::testSerializeNullValue": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.ObjectTypeAdapterTest::testSerializeObject": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.ObjectTypeAdapterTest::testSerialize": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 404, 406, 407, 413, 414, 422, 423, 424, 427, 435, 521], "com.google.gson.MixedStreamTest::testWriteClosed": [669, 673, 675], "com.google.gson.MixedStreamTest::testWriteInvalidState": [669, 673, 675], "com.google.gson.MixedStreamTest::testReadInvalidState": [883, 887, 899, 904], "com.google.gson.MixedStreamTest::testWriteDoesNotMutateState": [662, 664, 673, 674], "com.google.gson.MixedStreamTest::testReaderDoesNotMutateState": [880, 904], "com.google.gson.MixedStreamTest::testWriteNulls": [738], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [122, 125, 174, 187, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 420, 422, 423, 424, 426, 427, 432, 435, 883, 885, 886, 887, 888, 904], "com.google.gson.MixedStreamTest::testWriteLenient": [323, 324, 669, 673, 675], "com.google.gson.MixedStreamTest::testReadClosed": [883, 899, 904], "com.google.gson.MixedStreamTest::testReadNulls": [880, 885, 904], "com.google.gson.LongSerializationPolicyTest::testDefaultLongSerializationIntegration": [602, 604], "com.google.gson.LongSerializationPolicyTest::testStringLongSerializationIntegration": [602, 604], "com.google.gson.GsonTypeAdapterTest::testDefaultTypeAdapterThrowsParseException": [728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 887, 899, 904], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterDoesNotAffectNonAdaptedTypes": [580, 583, 602, 604, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 887, 888, 904], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 580, 583, 602, 603, 604, 648, 661, 728, 730, 773, 774, 797, 800, 801, 802, 851, 852, 854, 881, 883, 885, 886, 887, 888, 904], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [122, 125, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 255, 399, 400, 401, 404, 406, 407, 413, 414, 422, 423, 424, 426, 427, 435, 580, 583, 603, 648, 661, 669, 673, 675, 728, 730, 773, 797, 800, 801, 851, 852, 881, 883, 885, 886, 887, 899, 904], "com.google.gson.GsonBuilderTest::testTransientFieldExclusion": [580, 583, 602, 604], "com.google.gson.GsonBuilderTest::testExcludeFieldsWithModifiers": [580, 583, 602, 604]}, "com.google.gson.GsonBuilder": {"com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [79, 82, 84, 86, 115, 116, 562, 563, 566, 568, 572], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesSerialization": [572], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassDeserialization": [79, 84, 86, 115, 116, 562, 563, 566, 568, 572], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassSerialization": [572], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [79, 82, 84, 86, 115, 116, 562, 563, 566, 568, 572], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [79, 82, 84, 86, 115, 116, 562, 563, 566, 568, 572], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [79, 82, 84, 86, 115, 116, 562, 563, 566, 568, 572], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [84, 86, 521, 522, 527, 562, 563, 566, 568, 572], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [79, 82, 84, 86, 362, 521, 522, 527, 562, 563, 566, 568, 572], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.TypeAdapterPrecedenceTest::testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter": [572], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical": [84, 86, 521, 522, 524, 525, 527, 562, 563, 566, 568, 572], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreamingHierarchical": [572], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByStreaming": [572], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [84, 86, 479, 480, 481, 486, 524, 525, 527, 562, 563, 566, 568, 572], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [84, 86, 479, 480, 481, 483, 484, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [84, 86, 479, 480, 481, 486, 521, 522, 527, 562, 563, 566, 568, 572], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [79, 82, 84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [79, 82, 84, 86, 562, 563, 566, 568, 572], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [79, 82, 84, 86, 483, 484, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [79, 82, 84, 86, 562, 563, 566, 568, 572], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [79, 82, 84, 86, 562, 563, 566, 568, 572], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [79, 82, 84, 86, 562, 563, 566, 568, 572], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [84, 86, 562, 563, 566, 568, 572], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [79, 82, 84, 86, 562, 563, 566, 568, 572], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [84, 86, 562, 563, 566, 568, 572], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [84, 86, 562, 563, 566, 568, 572], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [79, 82, 84, 86, 562, 563, 566, 568, 572], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [79, 82, 84, 86, 562, 563, 566, 568, 572], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [79, 82, 84, 86, 562, 563, 566, 568, 572], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [84, 86, 483, 484, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [79, 82, 84, 86, 562, 563, 566, 568, 572], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [79, 82, 84, 86, 562, 563, 566, 568, 572], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [79, 82, 84, 86, 562, 563, 566, 568, 572], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [79, 82, 84, 86, 562, 563, 566, 568, 572], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [79, 82, 84, 86, 562, 563, 566, 568, 572], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [79, 82, 84, 86, 146, 562, 563, 566, 568, 572], "com.google.gson.functional.PrimitiveTest::testDoubleNaNSerialization": [572], "com.google.gson.functional.PrimitiveTest::testFloatInfinitySerialization": [572], "com.google.gson.functional.PrimitiveTest::testFloatNaNSerialization": [572], "com.google.gson.functional.PrimitiveTest::testNegativeInfinitySerialization": [572], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatSerialization": [572], "com.google.gson.functional.PrimitiveTest::testDoubleInfinitySerialization": [572], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [79, 82, 84, 86, 476, 477, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [79, 82, 84, 86, 476, 477, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [79, 84, 86, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.ObjectTest::testAnonymousLocalClassesCustomSerialization": [572], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [79, 82, 84, 86, 169, 562, 563, 566, 568, 572], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [79, 82, 84, 86, 169, 562, 563, 566, 568, 572], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [79, 82, 84, 86, 287, 562, 563, 566, 568, 572], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [79, 82, 84, 86, 287, 562, 563, 566, 568, 572], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [79, 82, 84, 86, 562, 563, 566, 568, 572], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [79, 82, 84, 86, 287, 562, 563, 566, 568, 572], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicySerialization": [572], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [79, 82, 84, 86, 287, 562, 563, 566, 568, 572], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicySerialization": [572], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [79, 82, 84, 86, 562, 563, 566, 568, 572], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicySerialization": [572], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicySerialiation": [572], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [84, 86, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.MapTest::testCustomSerializerForSpecificMapType": [572], "com.google.gson.functional.MapTest::testGeneralMapField": [572], "com.google.gson.functional.MapTest::testSerializeMaps": [169, 362, 572], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [79, 82, 84, 86, 250, 562, 563, 566, 568, 572], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [79, 82, 84, 86, 250, 562, 563, 566, 568, 572], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [84, 86, 250, 562, 563, 566, 568, 572], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [79, 82, 84, 86, 249, 250, 562, 563, 566, 568, 572], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [79, 82, 84, 86, 483, 484, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [82, 84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArrayWithStringSerializationPolicy": [84, 86, 274, 562, 563, 566, 568, 572], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [79, 82, 84, 86, 274, 562, 563, 566, 568, 572], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [79, 84, 86, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [79, 82, 84, 86, 476, 477, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [79, 84, 86, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [82, 84, 86, 476, 477, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.FieldNamingTest::testLowerCaseWithUnderscores": [572], "com.google.gson.functional.FieldNamingTest::testUpperCamelCase": [572], "com.google.gson.functional.FieldNamingTest::testLowerCaseWithDashes": [572], "com.google.gson.functional.FieldNamingTest::testIdentity": [572], "com.google.gson.functional.FieldNamingTest::testUpperCamelCaseWithSpaces": [572], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationSerialization": [572], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [79, 82, 84, 86, 156, 157, 476, 477, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [79, 82, 84, 86, 156, 157, 476, 477, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [79, 82, 84, 86, 169, 350, 562, 563, 566, 568, 572], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [79, 82, 84, 86, 169, 350, 562, 563, 566, 568, 572], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerialization": [572], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [79, 82, 84, 86, 169, 333, 562, 563, 566, 568, 572], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [79, 82, 84, 86, 333, 334, 562, 563, 566, 568, 572], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserialization": [79, 84, 86, 350, 351, 562, 563, 566, 568, 572], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [79, 82, 84, 86, 387, 562, 563, 566, 568, 572], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [82, 84, 86, 521, 522, 527, 562, 563, 566, 568, 572], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [84, 86, 498, 499, 562, 563, 566, 568, 572], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [79, 82, 84, 86, 498, 499, 562, 563, 566, 568, 572], "com.google.gson.functional.DefaultTypeAdaptersTest::testClassSerialization": [572], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigIntegerTypeAdapter": [84, 86, 483, 484, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [84, 86, 408, 409, 562, 563, 566, 568, 570, 572, 584, 585, 586, 587, 596, 597, 598], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [84, 86, 408, 409, 562, 563, 566, 568, 570, 572, 584, 585, 586, 587, 596, 597, 598], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [84, 86, 408, 409, 562, 563, 566, 568, 570, 572, 584, 585, 586, 587, 596, 597, 598], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [84, 86, 562, 563, 566, 568, 572], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [84, 86, 408, 409, 429, 562, 563, 566, 568, 570, 572, 584, 585, 586, 587, 596, 597, 598], "com.google.gson.functional.DefaultTypeAdaptersTest::testClassDeserialization": [572], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigDecimalTypeAdapter": [84, 86, 483, 484, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomSerializerInvokedForPrimitives": [572], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [79, 82, 84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [84, 86, 521, 522, 527, 562, 563, 566, 568, 572], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomSerializers": [572], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [79, 82, 84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedSerializers": [572], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [79, 82, 84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [79, 82, 84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [79, 82, 84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [79, 82, 84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [79, 82, 84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [79, 82, 84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [79, 82, 84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [79, 82, 84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.functional.CollectionTest::testUserCollectionTypeAdapter": [572], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverridePrimitiveBooleanAdapter": [572], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideStringAdapter": [572], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideWrapperBooleanAdapter": [572], "com.google.gson.ObjectTypeAdapterTest::testSerializeNullValue": [84, 86, 562, 563, 566, 568, 572], "com.google.gson.ObjectTypeAdapterTest::testSerializeObject": [84, 86, 562, 563, 566, 568, 572], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [84, 86, 562, 563, 566, 568, 572], "com.google.gson.ObjectTypeAdapterTest::testSerialize": [84, 86, 562, 563, 566, 568, 572], "com.google.gson.LongSerializationPolicyTest::testDefaultLongSerializationIntegration": [572], "com.google.gson.LongSerializationPolicyTest::testStringLongSerializationIntegration": [572], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [84, 86, 479, 480, 481, 486, 562, 563, 566, 568, 572], "com.google.gson.GsonBuilderTest::testTransientFieldExclusion": [572], "com.google.gson.GsonBuilderTest::testExcludeFieldsWithModifiers": [572]}, "com.google.gson.JsonParser": {"com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [45, 58, 59, 63, 82, 84, 90]}, "com.google.gson.internal.bind.MapTypeAdapterFactory": {"com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [118, 119, 120], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [118, 119, 120], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [118, 119, 120], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [118, 119, 120], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [118, 119, 120], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [118, 119, 120], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [118, 119, 120], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [118, 119, 120, 131, 133], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [118, 119, 120, 131, 133], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [118, 119, 120, 131, 133], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [118, 119, 120], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [118, 119, 120], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [118, 119, 120], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [118, 119, 120], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [118, 119, 120], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [118, 119, 120], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [118, 119, 120], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [118, 119, 120], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [118, 119, 120], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [118, 119, 120], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [118, 119, 120], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [118, 119, 120], "com.google.gson.functional.MapTest::testMapDeserialization": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedIntegerKeys": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testSortedMap": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithLongKeys": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedLongKeys": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testConcurrentMap": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [111, 116, 118, 119, 123, 124, 125, 126, 127, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [111, 116, 118, 119, 123, 124, 125, 126, 127, 131, 133, 140], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testHashMapDeserialization": [111, 116, 118, 119, 123, 124, 125, 126, 127, 131, 133, 140], "com.google.gson.functional.MapTest::testConcurrentHashMap": [111, 116, 118, 119, 123, 124, 125, 126, 127, 131, 133, 140], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [116, 118, 119, 120, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [116, 118, 119, 120, 123, 124, 125, 131, 133, 140], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [112, 116, 118, 119, 120, 123, 124, 125, 131, 133, 140], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testIncorrectJsonAdapterType": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [118, 119, 120], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [118, 119, 120], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [118, 119, 120], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [118, 119, 120], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [118, 119, 120], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [118, 119, 120], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [118, 119, 120], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [118, 119, 120], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [118, 119, 120], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [118, 119, 120], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [118, 119, 120], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [118, 119, 120], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [118, 119, 120], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [118, 119, 120], "com.google.gson.functional.EnumTest::testEnumSubclass": [118, 119, 120], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [118, 119, 120], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [118, 119, 120], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [118, 119, 120], "com.google.gson.functional.EnumTest::testEnumSet": [118, 119, 120], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [118, 119, 120], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [118, 119, 120], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [118, 119, 120], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [118, 119, 120], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [111, 116, 118, 119, 124, 125, 126, 127, 131, 133, 140], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [118, 119, 120], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [118, 119, 120], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [118, 119, 120], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [118, 119, 120], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [118, 119, 120], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [118, 119, 120], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [118, 119, 120], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [118, 119, 120], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [118, 119, 120], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [118, 119, 120], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [118, 119, 120], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [118, 119, 120], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [118, 119, 120], "com.google.gson.functional.CollectionTest::testSetDeserialization": [118, 119, 120], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [118, 119, 120], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [118, 119, 120]}, "com.google.gson.JsonPrimitive": {"com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [65, 98, 106, 116, 150, 180, 182, 185], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [65, 98, 106, 116, 150, 180, 182, 185], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [56, 65, 98, 106, 116, 150, 161, 170, 180, 182, 185], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [56, 98, 106, 150, 161, 180, 181], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [56, 65, 98, 106, 116, 150, 170], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [65, 98, 106, 116, 150, 170, 180, 182, 185], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [47, 56, 65, 98, 106, 116, 150, 170], "com.google.gson.functional.PrimitiveTest::testPrimitiveClassLiteral": [56, 98, 106, 116, 150, 161, 170, 264], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [56, 65, 98, 106, 116, 150, 161, 180, 182, 185, 264], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [65, 98, 106, 170], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [56, 65, 98, 106, 116, 150, 170], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [56, 65, 98, 106, 116, 150, 161, 170, 180, 182, 185, 242, 264], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [65, 98, 106, 116, 150, 180, 182, 185], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [65, 98, 106, 116, 150, 180, 182, 185], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [56, 98, 106, 150, 161, 264], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [65, 98, 106, 116, 150, 180, 182, 185], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [65, 98, 106, 116, 150, 180, 182, 185], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [56, 98, 106, 150, 161, 264], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [56, 98, 106, 150, 161, 264], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [65, 85, 98, 106, 116, 150, 180, 182, 185], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [65, 85, 98, 106, 116, 150, 180, 182, 185], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [65, 85, 98, 106, 116, 150, 180, 182, 185], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [65, 85, 98, 106, 116, 150, 180, 182, 185], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [65, 98, 106, 116, 150, 170, 180, 182, 185], "com.google.gson.LongSerializationPolicyTest::testDefaultLongSerialization": [56, 98, 106, 150, 161, 170, 242], "com.google.gson.LongSerializationPolicyTest::testStringLongSerialization": [65, 98, 106, 116, 150, 170, 180, 182, 185], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [56, 98, 106, 150, 161, 264]}, "com.google.gson.stream.JsonReader": {"com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1230, 1231, 1232, 1256, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1230, 1231, 1232, 1256, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1230, 1231, 1232, 1256, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 840, 844, 848, 849, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 385, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 494, 495, 509, 510, 511, 516, 519, 520, 530, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 777, 782, 783, 791, 793, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1230, 1231, 1232, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1568, 1576, 1577], "com.google.gson.functional.UncategorizedTest::testTrailingWhitespace": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 829, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 848, 849, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 988, 990, 991, 994, 995, 997, 1000, 1001, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 829, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 608, 609, 620, 621, 622, 625, 626, 627, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 608, 609, 620, 621, 622, 625, 626, 627, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 608, 609, 620, 621, 622, 625, 626, 627, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 608, 609, 620, 621, 622, 625, 626, 627, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 502, 503, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 732, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 814, 816, 819, 820, 827, 829, 987, 990, 991, 994, 995, 997, 998, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [238, 239, 240, 245, 269, 270, 272, 293, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 669, 670, 698, 699, 705, 706, 711, 712, 713, 714, 715, 722, 723, 731, 735, 737, 738, 745, 763, 805, 810, 812, 814, 815, 827, 886, 891, 897, 899, 915, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 549, 550, 570, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 669, 670, 698, 699, 705, 706, 711, 713, 714, 722, 723, 731, 735, 737, 738, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 886, 891, 897, 899, 915, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [238, 239, 240, 245, 269, 270, 272, 293, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 549, 550, 570, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 698, 699, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 722, 723, 731, 733, 734, 735, 737, 738, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 886, 891, 897, 899, 915, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [238, 239, 240, 245, 269, 270, 272, 293, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 669, 670, 698, 699, 705, 706, 711, 713, 714, 722, 723, 731, 735, 737, 738, 745, 763, 886, 891, 897, 899, 915, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [238, 239, 240, 245, 269, 270, 272, 293, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 445, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 549, 550, 572, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 611, 612, 614, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 650, 652, 655, 656, 669, 670, 698, 699, 705, 706, 711, 713, 714, 722, 723, 731, 735, 737, 738, 745, 763, 777, 782, 784, 786, 787, 791, 793, 864, 868, 869, 886, 891, 897, 899, 915, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [238, 239, 240, 245, 269, 270, 272, 293, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 549, 550, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 611, 612, 614, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 650, 652, 655, 656, 669, 670, 698, 699, 705, 706, 711, 713, 714, 722, 723, 731, 735, 737, 738, 745, 763, 777, 782, 784, 786, 787, 791, 793, 864, 868, 869, 886, 891, 897, 899, 915, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [238, 239, 240, 245, 269, 270, 272, 293, 341, 345, 346, 348, 359, 363, 364, 366, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 669, 670, 698, 699, 705, 706, 711, 713, 714, 722, 723, 731, 735, 737, 738, 745, 763, 886, 891, 897, 899, 915, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1006, 1007, 1014, 1015, 1016, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1508, 1509, 1516, 1529, 1576, 1577, 1579, 1583, 1584, 1590], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 931, 936, 937, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579, 1583, 1584, 1590], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1006, 1007, 1014, 1015, 1016, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1508, 1509, 1516, 1529, 1576, 1577, 1579, 1583, 1584, 1590], "com.google.gson.functional.ReadersWritersTest::testTypeMismatchThrowsJsonSyntaxExceptionForStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 385, 423, 424, 425, 428, 443, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 599, 603, 604, 606, 620, 621, 622, 625, 626, 631, 638, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 536, 537, 538, 539, 543, 549, 550, 570, 805, 810, 812, 814, 815, 827, 829, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ReadersWritersTest::testTypeMismatchThrowsJsonSyntaxExceptionForReaders": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 385, 423, 424, 425, 428, 443, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 599, 603, 604, 606, 620, 621, 622, 625, 626, 631, 638, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 455, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 536, 537, 538, 539, 540, 543, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 829, 840, 844, 845, 847, 848, 849, 851, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1403, 1576, 1577], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 848, 849, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ReadersWritersTest::testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 445, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 638, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.ReadersWritersTest::testTopLevelNullObjectDeserializationWithReader": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 445, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 638, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.PrimitiveTest::testBigIntegerDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 714, 715, 718, 719, 721, 731, 735, 738, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testPrimitiveClassLiteral": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 731, 732, 734, 1163, 1169, 1170, 1176, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 672, 674, 698, 699, 705, 711, 712, 713, 714, 715, 718, 721, 722, 723, 731, 735, 738, 886, 891, 897, 898, 909, 917, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testNumberDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 698, 699, 705, 711, 712, 713, 714, 715, 718, 719, 721, 722, 723, 731, 732, 734, 735, 738, 805, 810, 812, 814, 816, 819, 820, 821, 822, 829, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsDoublePrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 886, 891, 897, 900, 902, 904, 905, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDoubleAsStringRepresentationDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 683, 684, 691, 692, 698, 699, 705, 711, 713, 714, 722, 723, 724, 725, 731, 735, 738, 886, 891, 897, 898, 909, 917, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testLongAsStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 931, 936, 942, 945, 946, 949, 952, 955, 987, 988, 990, 991, 994, 995, 997, 1000, 1001, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigIntegerDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 714, 715, 718, 719, 721, 731, 734, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsFloat": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 672, 674, 676, 677, 691, 692, 698, 699, 705, 711, 712, 713, 714, 715, 718, 721, 722, 723, 724, 725, 731, 735, 738, 886, 891, 897, 898, 909, 917, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsShortWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 1163, 1169, 1179, 1182, 1197, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testBigDecimalNoFractAsStringRepresentationDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 683, 684, 691, 692, 705, 711, 713, 714, 722, 724, 725, 731, 735, 738, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.PrimitiveTest::testDoubleInfinityDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 886, 891, 897, 900, 902, 903, 909, 917, 1041, 1042, 1046, 1047, 1070, 1071, 1090, 1092, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testFloatNaNDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 612, 613, 620, 621, 622, 625, 626, 627, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 886, 891, 897, 900, 902, 903, 909, 917, 1041, 1042, 1046, 1047, 1070, 1071, 1090, 1092, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.PrimitiveTest::testBigDecimalNaNDeserializationNotSupported": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 612, 613, 620, 621, 622, 625, 626, 627, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 805, 810, 811, 829, 1041, 1042, 1046, 1047, 1070, 1071, 1090, 1092, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.PrimitiveTest::testPrimitiveLongAutoboxedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 731, 732, 734, 931, 936, 939, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 669, 670, 672, 676, 677, 691, 692, 698, 699, 705, 706, 711, 713, 714, 722, 723, 724, 725, 731, 735, 737, 738, 745, 763, 886, 891, 897, 899, 915, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDeserializingNonZeroDecimalPointValuesAsIntegerFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 698, 699, 705, 711, 713, 714, 722, 723, 731, 735, 738, 931, 936, 942, 943, 964, 965, 966, 967, 1163, 1169, 1179, 1180, 1201, 1202, 1203, 1204, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsByteWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 1163, 1169, 1179, 1182, 1197, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 669, 670, 672, 705, 706, 709, 745, 765, 886, 891, 897, 900, 902, 903, 909, 917, 1041, 1042, 1046, 1047, 1070, 1071, 1090, 1092, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsFloatPrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 886, 891, 897, 900, 902, 904, 905, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsDouble": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 672, 674, 676, 677, 691, 692, 698, 699, 705, 711, 712, 713, 714, 715, 718, 721, 722, 723, 724, 725, 731, 735, 738, 886, 891, 897, 898, 909, 917, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsInteger": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 1163, 1169, 1179, 1182, 1197, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.PrimitiveTest::testBigDecimalDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 672, 674, 676, 677, 691, 692, 698, 699, 705, 711, 712, 713, 714, 715, 718, 721, 722, 723, 724, 725, 731, 735, 738, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testStringsAsBooleans": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 568, 572, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsBigDecimal": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 714, 715, 718, 719, 721, 731, 735, 738, 805, 810, 812, 814, 816, 819, 821, 822, 829, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBytePrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 1163, 1169, 1179, 1182, 1197, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testFloatInfinityDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 886, 891, 897, 900, 902, 903, 909, 917, 1041, 1042, 1046, 1047, 1070, 1071, 1090, 1092, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testQuotedStringSerializationAndDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 988, 990, 991, 994, 995, 997, 1000, 1001, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBooleanWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 840, 844, 848, 853, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDoubleNoFractAsStringRepresentationDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 683, 684, 691, 692, 705, 711, 713, 714, 722, 724, 725, 731, 735, 738, 886, 891, 897, 898, 909, 917, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.PrimitiveTest::testBigDecimalAsStringRepresentationDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 683, 684, 691, 692, 698, 699, 705, 711, 713, 714, 722, 723, 724, 725, 731, 735, 738, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testNumberAsStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 988, 990, 991, 994, 995, 997, 1000, 1001, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsInteger": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 714, 715, 718, 719, 721, 731, 735, 738, 1163, 1169, 1179, 1180, 1201, 1202, 1203, 1204, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBigDecimal": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 805, 810, 812, 814, 816, 819, 821, 825, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsNumber": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsIntegerFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 672, 674, 676, 677, 691, 692, 698, 699, 705, 711, 712, 713, 714, 715, 718, 721, 722, 723, 724, 725, 731, 735, 738, 1163, 1169, 1179, 1180, 1201, 1202, 1203, 1204, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsLongPrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 931, 936, 942, 945, 960, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDeserializingDecimalPointValueZeroSucceeds": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 698, 699, 705, 711, 713, 714, 722, 723, 731, 735, 738, 1163, 1169, 1179, 1180, 1201, 1202, 1209, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBigInteger": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 805, 810, 812, 814, 816, 819, 821, 825, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 669, 670, 672, 705, 706, 709, 745, 765, 886, 891, 897, 900, 902, 903, 909, 917, 1041, 1042, 1046, 1047, 1070, 1071, 1090, 1092, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBooleanPrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 840, 844, 848, 853, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testBooleanDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 443, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 599, 603, 604, 606, 607, 608, 610, 620, 621, 622, 625, 626, 631, 638, 840, 844, 847, 848, 851, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBigDecimal": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 805, 810, 812, 814, 816, 819, 821, 825, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testPrimitiveIntegerAutoboxedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 731, 732, 734, 1163, 1169, 1170, 1176, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsDoubleWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 886, 891, 897, 900, 902, 904, 905, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBigInteger": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 805, 810, 812, 814, 816, 819, 821, 825, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigDecimalDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 698, 699, 705, 711, 713, 714, 722, 723, 731, 735, 738, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsBigIntegerFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 672, 674, 676, 677, 691, 692, 698, 699, 705, 711, 712, 713, 714, 715, 718, 721, 722, 723, 724, 725, 731, 735, 738, 805, 810, 812, 814, 816, 819, 821, 822, 829, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsShortPrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 1163, 1169, 1179, 1182, 1197, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testReallyLongValuesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 714, 715, 718, 719, 721, 731, 732, 734, 931, 936, 939, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testValueVeryCloseToZeroIsZero": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 672, 674, 676, 677, 691, 692, 698, 699, 705, 711, 712, 713, 714, 715, 718, 721, 722, 723, 724, 725, 731, 735, 738, 931, 936, 942, 943, 964, 965, 972, 1163, 1169, 1179, 1180, 1201, 1202, 1209, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsLongWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 931, 936, 942, 945, 960, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testBigDecimalPreservePrecisionDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 698, 699, 705, 711, 713, 714, 722, 723, 731, 735, 738, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsFloatWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 886, 891, 897, 900, 902, 904, 905, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsLong": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 714, 715, 718, 719, 721, 731, 735, 738, 931, 936, 942, 943, 964, 965, 966, 967, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsInt": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 1163, 1169, 1179, 1182, 1197, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testBadValueForBigIntegerDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 698, 699, 705, 711, 712, 713, 714, 715, 722, 723, 731, 735, 738, 805, 810, 812, 814, 816, 819, 821, 822, 829, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testBigDecimalNegativeInfinityDeserializationNotSupported": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 669, 670, 672, 705, 706, 709, 745, 765, 805, 810, 811, 829, 1041, 1042, 1046, 1047, 1070, 1071, 1090, 1092, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testByteDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 731, 732, 734, 1163, 1169, 1170, 1176, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.PrimitiveTest::testUnquotedStringDeserializationFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 333, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 536, 537, 538, 539, 542, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 805, 810, 811, 827, 829, 1041, 1042, 1046, 1047, 1070, 1071, 1090, 1091, 1092, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1408, 1409, 1568, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testLargeDoubleDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 657, 662, 669, 670, 691, 692, 698, 699, 705, 711, 713, 714, 722, 723, 724, 725, 731, 735, 738, 886, 891, 897, 898, 909, 917, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testBigDecimalInfinityDeserializationNotSupported": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 805, 810, 811, 829, 1041, 1042, 1046, 1047, 1070, 1071, 1090, 1092, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.PrimitiveTest::testDoubleNaNDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 612, 613, 620, 621, 622, 625, 626, 627, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 886, 891, 897, 900, 902, 903, 909, 917, 1041, 1042, 1046, 1047, 1070, 1071, 1090, 1092, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsNumber": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 848, 849, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 848, 849, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 698, 699, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 722, 723, 731, 733, 734, 735, 737, 738, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 848, 849, 886, 891, 897, 899, 915, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 732, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 816, 819, 820, 827, 829, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 840, 844, 848, 849, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ObjectTest::testTruncatedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1400, 1401, 1576, 1577], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 785, 791, 793, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1230, 1231, 1232, 1256, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 777, 782, 784, 786, 787, 791, 793, 864, 868, 869, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 777, 782, 784, 786, 787, 791, 793, 864, 868, 869, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 777, 782, 784, 786, 787, 791, 793, 864, 868, 869, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 552, 553, 572, 574, 777, 782, 784, 786, 787, 791, 793, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 845, 848, 849, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 848, 849, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 785, 786, 787, 791, 793, 805, 810, 812, 813, 827, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 443, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 572, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 848, 849, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 848, 849, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ObjectTest::testEmptyStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 462, 463, 465, 478, 516, 532, 533, 534, 1284, 1286, 1290, 1295, 1309, 1328, 1329, 1331, 1332, 1333, 1400, 1401, 1576], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 462, 463, 465, 478, 481, 494, 495, 502, 503, 516, 532, 533, 534, 549, 550, 574, 1275, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 443, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 572, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 848, 849, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 683, 684, 691, 692, 698, 699, 705, 706, 711, 712, 713, 714, 722, 723, 724, 725, 731, 733, 734, 735, 737, 738, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 816, 819, 821, 823, 827, 840, 844, 845, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 500, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 765, 777, 782, 783, 784, 785, 786, 787, 791, 793, 805, 810, 812, 813, 827, 840, 844, 845, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 745, 765, 777, 782, 783, 791, 793, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.NullObjectAndFieldTest::testTopLevelNullObjectDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 445, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 638, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 777, 782, 784, 786, 787, 791, 793, 864, 868, 869, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 765, 777, 782, 783, 791, 793, 864, 868, 869, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 777, 782, 784, 785, 791, 793, 864, 868, 869, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 777, 782, 783, 791, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1042, 1046, 1047, 1091, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1004, 1006, 1007, 1009, 1011, 1014, 1015, 1016, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1508, 1576, 1577], "com.google.gson.functional.MapTest::testMapDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedIntegerKeys": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 745, 765, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1042, 1046, 1047, 1091, 1163, 1169, 1179, 1182, 1183, 1184, 1190, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testStringKeyDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 805, 810, 812, 814, 815, 827, 931, 936, 937, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 765, 805, 810, 811, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1042, 1046, 1047, 1091, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testMapDeserializationEmpty": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 462, 463, 465, 478, 481, 494, 495, 502, 503, 516, 532, 533, 534, 549, 550, 574, 1275, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testSortedMap": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1163, 1169, 1179, 1182, 1183, 1186, 1190, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testMapDeserializationWithLongKeys": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 805, 810, 812, 814, 815, 827, 931, 936, 942, 945, 946, 949, 952, 953, 955, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 599, 603, 604, 606, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 805, 810, 812, 814, 815, 827, 840, 844, 845, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedLongKeys": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 745, 765, 805, 810, 812, 814, 815, 827, 931, 936, 942, 945, 946, 947, 952, 953, 955, 987, 990, 991, 994, 995, 997, 998, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testConcurrentMap": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1163, 1169, 1179, 1182, 1183, 1186, 1190, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 805, 810, 811, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1042, 1046, 1047, 1091, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testComplexKeysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 385, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 481, 494, 495, 500, 516, 532, 533, 534, 549, 550, 574, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1163, 1169, 1179, 1182, 1183, 1186, 1190, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 494, 495, 500, 516, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 829, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testBooleanKeyDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 805, 810, 812, 814, 815, 827, 864, 868, 869, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testDeerializeMapOfMaps": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1163, 1169, 1179, 1182, 1183, 1186, 1190, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1163, 1169, 1179, 1182, 1183, 1186, 1190, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 805, 810, 811, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1042, 1046, 1047, 1091, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testNumberKeyDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 805, 810, 812, 813, 827, 886, 891, 897, 900, 901, 915, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testHashMapDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1163, 1169, 1179, 1182, 1183, 1186, 1190, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapTest::testConcurrentHashMap": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1163, 1169, 1179, 1182, 1183, 1186, 1190, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 360, 361, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 360, 361, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 443, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 572, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 845, 848, 849, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 360, 361, 363, 364, 366, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 886, 891, 897, 900, 901, 909, 915, 917, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 360, 361, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.LeniencyTest::testLenientFromJson": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 568, 572, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1385, 1392, 1393, 1394, 1396, 1397, 1419, 1420, 1421, 1425, 1576, 1577], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 777, 782, 784, 785, 791, 793, 864, 868, 869, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 806, 807, 810, 812, 813, 827, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 805, 810, 812, 813, 827, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 777, 782, 784, 786, 787, 791, 793, 931, 936, 942, 945, 946, 949, 953, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testNullSafeObjectFromJson": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 445, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 638, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 494, 495, 500, 516, 519, 532, 533, 534, 549, 550, 568, 570, 574, 777, 778, 779, 782, 784, 785, 791, 805, 806, 807, 810, 812, 813, 829, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicIntegerArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 931, 936, 937, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArrayWithStringSerializationPolicy": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 568, 572, 931, 936, 942, 945, 946, 949, 953, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicBoolean": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 443, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 599, 603, 604, 606, 620, 621, 622, 625, 626, 631, 638, 840, 844, 847, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 777, 782, 784, 785, 791, 793, 931, 936, 942, 945, 946, 949, 952, 953, 955, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicInteger": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 714, 715, 718, 719, 721, 731, 732, 734, 1163, 1169, 1170, 1176, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLong": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 714, 715, 718, 719, 721, 731, 732, 734, 931, 936, 939, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForCollectionType": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1097, 1099, 1100, 1102, 1103, 1104, 1105, 1230, 1231, 1232, 1235, 1238, 1241, 1244, 1247, 1249, 1250, 1256, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1097, 1099, 1100, 1102, 1103, 1104, 1105, 1230, 1231, 1232, 1235, 1238, 1241, 1244, 1247, 1249, 1250, 1256, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1097, 1099, 1100, 1102, 1103, 1104, 1105, 1230, 1231, 1232, 1235, 1238, 1241, 1244, 1247, 1249, 1250, 1256, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 698, 699, 705, 706, 711, 712, 713, 714, 715, 722, 723, 731, 733, 734, 735, 737, 738, 745, 763, 765, 777, 782, 783, 791, 793, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1163, 1169, 1174, 1230, 1231, 1232, 1235, 1238, 1241, 1244, 1247, 1249, 1251, 1253, 1254, 1256, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 502, 503, 516, 517, 519, 532, 533, 534, 549, 550, 574, 777, 782, 784, 786, 787, 791, 793, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1006, 1007, 1014, 1015, 1016, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1508, 1576, 1577], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 845, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1006, 1007, 1014, 1015, 1016, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1508, 1509, 1516, 1529, 1576, 1577], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 829, 840, 844, 845, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1004, 1006, 1007, 1009, 1011, 1014, 1015, 1016, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1508, 1576, 1577], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 443, 450, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 845, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1006, 1007, 1014, 1015, 1016, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1508, 1509, 1516, 1529, 1576, 1577], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 829, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.EnumTest::testEnumSubclass": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 829, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.EnumTest::testEnumSubclassAsParameterizedType": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.EnumTest::testCollectionOfEnumsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 988, 990, 991, 994, 995, 997, 1000, 1001, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 988, 990, 991, 994, 995, 997, 1000, 1001, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.EnumTest::testEnumSet": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 443, 450, 453, 462, 463, 464, 465, 467, 468, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 572, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 845, 848, 849, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testUuidDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 568, 572, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 494, 495, 497, 516, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 669, 670, 672, 676, 677, 691, 692, 698, 699, 702, 705, 711, 713, 714, 722, 723, 724, 725, 777, 782, 784, 786, 787, 791, 793, 805, 810, 811, 829, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1041, 1042, 1046, 1047, 1090, 1092, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguageCountry": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 988, 990, 991, 994, 995, 997, 1000, 1001, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 462, 463, 465, 478, 481, 494, 495, 502, 503, 516, 532, 533, 534, 549, 550, 574, 1275, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.DefaultTypeAdaptersTest::testUriDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 988, 990, 991, 994, 995, 997, 1000, 1001, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimeDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 805, 810, 812, 813, 829, 987, 988, 990, 991, 994, 995, 997, 1000, 1001, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultGregorianCalendarDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 423, 424, 425, 428, 430, 432, 440, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 732, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1163, 1164, 1165, 1169, 1170, 1174, 1176, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlDateDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 829, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguage": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 988, 990, 991, 994, 995, 997, 1000, 1001, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBufferDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 988, 990, 991, 994, 995, 997, 1000, 1001, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 988, 990, 991, 994, 995, 997, 1000, 1001, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testBitSetDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 572, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultCalendarDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 423, 424, 425, 428, 430, 432, 440, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 732, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1163, 1164, 1165, 1169, 1170, 1174, 1176, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguageCountryVariant": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 988, 990, 991, 994, 995, 997, 1000, 1001, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 650, 652, 655, 656, 669, 670, 672, 674, 676, 677, 691, 692, 698, 699, 705, 706, 711, 712, 713, 714, 715, 718, 721, 722, 723, 724, 725, 731, 735, 737, 738, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 816, 819, 821, 823, 827, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 805, 810, 812, 813, 829, 987, 988, 990, 991, 994, 995, 997, 1000, 1001, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 805, 810, 811, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1042, 1046, 1047, 1091, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 988, 990, 991, 994, 995, 997, 1000, 1001, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testClassDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 585, 594, 599, 603, 607, 611, 616, 643, 644, 645, 652, 656, 669, 670, 705, 706, 709, 745, 765, 805, 810, 811, 829, 1041, 1042, 1046, 1047, 1070, 1071, 1090, 1092, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 735, 737, 738, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 816, 819, 821, 823, 827, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 805, 810, 812, 813, 829, 987, 988, 990, 991, 994, 995, 997, 1000, 1004, 1006, 1007, 1009, 1011, 1014, 1015, 1016, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1508, 1576, 1577], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBuilderDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 568, 572, 805, 810, 812, 813, 827, 829, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 732, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 816, 819, 820, 827, 829, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 500, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 805, 810, 812, 813, 827, 829, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 731, 734, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 568, 805, 810, 812, 813, 829, 987, 988, 990, 991, 994, 995, 997, 1000, 1001, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 443, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 604, 606, 607, 611, 616, 620, 621, 622, 625, 626, 631, 638, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 731, 732, 734, 805, 810, 812, 814, 816, 819, 820, 829, 840, 844, 847, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 445, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 765, 777, 782, 783, 791, 793, 864, 868, 869, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 453, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 732, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 816, 819, 820, 827, 829, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 777, 782, 784, 786, 787, 791, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 572, 574, 745, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 777, 782, 783, 791, 793, 805, 810, 812, 813, 827, 829, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 574, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 572, 574, 745, 765, 777, 782, 783, 791, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1042, 1046, 1047, 1091, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [238, 239, 240, 245, 269, 270, 272, 293, 326, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 462, 463, 465, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 568, 574, 745, 765, 777, 782, 783, 791, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1042, 1046, 1047, 1091, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 805, 810, 812, 814, 815, 827, 886, 891, 892, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CollectionTest::testStack": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 443, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 572, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 604, 606, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 845, 848, 849, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 568, 572, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CollectionTest::testTopLevelCollectionOfIntegersDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CollectionTest::testVector": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CollectionTest::testPriorityQueue": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 931, 936, 937, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 443, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 570, 572, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 608, 610, 611, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 732, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 840, 844, 848, 849, 886, 891, 892, 894, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 445, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 805, 810, 812, 814, 815, 827, 864, 868, 869, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CollectionTest::testSetDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 509, 510, 511, 516, 517, 519, 532, 533, 534, 549, 550, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 765, 777, 782, 783, 791, 793, 1041, 1042, 1046, 1047, 1090, 1091, 1092, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CollectionTest::testQueueDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 568, 572, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 533, 534, 549, 550, 552, 553, 572, 574, 777, 782, 784, 786, 787, 791, 793, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 359, 363, 364, 366, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 568, 572, 805, 810, 812, 813, 827, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 568, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 698, 699, 705, 706, 711, 712, 713, 714, 722, 723, 731, 732, 733, 734, 735, 737, 738, 745, 763, 805, 810, 812, 813, 827, 886, 891, 892, 894, 897, 898, 899, 909, 915, 917, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 445, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 864, 868, 869, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ArrayTest::testInvalidArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 476, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1568, 1576, 1577], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 805, 810, 812, 814, 815, 827, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 552, 553, 572, 1275, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 445, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 864, 868, 869, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 453, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 572, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 412, 413, 414, 416, 423, 424, 425, 428, 434, 445, 450, 462, 463, 464, 465, 467, 468, 470, 478, 516, 532, 533, 534, 549, 550, 570, 572, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 637, 638, 745, 763, 805, 810, 812, 814, 815, 827, 864, 868, 869, 987, 990, 991, 994, 995, 997, 998, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverridePrimitiveBooleanAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 443, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 604, 606, 607, 611, 616, 620, 621, 622, 625, 626, 631, 638, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 731, 732, 734, 840, 844, 847, 1163, 1169, 1170, 1176, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideWrapperBooleanAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 443, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 604, 606, 607, 611, 616, 620, 621, 622, 625, 626, 631, 638, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 731, 732, 734, 840, 844, 847, 1163, 1169, 1170, 1176, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [238, 239, 240, 245, 269, 270, 272, 293, 341, 345, 346, 348, 359, 363, 364, 366, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 434, 445, 450, 453, 462, 463, 464, 465, 467, 468, 470, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 549, 550, 570, 572, 574, 576, 579, 580, 581, 584, 585, 586, 599, 603, 607, 611, 612, 614, 616, 620, 621, 622, 625, 626, 631, 637, 638, 643, 644, 645, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 864, 868, 869, 886, 891, 892, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397], "com.google.gson.MixedStreamTest::testReadInvalidState": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 377, 378, 379, 381, 382, 383, 423, 424, 425, 428, 440, 462, 463, 465, 478, 481, 494, 495, 497, 516, 532, 549, 550, 572, 574, 805, 810, 812, 814, 816, 819, 821, 825, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397], "com.google.gson.MixedStreamTest::testReaderDoesNotMutateState": [326, 333], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 377, 381, 382, 383, 394, 398, 399, 402, 412, 413, 414, 416, 423, 424, 425, 428, 430, 450, 453, 462, 463, 464, 465, 467, 468, 478, 479, 481, 482, 483, 485, 494, 495, 497, 516, 517, 519, 532, 549, 550, 570, 572, 574, 576, 579, 580, 584, 585, 586, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 669, 670, 705, 706, 711, 712, 713, 714, 715, 718, 719, 721, 731, 733, 734, 745, 763, 777, 782, 784, 786, 787, 791, 793, 805, 810, 812, 814, 815, 827, 987, 988, 990, 991, 994, 995, 997, 998, 1000, 1001, 1163, 1169, 1174, 1275, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397], "com.google.gson.MixedStreamTest::testReadClosed": [269, 423, 424, 425, 462, 463, 465, 478, 516, 532, 537, 545, 546, 1216, 1217, 1218], "com.google.gson.GsonTypeAdapterTest::testDefaultTypeAdapterThrowsParseException": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 574, 805, 810, 812, 814, 816, 819, 821, 825, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterDoesNotAffectNonAdaptedTypes": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 450, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 570, 805, 810, 812, 814, 815, 829, 987, 988, 990, 991, 994, 995, 997, 1000, 1001, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 648, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 731, 732, 734, 805, 810, 812, 814, 816, 819, 820, 829, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [238, 239, 240, 245, 269, 270, 272, 293, 326, 423, 424, 425, 428, 453, 462, 463, 465, 478, 516, 532, 533, 534, 549, 550, 576, 579, 580, 584, 599, 603, 607, 611, 616, 643, 644, 645, 649, 650, 652, 655, 656, 657, 662, 669, 670, 705, 711, 712, 713, 714, 715, 718, 719, 721, 731, 734, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397, 1576, 1577, 1579], "com.google.gson.DefaultDateTypeAdapterTest::testNullValue": [238, 239, 240, 245, 269, 270, 272, 293, 423, 424, 425, 428, 445, 462, 463, 465, 478, 516, 532, 549, 550, 576, 579, 580, 581, 599, 603, 607, 611, 612, 614, 620, 621, 622, 625, 626, 631, 638, 1284, 1286, 1287, 1290, 1293, 1295, 1296, 1305, 1306, 1309, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1396, 1397], "com.google.gson.DefaultDateTypeAdapterTest::testUnexpectedToken": [238, 239, 240, 245, 269, 270, 272, 293, 423, 424, 425, 428, 430, 462, 463, 465, 478, 516, 532, 549, 550, 574, 805, 810, 812, 814, 816, 819, 821, 825, 1284, 1286, 1290, 1293, 1295, 1296, 1305, 1306, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1340, 1341, 1345, 1349, 1384, 1397]}, "com.google.gson.internal.bind.CollectionTypeAdapterFactory": {"com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [47, 48, 49], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [47, 48, 49], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [47, 48, 49], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [47, 48, 49], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [47, 48, 49], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [47, 48, 49], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [47, 48, 49], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [45, 47, 48, 49, 52, 53], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [47, 48, 49], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [45, 47, 48, 49, 52, 53], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [45, 47, 48, 49, 52, 53], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [47, 48, 49], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [47, 48, 49], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [47, 48, 49], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [47, 48, 49], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [47, 48, 49], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [45, 47, 48, 49, 52, 53], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [45, 47, 48, 49, 52, 53], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [47, 48, 49], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [45, 47, 48, 49, 52, 53], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [45, 47, 48, 49, 52, 53], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [47, 48, 49], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [47, 48, 49], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [47, 48, 49], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [47, 48, 49], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [47, 48, 49], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [47, 48, 49], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [47, 48, 49], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [47, 48, 49], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [47, 48, 49], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [47, 48, 49], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [47, 48, 49], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [47, 48, 49], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [40, 45, 47, 48, 49, 52, 53, 54, 57, 58], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [40, 45, 47, 48, 49, 52, 53, 54, 57, 58], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [47, 48, 49], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [47, 48, 49], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [47, 48, 49], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [47, 48, 49], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [47, 48, 49], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [47, 48, 49], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [47, 48, 49], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [47, 48, 49], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [47, 48, 49], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [47, 48, 49], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [47, 48, 49], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [47, 48, 49], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserialization": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedIntegerKeys": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [47, 48, 49], "com.google.gson.functional.MapTest::testSortedMap": [47, 48, 49], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserializationWithLongKeys": [47, 48, 49], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedLongKeys": [47, 48, 49], "com.google.gson.functional.MapTest::testConcurrentMap": [47, 48, 49], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [47, 48, 49], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [47, 48, 49], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [47, 48, 49], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [47, 48, 49], "com.google.gson.functional.MapTest::testHashMapDeserialization": [47, 48, 49], "com.google.gson.functional.MapTest::testConcurrentHashMap": [47, 48, 49], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [47, 48, 49], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [47, 48, 49], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [47, 48, 49], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testIncorrectJsonAdapterType": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [47, 48, 49], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [47, 48, 49], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [47, 48, 49], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [47, 48, 49], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [47, 48, 49], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [40, 45, 47, 48, 52, 53, 54, 57, 58], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [47, 48, 49], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [47, 48, 49], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [47, 48, 49], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [47, 48, 49], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [47, 48, 49], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [47, 48, 49], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [47, 48, 49], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [47, 48, 49], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [47, 48, 49], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [40, 45, 47, 48, 52, 53, 54, 57, 58], "com.google.gson.functional.EnumTest::testEnumSubclass": [40, 47, 48, 49, 54], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [47, 48, 49], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [47, 48, 49], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [47, 48, 49], "com.google.gson.functional.EnumTest::testEnumSet": [40, 45, 47, 48, 49, 52, 53, 54, 57, 58], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [40, 45, 47, 48, 52, 53, 54, 57, 58], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [47, 48, 49], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [47, 48, 49], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [47, 48, 49], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [47, 48, 49], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [47, 48, 49], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [47, 48, 49], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [47, 48, 49], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [47, 48, 49], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [47, 48, 49], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [47, 48, 49], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [47, 48, 49], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [47, 48, 49], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [47, 48, 49], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [47, 48, 49], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [47, 48, 49], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [47, 48, 49], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testStack": [40, 45, 47, 48, 52, 53, 54, 57, 58], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [40, 45, 47, 48, 52, 53, 54, 57, 58], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testVector": [40, 45, 47, 48, 52, 53, 54, 57, 58], "com.google.gson.functional.CollectionTest::testPriorityQueue": [40, 45, 47, 48, 52, 53, 54, 57, 58], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [40, 47, 48, 49, 54], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testSetDeserialization": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testQueueDeserialization": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [47, 48, 49]}, "com.google.gson.internal.bind.JsonTreeReader": {"com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [51, 52, 67, 72, 73, 79, 80, 88, 89, 94, 95, 102, 103, 107, 111, 112, 113, 114, 115, 116, 117, 119, 120, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 150, 154, 156, 168, 169, 170, 172, 173, 182, 186, 295], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [51, 52, 67, 72, 73, 79, 80, 88, 89, 94, 95, 102, 103, 107, 111, 112, 113, 114, 115, 116, 117, 119, 120, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 150, 154, 168, 169, 170, 172, 173, 182, 216, 244, 295], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [51, 52, 67, 107, 111, 112, 125, 127, 129, 130, 131, 132, 150, 154, 156, 182, 186, 295], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [51, 52, 67, 88, 89, 102, 103, 107, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 150, 154, 168, 169, 170, 172, 173, 182, 191, 230, 244, 295], "com.google.gson.functional.PrimitiveTest::testPrimitiveClassLiteral": [51, 52, 67, 107, 111, 112, 125, 127, 129, 130, 131, 133, 135, 136, 150, 243, 248, 295], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [51, 52, 67, 88, 89, 102, 103, 107, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 127, 129, 130, 131, 132, 150, 154, 182, 216, 277, 278, 279, 280, 295], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [51, 52, 67, 88, 89, 102, 103, 107, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 150, 154, 168, 169, 170, 172, 173, 230, 257, 261, 295], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [51, 52, 67, 88, 89, 102, 103, 107, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 150, 154, 168, 169, 170, 172, 173, 230, 257, 261, 295], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [51, 52, 67, 88, 89, 102, 103, 107, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 127, 129, 130, 131, 132, 150, 154, 168, 169, 170, 172, 173, 182, 257, 261, 295]}, "com.google.gson.internal.Excluder": {"com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [63, 70, 71, 72, 112, 113, 114, 116, 117, 150, 151, 154, 156, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216, 229, 233, 234, 235, 236, 239, 243, 244, 245, 249], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassDeserialization": [63, 70, 71, 112, 113, 114, 116, 120, 192, 194, 229, 233, 234, 235, 236], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [63, 70, 71, 72, 112, 113, 114, 116, 117, 150, 151, 154, 156, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216, 229, 233, 234, 235, 239, 243, 244, 245, 246, 249], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [63, 70, 71, 72, 112, 113, 114, 116, 117, 150, 151, 154, 156, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216, 229, 233, 234, 235, 236, 239, 243, 244, 245, 246, 249], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [63, 70, 71, 72, 112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216, 229, 233, 239, 243, 249], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 160, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedIntegerKeys": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testSortedMap": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithLongKeys": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedLongKeys": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testConcurrentMap": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testHashMapDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testConcurrentHashMap": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testIncorrectJsonAdapterType": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicIntegerArray": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArray": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArrayWithStringSerializationPolicy": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicBoolean": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicInteger": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLong": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [63, 91, 92, 93, 112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 164, 165, 166, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [63, 91, 92, 93, 112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 164, 165, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [63, 98, 103, 104, 106, 108, 112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 180, 181, 182, 183, 188, 192, 197, 201, 205, 206, 207, 208, 212, 216], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [63, 98, 103, 104, 106, 108, 112, 113, 114, 116, 117, 120, 150, 151, 154, 159, 163, 170, 174, 178, 179, 180, 181, 182, 183, 188, 192, 197, 201, 205, 206, 207, 208, 212, 216], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [63, 98, 99, 100, 101, 108, 112, 113, 114, 116, 117, 120, 150, 151, 154, 159, 163, 170, 174, 178, 179, 180, 181, 182, 183, 188, 192, 197, 201, 205, 206, 207, 208, 212, 216], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [63, 98, 99, 100, 101, 112, 113, 114, 116, 120, 192, 197, 201, 205, 206, 207, 208, 212, 216], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserialization": [63, 98, 103, 104, 106, 112, 113, 114, 116, 120, 192, 197, 201, 205, 206, 207, 208, 212, 216], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testEnumSubclass": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testEnumSet": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigIntegerTypeAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testBitSetDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigDecimalTypeAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testStack": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testVector": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testPriorityQueue": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testSetDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testQueueDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216]}, "com.google.gson.JsonElement": {"com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [56, 75, 88, 89], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [75], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [47, 56, 65, 75, 88, 89, 104, 105, 120, 121], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [75], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [75], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [75], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [75], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [75], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [56, 75, 88, 89], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [75], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [75], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [56, 75, 88, 89], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [75], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [75], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [75], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [75], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [75], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [75], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [75], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [56, 75, 88, 89], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [47, 56, 65, 75, 88, 89, 120, 121], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [75], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [47, 56, 65, 75, 88, 89, 120, 121], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [47, 56, 65, 75, 88, 89, 104, 105, 120, 121], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [47, 56, 65, 75, 88, 89, 120, 121], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [75], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [56, 75, 88, 89], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [75], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [75], "com.google.gson.LongSerializationPolicyTest::testDefaultLongSerialization": [65, 120, 121], "com.google.gson.LongSerializationPolicyTest::testStringLongSerialization": [65, 120, 121], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [75], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [75]}, "com.google.gson.internal.bind.ArrayTypeAdapter": {"com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [58, 60, 64, 69, 70, 71, 72, 73, 77, 78, 79, 82, 87, 92, 93, 94, 95], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [60, 64, 69, 70, 71, 72, 73, 77, 78, 79, 82], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [60, 64, 69, 70, 71, 72, 73, 75, 77, 78, 79, 82], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [60, 64, 69, 70, 71, 72, 73, 77, 78, 79, 82], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [64, 70, 71, 72, 75], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [58, 64, 70, 71, 72, 75, 87, 93, 94, 95], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [58, 64, 70, 71, 72, 75, 87, 93, 94, 95], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [64, 70, 71, 72, 75], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [64, 65], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [64, 70, 71, 72, 75], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [58, 64, 70, 71, 72, 75], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [58, 64, 70, 71, 72, 75], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [64, 70, 71, 72, 75], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [64, 70, 71, 72, 75], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [60, 64, 69, 70, 71, 72, 73, 77, 78, 79, 82], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [58, 64, 70, 71, 72, 87, 93, 95], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [58, 87, 92, 93, 94, 95], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [58, 64, 70, 71, 72, 75], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [58, 60, 64, 69, 70, 71, 72, 73, 77, 78, 79, 82], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [60, 64, 69, 70, 71, 72, 73, 77, 78, 79, 82], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [60, 64, 69, 70, 71, 72, 73, 77, 78, 79, 82], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [60, 64, 69, 70, 71, 72, 73, 75, 77, 78, 79, 82], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [60, 64, 69, 70, 71, 72, 73, 77, 78, 79, 82], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [60, 64, 69, 70, 71, 72, 73, 77, 78, 79, 82], "com.google.gson.functional.ArrayTest::testInvalidArrayDeserialization": [64, 70, 71, 72], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [60, 64, 69, 70, 71, 72, 73, 77, 78, 79, 82], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [60, 64, 69, 70, 71, 77, 78, 79, 82], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [60, 64, 69, 70, 71, 72, 73, 77, 78, 79, 82], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [60, 64, 69, 70, 71, 72, 73, 77, 78, 79, 82], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [60, 64, 69, 70, 71, 72, 73, 77, 78, 79, 82]}, "com.google.gson.FieldNamingPolicy": {"com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [125, 132, 140, 141, 142, 144, 145, 153, 155], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [140, 141, 142, 144, 145, 153, 155]}, "com.google.gson.JsonParseException": {"com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch": [42]}, "com.google.gson.internal.bind.TimeTypeAdapter": {"com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimeDeserialization": [40, 51, 57]}, "com.google.gson.internal.Streams": {"com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [48], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [48], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [46, 48, 72], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [48], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [48], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [48], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [48], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [46, 48], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [48], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [48], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [48], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [48], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [46, 48], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [48], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [46, 48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [46, 48], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [46, 48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [48], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [72], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [72], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [72], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [72], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [72], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [48], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [46, 48], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [48], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [48], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [46, 48], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [48], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [48], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [48], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [48]}, "com.google.gson.internal.bind.TypeAdapters": {"com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [833, 846], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [833, 846], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [833, 846], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [833, 846], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [833, 846], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [833, 846], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [833, 846], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical": [833, 880], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [880], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [833, 846], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [833, 846], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [833, 846], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [833, 846], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [833, 846], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [833, 846], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [833, 846], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [833, 846], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [833, 846], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [833, 846], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [833, 846], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [833, 846], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [833, 846], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [833, 846], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [833, 846], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [833, 846], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [833, 846], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [833, 846], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [833, 846], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [833, 846], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [833, 846], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [833, 846], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [833, 846], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [833, 846], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [833, 846], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [833, 846], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [833, 846], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [833, 846], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [833, 846], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [833, 846], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [833, 846], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [833, 846], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [833, 846], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [833, 846], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [833, 846], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [833, 846], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [833, 846], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [833, 846], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [833, 846], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [833, 846], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [833, 846], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [833, 846], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [833, 846], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [833, 846], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [833, 846], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [833, 846], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [833, 846], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [833, 846], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [833, 846], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [833, 846], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [833, 846], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [833, 846], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [833, 846], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [833, 846], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [833, 846], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [833, 846], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [833, 846], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [833, 846], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [833, 846], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [833, 846], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [833, 846], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [833, 846], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [833, 846], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [833, 846], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [833, 846], "com.google.gson.functional.MapTest::testMapDeserialization": [833, 846], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedIntegerKeys": [833, 846], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [833, 846], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [833, 846], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [833, 846], "com.google.gson.functional.MapTest::testSortedMap": [833, 846], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [833, 846], "com.google.gson.functional.MapTest::testMapDeserializationWithLongKeys": [833, 846], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [833, 846], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedLongKeys": [833, 846], "com.google.gson.functional.MapTest::testConcurrentMap": [833, 846], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [833, 846], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [833, 846], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [833, 846], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [833, 846], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [833, 846], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [833, 846], "com.google.gson.functional.MapTest::testHashMapDeserialization": [833, 846], "com.google.gson.functional.MapTest::testConcurrentHashMap": [833, 846], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [833, 846], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [833, 846], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [833, 846], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [833, 846], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [833, 846], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [833, 846], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [833, 846], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [833, 846], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [833, 846], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [833, 846], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [833, 846], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [833, 846], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [833, 846], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [833, 846], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [833, 846], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testIncorrectJsonAdapterType": [833, 846], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [833, 846], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicIntegerArray": [833, 846], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArray": [833, 846], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArrayWithStringSerializationPolicy": [833, 846], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicBoolean": [833, 846], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [833, 846], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicInteger": [833, 846], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLong": [833, 846], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [833, 846], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [833, 846], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [833, 846], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [833, 846], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [833, 846], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [833, 846], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [833, 846], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [833, 846], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [833, 846], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [846], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [833, 846], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [833, 846], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [833, 846], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [833, 846], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [833, 846], "com.google.gson.functional.EnumTest::testEnumSubclass": [833, 846], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [833, 846], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [833, 846], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [833, 846], "com.google.gson.functional.EnumTest::testEnumSet": [833, 846], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [833, 846], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [833, 846], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonNullDeserialization": [833], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [833, 846], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [833, 846], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigIntegerTypeAdapter": [833], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [833, 846], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [833, 846], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [833, 846], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonObjectDeserialization": [833], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [833], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [833], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonPrimitiveDeserialization": [833], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [833, 846], "com.google.gson.functional.DefaultTypeAdaptersTest::testBitSetDeserialization": [833, 846], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [833, 846], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [833, 846], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [833, 846], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [833], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch": [833], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [833, 846], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonArrayDeserialization": [833], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigDecimalTypeAdapter": [833], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [833, 846], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [833, 846], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [833, 846], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [833, 846], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [833, 846], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [833, 846], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [833, 846], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [833, 846], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [833, 846], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [833, 846], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [833, 846], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [833, 846], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [833, 846], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [833, 846], "com.google.gson.functional.CollectionTest::testStack": [833, 846], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [833, 846], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [833, 846], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [833, 846], "com.google.gson.functional.CollectionTest::testVector": [833, 846], "com.google.gson.functional.CollectionTest::testPriorityQueue": [833, 846], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [833, 846], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [833, 846], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [833, 846], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [833, 846], "com.google.gson.functional.CollectionTest::testSetDeserialization": [833, 846], "com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization": [833, 846], "com.google.gson.functional.CollectionTest::testQueueDeserialization": [833, 846], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [833, 846], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [833, 846], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [833, 846], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [833, 846], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [833, 846], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [833, 846], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [833, 846], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [833, 846], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [833, 846], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [833, 846], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [833, 846], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [833, 846]}, "com.google.gson.JsonArray": {"com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [40, 108, 182], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [40, 108, 182], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [40, 108, 182]}, "com.google.gson.reflect.TypeToken": {"com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassDeserialization": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [72, 73, 74, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [72, 73, 74, 94, 101, 280, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [72, 73, 74, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [72, 73, 74, 94, 101, 280, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [72, 73, 74, 94, 101, 280, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [72, 73, 74, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [72, 73, 74, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [72, 73, 74, 94, 101, 280, 296, 303], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.PrimitiveTest::testStringsAsBooleans": [62, 82, 86, 87, 101], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.MapTest::testMapDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedIntegerKeys": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testStringKeyDeserialization": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testSortedMap": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testSerializeMapOfMaps": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithLongKeys": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedLongKeys": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testConcurrentMap": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testBooleanKeyDeserialization": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testDeerializeMapOfMaps": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.MapTest::testNumberKeyDeserialization": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testHashMapDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testComplexKeysSerialization": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testConcurrentHashMap": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testIncorrectJsonAdapterType": [72, 73, 74, 94, 101, 280, 296, 303], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicIntegerArray": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArray": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArrayWithStringSerializationPolicy": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicBoolean": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicInteger": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLong": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserialization": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.EnumTest::testEnumSubclass": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.EnumTest::testEnumSet": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonNullDeserialization": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigIntegerTypeAdapter": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonObjectDeserialization": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonPrimitiveDeserialization": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testBitSetDeserialization": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [72, 73, 74, 94, 280, 296, 303], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonArrayDeserialization": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigDecimalTypeAdapter": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CollectionTest::testCollectionOfObjectWithNullSerialization": [62, 82, 86, 87, 101], "com.google.gson.functional.CollectionTest::testStack": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CollectionTest::testCollectionOfObjectSerialization": [62, 82, 86, 87, 101], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testUserCollectionTypeAdapter": [62, 82, 86, 87, 101], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testVector": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testPriorityQueue": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testSetDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testQueueDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.ObjectTypeAdapterTest::testSerializeNullValue": [72, 73, 74, 94, 280, 303], "com.google.gson.ObjectTypeAdapterTest::testSerializeObject": [72, 73, 74, 94, 280, 303], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [72, 73, 74, 94, 280, 303], "com.google.gson.ObjectTypeAdapterTest::testSerialize": [72, 73, 74, 94, 280, 303], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.MixedStreamTest::testReadNulls": [72, 296], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [72, 73, 74, 94, 101, 280, 284, 296]}, "com.google.gson.TypeAdapter": {"com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [259, 260, 273], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [259, 260, 273], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [215, 221], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [259, 260, 273], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [259, 260, 273], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [215, 221], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [259, 260, 273], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [215, 221], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [215, 221], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [259, 260, 273], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [259, 260, 273], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [215, 221], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [215, 221], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [284, 285], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [215, 221], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [215, 221], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [234], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [186], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [186], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [186], "com.google.gson.ObjectTypeAdapterTest::testSerializeNullValue": [215, 221], "com.google.gson.ObjectTypeAdapterTest::testSerializeObject": [215, 221], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [259, 260, 273], "com.google.gson.ObjectTypeAdapterTest::testSerialize": [215, 221], "com.google.gson.DefaultDateTypeAdapterTest::testDateSerialization": [215, 221], "com.google.gson.DefaultDateTypeAdapterTest::testNullValue": [215, 221, 259, 260, 273], "com.google.gson.DefaultDateTypeAdapterTest::testDatePattern": [215, 221], "com.google.gson.DefaultDateTypeAdapterTest::testUnexpectedToken": [259, 260, 273]}, "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory": {"com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [44, 45, 46, 47], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [44, 45, 46, 47], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [44, 45, 46, 47], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [44, 45, 46, 47], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [44, 45, 46, 47], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [44, 45, 46, 47], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [44, 45, 46, 47], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [44, 45, 46, 47], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [44, 45, 46, 47], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [44, 45, 46, 47], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [44, 45, 46, 47], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [44, 45, 46, 47], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [44, 45, 46, 47], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [44, 45, 46, 47], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [44, 45, 46, 47], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [44, 45, 46, 47], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [44, 45, 46, 47], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [44, 45, 46, 47], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [44, 45, 46, 47], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [44, 45, 46, 47], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [44, 45, 46, 47], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [44, 45, 46, 47], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [44, 45, 46, 47], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [44, 45, 46, 47], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [44, 45, 46, 47], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [44, 45, 46, 47], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [44, 45, 46, 47], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [44, 45, 46, 47], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [44, 45, 46, 47], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [44, 45, 46, 47], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [44, 45, 46, 47], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationWorksForParameterizedType": [44, 45, 46, 47], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [44, 45, 46, 47], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [44, 45, 46, 47], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [44, 45, 46, 47], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [44, 45, 46, 47], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [44, 45, 46, 47], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testPrimitiveFieldAnnotationTakesPrecedenceOverDefault": [44, 45, 46, 47], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [38, 44, 45, 46, 49, 55, 58, 59, 77, 78, 81], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [38, 44, 45, 46, 49, 55, 58, 60, 61, 77, 78, 81], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testIncorrectJsonAdapterType": [38, 44, 45, 46, 49, 55, 58, 60, 62, 71], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [38, 44, 45, 46, 49, 55, 58, 59, 77, 78, 81], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [44, 45, 46, 47], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [44, 45, 46, 47], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [44, 45, 46, 47], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [44, 45, 46, 47], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [44, 45, 46, 47], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [44, 45, 46, 47], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [44, 45, 46, 47], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [44, 45, 46, 47], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [44, 45, 46, 47], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [44, 45, 46, 47], "com.google.gson.functional.EnumTest::testEnumSubclass": [44, 45, 46, 47], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [44, 45, 46, 47], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [44, 45, 46, 47], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [44, 45, 46, 47], "com.google.gson.functional.EnumTest::testEnumSet": [44, 45, 46, 47], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [44, 45, 46, 47], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [44, 45, 46, 47], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [44, 45, 46, 47], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [44, 45, 46, 47], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [44, 45, 46, 47], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [44, 45, 46, 47], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [44, 45, 46, 47], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [44, 45, 46, 47], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [44, 45, 46, 47], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [44, 45, 46, 47], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [44, 45, 46, 47], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [44, 45, 46, 47], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [44, 45, 46, 47], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [44, 45, 46, 47], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [44, 45, 46, 47], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [44, 45, 46, 47], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [44, 45, 46, 47], "com.google.gson.functional.CollectionTest::testSetDeserialization": [44, 45, 46, 47], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [44, 45, 46, 47], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [44, 45, 46, 47]}}