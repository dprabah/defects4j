{"com.google.gson.JsonParseException": {"com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch": [42]}, "com.google.gson.stream.JsonReader": {"com.google.gson.stream.JsonReaderTest::testStringNullIsNotNull": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 553, 554, 574, 576, 871, 872, 873, 875, 879, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403], "com.google.gson.stream.JsonReaderTest::testVeryLongUnquotedLiteral": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 810, 811, 812, 815, 816, 835, 1034, 1035, 1039, 1040, 1063, 1064, 1072, 1073, 1076, 1077, 1078, 1084, 1088, 1091, 1273, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testIntegersWithFractionalPartSpecified": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 468, 469, 471, 472, 482, 520, 536, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 673, 674, 702, 703, 709, 710, 715, 717, 718, 726, 727, 735, 739, 741, 742, 749, 767, 894, 895, 896, 899, 905, 906, 907, 918, 924, 926, 940, 941, 942, 945, 951, 952, 970, 971, 979, 1162, 1163, 1164, 1168, 1179, 1180, 1181, 1198, 1199, 1205, 1207, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403], "com.google.gson.stream.JsonReaderTest::testVeryLongUnterminatedString": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 427, 428, 429, 466, 467, 468, 469, 471, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 810, 811, 812, 815, 816, 833, 835, 1034, 1035, 1039, 1040, 1063, 1064, 1072, 1073, 1076, 1077, 1078, 1084, 1088, 1090, 1091, 1273, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1406, 1407, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testPeekMuchLargerThanLongMinValue": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 676, 678, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 739, 742, 749, 767, 894, 899, 918, 926, 940, 945, 951, 952, 969, 970, 971, 972, 973, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testStrictUnnecessaryArraySeparatorsWithSkipValue": [230, 238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 468, 469, 471, 472, 482, 520, 536, 553, 554, 556, 563, 564, 576, 580, 583, 584, 585, 603, 607, 608, 610, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 846, 847, 848, 850, 851, 853, 1228, 1229, 1230, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testStringWithLeadingSlash": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 589, 593, 594, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 660, 673, 674, 709, 710, 735, 739, 744, 749, 767, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1356, 1357, 1367, 1368, 1388, 1566, 1575, 1576, 1578], "com.google.gson.stream.JsonReaderTest::testSkipArray": [238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 385, 397, 398, 399, 401, 402, 405, 427, 428, 429, 432, 459, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 540, 541, 542, 543, 544, 553, 554, 574, 576, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 736, 737, 738, 749, 767, 781, 782, 783, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1096, 1098, 1099, 1101, 1102, 1103, 1104, 1162, 1163, 1164, 1168, 1169, 1174, 1176, 1226, 1228, 1229, 1230, 1233, 1234, 1235, 1236, 1239, 1240, 1242, 1245, 1247, 1249, 1250, 1254, 1255, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410], "com.google.gson.stream.JsonReaderTest::testStringAsNumberWithNonDigitExponent": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 673, 674, 695, 709, 710, 713, 715, 716, 717, 718, 719, 722, 725, 749, 769, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testTopLevelValueTypes": [238, 239, 240, 245, 269, 270, 272, 293, 427, 428, 429, 432, 449, 459, 466, 467, 469, 482, 520, 536, 540, 541, 542, 543, 544, 553, 554, 574, 580, 583, 584, 585, 588, 589, 590, 603, 607, 608, 610, 611, 612, 614, 615, 616, 618, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 652, 653, 654, 656, 659, 660, 661, 666, 673, 674, 702, 703, 709, 715, 716, 717, 718, 719, 722, 723, 725, 726, 727, 735, 736, 737, 738, 739, 741, 742, 810, 811, 812, 815, 817, 819, 820, 833, 835, 846, 847, 848, 850, 851, 853, 854, 855, 857, 871, 875, 876, 894, 895, 896, 899, 905, 906, 907, 918, 924, 926, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1163, 1164, 1168, 1169, 1174, 1176, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410], "com.google.gson.stream.JsonReaderTest::testLenientUnquotedStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 810, 811, 812, 815, 816, 835, 1034, 1035, 1039, 1040, 1084, 1085, 1091, 1273, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.stream.JsonReaderTest::testSkipObject": [238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 385, 397, 398, 399, 401, 402, 405, 427, 428, 429, 432, 459, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 506, 507, 520, 521, 523, 536, 540, 541, 542, 543, 544, 553, 554, 556, 557, 574, 576, 578, 580, 583, 603, 607, 608, 624, 625, 626, 629, 630, 635, 641, 749, 767, 781, 782, 783, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1096, 1098, 1099, 1101, 1102, 1103, 1104, 1226, 1228, 1229, 1230, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1249, 1250, 1254, 1255, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410], "com.google.gson.stream.JsonReaderTest::testUnterminatedObject": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 380, 381, 383, 384, 385, 427, 428, 429, 466, 467, 469, 482, 483, 485, 486, 487, 495, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 781, 782, 783, 786, 788, 790, 791, 796, 798, 810, 811, 812, 815, 817, 819, 820, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1566, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testStrictSingleQuotedNamesWithSkipValue": [230, 238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 385, 466, 467, 469, 482, 485, 498, 499, 503, 520, 536, 553, 554, 578, 1228, 1229, 1230, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testLenientQuotedNonFiniteDoubles": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 574, 576, 894, 895, 896, 899, 905, 908, 909, 918, 924, 926, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testLenientPartialNonExecutePrefix": [238, 239, 240, 245, 269, 270, 272, 293, 326, 466, 467, 469, 482, 520, 536, 537, 538, 540, 541, 542, 543, 547, 553, 554, 556, 563, 568, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 810, 811, 812, 815, 816, 833, 835, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1566, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testEmptyString": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 379, 380, 381, 466, 467, 469, 482, 520, 536, 553, 1282, 1284, 1288, 1293, 1307, 1334, 1335, 1337, 1338, 1339, 1406, 1407], "com.google.gson.stream.JsonReaderTest::testCharacterUnescaping": [0], "com.google.gson.stream.JsonReaderTest::testSkipTopLevelObject": [238, 239, 240, 245, 269, 270, 272, 293, 427, 428, 429, 432, 459, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 540, 541, 542, 543, 544, 553, 554, 574, 576, 578, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 749, 767, 1096, 1098, 1099, 1101, 1102, 1103, 1104, 1226, 1228, 1229, 1230, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1247, 1249, 1250, 1254, 1255, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410], "com.google.gson.stream.JsonReaderTest::testReadEmptyObject": [238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 459, 466, 467, 469, 482, 485, 498, 499, 506, 507, 520, 536, 540, 541, 542, 543, 544, 553, 554, 578, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410], "com.google.gson.stream.JsonReaderTest::testStrictSingleQuotedNames": [230, 238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 385, 466, 467, 469, 482, 485, 498, 499, 503, 520, 536, 553, 554, 578, 781, 782, 783, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testLenientSemicolonDelimitedArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 585, 603, 607, 608, 610, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 846, 847, 848, 850, 851, 853, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testStringAsNumberWithDigitAndNonDigitExponent": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 673, 674, 695, 696, 709, 710, 713, 715, 716, 717, 718, 719, 722, 725, 749, 769, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testNulls": [290, 291], "com.google.gson.stream.JsonReaderTest::testStrictSingleQuotedStringsWithSkipValue": [230, 238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 553, 554, 571, 576, 1228, 1229, 1230, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testReadArray": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 360, 361, 362, 364, 365, 367, 427, 428, 429, 432, 459, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 540, 541, 542, 543, 544, 553, 554, 576, 580, 583, 584, 585, 603, 607, 608, 610, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 846, 847, 848, 850, 851, 853, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410], "com.google.gson.stream.JsonReaderTest::testUnescapingInvalidCharacters": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 553, 554, 574, 576, 810, 811, 812, 815, 817, 819, 820, 994, 997, 998, 1001, 1002, 1004, 1008, 1009, 1011, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1509, 1510, 1517, 1518, 1520, 1522, 1524, 1527], "com.google.gson.stream.JsonReaderTest::testUnescapingTruncatedCharacters": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 553, 554, 574, 576, 810, 811, 812, 815, 817, 819, 820, 994, 997, 998, 1001, 1002, 1004, 1008, 1009, 1011, 1273, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1509, 1510, 1512, 1513, 1566], "com.google.gson.stream.JsonReaderTest::testBooleans": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 360, 361, 362, 364, 365, 367, 427, 428, 429, 432, 459, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 540, 541, 542, 543, 544, 553, 554, 576, 580, 583, 584, 585, 603, 607, 608, 610, 611, 612, 614, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 846, 847, 848, 850, 851, 853, 854, 855, 857, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410], "com.google.gson.stream.JsonReaderTest::testDoubles": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 360, 361, 362, 364, 365, 367, 427, 428, 429, 432, 459, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 540, 541, 542, 543, 544, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 673, 674, 676, 678, 680, 681, 695, 696, 702, 703, 709, 710, 715, 717, 718, 726, 727, 728, 729, 735, 739, 741, 742, 749, 767, 894, 895, 896, 899, 905, 906, 907, 918, 924, 926, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410], "com.google.gson.stream.JsonReaderTest::testStrictQuotedNonFiniteDoubles": [230, 238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 553, 554, 574, 576, 894, 895, 896, 899, 905, 908, 909, 918, 919, 920, 994, 997, 998, 1001, 1002, 1004, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403], "com.google.gson.stream.JsonReaderTest::testSkipDouble": [238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 385, 397, 398, 399, 401, 402, 405, 427, 428, 429, 432, 459, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 540, 541, 542, 543, 544, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 673, 674, 676, 678, 680, 681, 695, 696, 702, 703, 709, 710, 715, 716, 717, 718, 719, 722, 725, 726, 727, 728, 729, 735, 739, 741, 742, 749, 767, 781, 782, 783, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1228, 1229, 1230, 1233, 1236, 1239, 1242, 1245, 1247, 1249, 1251, 1252, 1254, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410], "com.google.gson.stream.JsonReaderTest::testPrematureEndOfInput": [238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 385, 466, 467, 469, 482, 483, 485, 486, 487, 498, 499, 501, 520, 521, 523, 536, 553, 554, 578, 580, 583, 584, 585, 603, 607, 608, 610, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 781, 782, 783, 786, 788, 790, 791, 796, 798, 846, 847, 848, 850, 851, 853, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1406, 1407], "com.google.gson.stream.JsonReaderTest::testUnescapingTruncatedSequence": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 553, 554, 574, 576, 810, 811, 812, 815, 817, 819, 820, 994, 997, 998, 1001, 1002, 1004, 1008, 1009, 1011, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1505, 1506, 1566], "com.google.gson.stream.JsonReaderTest::testStrictVeryLongNumber": [230, 238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 553, 554, 576, 580, 583, 584, 588, 589, 597, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 661, 664, 666, 669, 670, 673, 674, 702, 703, 709, 715, 717, 718, 726, 727, 894, 895, 896, 1273, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testReadObject": [238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 385, 397, 398, 399, 401, 402, 405, 427, 428, 429, 432, 459, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 540, 541, 542, 543, 544, 553, 554, 574, 578, 781, 782, 783, 786, 788, 790, 791, 796, 798, 810, 811, 812, 815, 817, 819, 820, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410], "com.google.gson.stream.JsonReaderTest::testLenientSingleQuotedStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 576, 810, 811, 812, 815, 817, 818, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testNullLiteralIsNotAString": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 553, 554, 576, 580, 583, 584, 585, 603, 607, 611, 615, 616, 618, 624, 625, 626, 629, 630, 635, 642, 749, 767, 810, 811, 812, 815, 817, 819, 821, 824, 826, 830, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403], "com.google.gson.stream.JsonReaderTest::testMissingValue": [238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 385, 466, 467, 469, 482, 483, 485, 498, 499, 501, 520, 523, 536, 553, 554, 578, 580, 583, 584, 588, 589, 593, 594, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 660, 673, 674, 709, 710, 735, 739, 744, 749, 767, 781, 782, 783, 786, 788, 790, 791, 796, 798, 810, 811, 812, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1566], "com.google.gson.stream.JsonReaderTest::testSkipTopLevelQuotedString": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 459, 466, 467, 469, 482, 520, 536, 537, 538, 540, 541, 542, 543, 544, 553, 554, 574, 1096, 1098, 1099, 1101, 1102, 1103, 1104, 1116, 1117, 1228, 1229, 1230, 1233, 1236, 1239, 1242, 1245, 1247, 1249, 1250, 1254, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testStrictNameValueSeparator": [230, 238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 385, 466, 467, 469, 482, 483, 485, 498, 499, 501, 520, 523, 524, 528, 536, 553, 554, 578, 781, 782, 783, 786, 788, 790, 791, 796, 798, 846, 847, 848, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testStrictUnquotedNames": [230, 238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 385, 466, 467, 469, 482, 485, 498, 499, 512, 520, 536, 553, 554, 578, 781, 782, 783, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testStrictMultipleTopLevelValuesWithSkipValue": [230, 238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 360, 361, 362, 364, 365, 367, 466, 467, 469, 482, 520, 536, 540, 541, 542, 543, 546, 553, 554, 556, 557, 576, 1228, 1229, 1230, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testLenientUnquotedNames": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 380, 381, 383, 384, 385, 466, 467, 469, 482, 485, 498, 499, 513, 514, 515, 520, 536, 537, 538, 553, 554, 578, 749, 769, 781, 782, 783, 786, 787, 798, 1034, 1035, 1039, 1040, 1084, 1085, 1091, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testStrictExtraCommasInMaps": [238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 385, 427, 428, 429, 466, 467, 469, 482, 483, 485, 486, 487, 498, 499, 501, 506, 509, 520, 521, 523, 536, 553, 554, 574, 578, 781, 782, 783, 786, 788, 790, 791, 796, 798, 810, 811, 812, 815, 817, 819, 820, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1566], "com.google.gson.stream.JsonReaderTest::testLenientNonExecutePrefix": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 360, 361, 362, 364, 365, 367, 427, 428, 429, 432, 459, 466, 467, 469, 482, 520, 536, 537, 538, 540, 541, 542, 543, 544, 553, 554, 556, 557, 576, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410, 1575, 1576, 1578, 1582, 1583, 1589], "com.google.gson.stream.JsonReaderTest::testVeryLongUnquotedString": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 810, 811, 812, 815, 816, 835, 1034, 1035, 1039, 1040, 1063, 1064, 1072, 1073, 1076, 1077, 1078, 1084, 1088, 1091, 1273, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testSkipArrayAfterPeek": [238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 385, 397, 398, 399, 401, 402, 405, 427, 428, 429, 432, 438, 459, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 540, 541, 542, 543, 544, 553, 554, 574, 576, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 736, 737, 738, 749, 767, 781, 782, 783, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1096, 1098, 1099, 1101, 1102, 1103, 1104, 1162, 1163, 1164, 1168, 1169, 1174, 1176, 1226, 1228, 1229, 1230, 1233, 1234, 1235, 1236, 1239, 1240, 1242, 1245, 1247, 1249, 1250, 1254, 1255, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410], "com.google.gson.stream.JsonReaderTest::testCommentsInStringValue": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 379, 380, 381, 383, 384, 385, 466, 467, 469, 482, 483, 485, 498, 499, 501, 520, 523, 536, 553, 554, 574, 576, 578, 781, 782, 783, 786, 788, 790, 791, 796, 798, 810, 811, 812, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403], "com.google.gson.stream.JsonReaderTest::testStrictUnnecessaryArraySeparators": [230, 238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 468, 469, 471, 472, 482, 520, 536, 553, 554, 556, 563, 564, 576, 580, 583, 584, 585, 603, 607, 608, 610, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 846, 847, 848, 850, 851, 853, 871, 872, 873, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testLongs": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 360, 361, 362, 364, 365, 367, 427, 428, 429, 432, 459, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 540, 541, 542, 543, 544, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 673, 674, 676, 677, 678, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 736, 737, 738, 749, 767, 894, 895, 896, 899, 900, 902, 940, 941, 942, 945, 946, 948, 1162, 1163, 1164, 1168, 1169, 1170, 1171, 1174, 1176, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410], "com.google.gson.stream.JsonReaderTest::testLenientNonExecutePrefixWithLeadingWhitespace": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 360, 361, 362, 364, 365, 367, 427, 428, 429, 432, 459, 466, 467, 469, 482, 520, 536, 537, 538, 540, 541, 542, 543, 544, 553, 554, 556, 557, 576, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1343, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410, 1575, 1576, 1578, 1582, 1583, 1589], "com.google.gson.stream.JsonReaderTest::testUnterminatedStringFailure": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 576, 810, 815, 817, 819, 820, 994, 997, 998, 1001, 1002, 1004, 1022, 1023, 1024, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1566, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testHelloWorld": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 360, 361, 362, 364, 365, 367, 379, 380, 381, 383, 384, 385, 397, 398, 399, 401, 402, 405, 427, 428, 429, 432, 459, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 540, 541, 542, 543, 544, 553, 554, 574, 576, 578, 580, 583, 584, 585, 603, 607, 608, 610, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 781, 782, 783, 786, 788, 790, 791, 796, 798, 810, 811, 812, 815, 817, 819, 820, 833, 835, 846, 847, 848, 850, 851, 853, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410], "com.google.gson.stream.JsonReaderTest::testStrictUnquotedStrings": [230, 238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 553, 554, 576, 580, 583, 584, 588, 589, 597, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 810, 811, 812, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testLenientVeryLongNumber": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 360, 361, 362, 364, 365, 367, 427, 428, 429, 432, 454, 459, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 540, 541, 542, 543, 544, 553, 554, 576, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 661, 664, 666, 669, 670, 673, 674, 702, 703, 709, 715, 717, 718, 726, 727, 894, 899, 905, 908, 910, 911, 918, 924, 926, 1034, 1035, 1039, 1040, 1063, 1072, 1073, 1076, 1077, 1078, 1084, 1088, 1090, 1091, 1273, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testStrictSemicolonDelimitedNameValuePairWithSkipValue": [230, 238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 385, 466, 467, 469, 482, 483, 485, 498, 499, 501, 520, 523, 536, 553, 554, 578, 580, 583, 603, 607, 608, 624, 625, 626, 629, 630, 635, 749, 755, 781, 782, 783, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1228, 1229, 1230, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testLenientExtraCommasInMaps": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 380, 381, 383, 384, 385, 427, 428, 429, 466, 467, 469, 482, 483, 485, 486, 487, 498, 499, 501, 506, 509, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 781, 782, 783, 786, 788, 790, 791, 796, 798, 810, 811, 812, 815, 817, 819, 820, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1566, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testStrictNonExecutePrefix": [230, 238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 466, 467, 469, 482, 520, 536, 553, 554, 580, 583, 584, 588, 589, 597, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testVeryLongQuotedString": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 553, 554, 574, 576, 810, 811, 812, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1022, 1023, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403], "com.google.gson.stream.JsonReaderTest::testStrictNonExecutePrefixWithSkipValue": [230, 238, 239, 240, 245, 269, 270, 272, 293, 466, 467, 469, 482, 520, 536, 553, 554, 580, 583, 584, 588, 589, 597, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 1228, 1229, 1230, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testLenientComments": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 585, 603, 607, 608, 610, 624, 625, 626, 629, 630, 635, 642, 749, 767, 846, 847, 848, 850, 853, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1356, 1357, 1367, 1368, 1371, 1372, 1375, 1376, 1381, 1382, 1383, 1384, 1390, 1391, 1398, 1399, 1400, 1402, 1403, 1426, 1427, 1428, 1432, 1443, 1444, 1449, 1450, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testPeekingUnquotedStringsPrefixedWithBooleans": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 598, 603, 607, 608, 624, 625, 626, 629, 630, 635, 637, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 810, 815, 816, 835, 846, 850, 854, 859, 1034, 1035, 1039, 1040, 1084, 1085, 1091, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testDeeplyNestedArrays": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 360, 361, 362, 364, 365, 367, 427, 428, 429, 432, 459, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 541, 542, 543, 544, 553, 554, 556, 557, 576, 1262, 1263, 1269, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410, 1470, 1492], "com.google.gson.stream.JsonReaderTest::testStrictUnquotedNamesWithSkipValue": [230, 238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 385, 466, 467, 469, 482, 485, 498, 499, 512, 520, 536, 553, 554, 578, 1228, 1229, 1230, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testStrictSemicolonDelimitedArray": [230, 238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 553, 554, 576, 580, 583, 603, 607, 608, 624, 625, 626, 629, 630, 635, 749, 755, 846, 847, 848, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testStrictComments": [230, 238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 553, 554, 576, 846, 847, 848, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1357, 1366, 1390, 1397, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testStrictNonFiniteDoublesWithSkipValue": [230, 238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 553, 554, 576, 580, 583, 584, 588, 589, 597, 603, 607, 611, 615, 616, 617, 624, 625, 626, 629, 630, 631, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 1228, 1229, 1230, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testPeekLongMaxValue": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 736, 738, 749, 767, 940, 945, 948, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testLenientSemicolonDelimitedNameValuePair": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 380, 381, 383, 384, 385, 466, 467, 469, 482, 483, 485, 486, 487, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 585, 603, 607, 608, 610, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 781, 782, 783, 786, 788, 790, 791, 796, 798, 846, 847, 848, 850, 851, 853, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testTopLevelValueTypeWithSkipValue": [238, 239, 240, 245, 269, 270, 272, 293, 427, 428, 429, 432, 459, 466, 467, 469, 482, 520, 536, 540, 541, 542, 543, 544, 553, 554, 580, 583, 603, 607, 608, 624, 625, 626, 629, 630, 635, 641, 1228, 1229, 1230, 1254, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410], "com.google.gson.stream.JsonReaderTest::testLongLargerThanMinLongThatWrapsAround": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 676, 678, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 739, 742, 749, 767, 940, 945, 951, 952, 970, 971, 972, 973, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testLenientNonFiniteDoubles": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 616, 617, 620, 624, 625, 626, 629, 630, 631, 647, 648, 649, 654, 656, 659, 660, 673, 674, 676, 709, 710, 713, 749, 769, 894, 895, 896, 899, 905, 908, 910, 911, 918, 924, 926, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testFailWithPositionDeepPath": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 379, 380, 381, 383, 384, 385, 427, 428, 429, 466, 467, 468, 469, 471, 472, 482, 483, 485, 498, 499, 501, 520, 523, 536, 553, 554, 576, 578, 580, 583, 584, 588, 589, 590, 593, 594, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 739, 744, 749, 767, 781, 782, 783, 786, 788, 790, 791, 796, 994, 997, 998, 1001, 1002, 1004, 1005, 1162, 1163, 1164, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1566], "com.google.gson.stream.JsonReaderTest::testSkipInteger": [238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 385, 397, 398, 399, 401, 402, 405, 427, 428, 429, 432, 459, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 540, 541, 542, 543, 544, 553, 554, 578, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 676, 678, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 749, 767, 781, 782, 783, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1228, 1229, 1230, 1254, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410], "com.google.gson.stream.JsonReaderTest::testStrictNonFiniteDoubles": [230, 238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 553, 554, 576, 580, 583, 584, 588, 589, 597, 603, 607, 611, 615, 616, 617, 624, 625, 626, 629, 630, 631, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 894, 895, 896, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testMixedCaseLiterals": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 360, 361, 362, 364, 365, 367, 427, 428, 429, 432, 459, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 540, 541, 542, 543, 544, 553, 554, 576, 580, 583, 584, 585, 603, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 846, 847, 848, 850, 851, 853, 854, 855, 857, 871, 872, 873, 875, 876, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410], "com.google.gson.stream.JsonReaderTest::testStrictSemicolonDelimitedArrayWithSkipValue": [230, 238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 553, 554, 576, 580, 583, 603, 607, 608, 624, 625, 626, 629, 630, 635, 749, 755, 1228, 1229, 1230, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testLenientMultipleTopLevelValues": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 360, 361, 362, 364, 365, 367, 379, 380, 381, 383, 384, 385, 397, 398, 399, 401, 402, 405, 427, 428, 429, 432, 459, 466, 467, 469, 482, 485, 498, 499, 506, 507, 520, 536, 537, 538, 540, 541, 542, 543, 544, 547, 553, 554, 556, 557, 576, 578, 580, 583, 584, 585, 603, 607, 608, 610, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 846, 847, 848, 850, 851, 853, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testNextFailuresDoNotAdvance": [238, 239, 240, 245, 269, 270, 272, 293, 341, 345, 350, 360, 364, 369, 379, 380, 381, 383, 384, 385, 387, 397, 401, 402, 405, 407, 427, 428, 429, 432, 459, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 540, 541, 542, 543, 544, 553, 554, 578, 580, 583, 584, 585, 603, 607, 608, 610, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 781, 782, 783, 786, 788, 790, 791, 793, 796, 798, 810, 811, 812, 815, 817, 819, 821, 824, 826, 830, 846, 850, 851, 853, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410], "com.google.gson.stream.JsonReaderTest::testStrictSingleQuotedStrings": [230, 238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 553, 554, 571, 576, 810, 811, 812, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testStringEndingInSlash": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 589, 593, 594, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 660, 673, 674, 709, 710, 735, 739, 744, 749, 767, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1343, 1346, 1347, 1351, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1566, 1575, 1576, 1578], "com.google.gson.stream.JsonReaderTest::testDeeplyNestedObjects": [238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 385, 397, 398, 399, 401, 402, 405, 427, 428, 429, 432, 459, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 541, 542, 543, 544, 553, 554, 578, 580, 583, 584, 585, 603, 607, 608, 610, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 781, 782, 783, 786, 788, 790, 791, 796, 798, 846, 847, 848, 850, 851, 853, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1262, 1263, 1269, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410, 1470, 1492], "com.google.gson.stream.JsonReaderTest::testQuotedNumberWithEscape": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 576, 994, 997, 998, 1001, 1002, 1004, 1007, 1162, 1168, 1179, 1182, 1183, 1185, 1188, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testPeekingUnquotedStringsPrefixedWithIntegers": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 673, 674, 695, 696, 702, 703, 709, 710, 713, 715, 716, 717, 718, 719, 726, 727, 749, 769, 810, 815, 816, 835, 1034, 1035, 1039, 1040, 1084, 1085, 1091, 1162, 1168, 1179, 1182, 1193, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testStrictUnquotedStringsWithSkipValue": [230, 238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 553, 554, 576, 580, 583, 584, 588, 589, 597, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 1228, 1229, 1230, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testLenientUnnecessaryArraySeparators": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 563, 565, 566, 576, 580, 583, 584, 585, 603, 607, 608, 610, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 846, 847, 848, 850, 851, 853, 871, 872, 873, 875, 876, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testPeekLongMinValue": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 676, 677, 678, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 736, 738, 749, 767, 940, 945, 948, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testReadEmptyArray": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 360, 364, 365, 367, 416, 417, 418, 420, 427, 428, 429, 432, 459, 466, 467, 469, 482, 520, 536, 540, 541, 542, 543, 544, 553, 554, 556, 557, 576, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410], "com.google.gson.stream.JsonReaderTest::testStrictNameValueSeparatorWithSkipValue": [230, 238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 385, 466, 467, 469, 482, 483, 485, 498, 499, 501, 520, 523, 524, 528, 536, 553, 554, 578, 781, 782, 783, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1228, 1229, 1230, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testLongLargerThanMaxLongThatWrapsAround": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 739, 742, 749, 767, 940, 945, 951, 952, 970, 971, 972, 973, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testLenientSingleQuotedNames": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 380, 381, 383, 384, 385, 466, 467, 469, 482, 485, 498, 499, 504, 520, 536, 537, 538, 553, 554, 578, 781, 782, 783, 786, 788, 789, 798, 994, 997, 998, 1001, 1002, 1004, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testStringAsNumberWithTruncatedExponent": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 673, 674, 695, 696, 709, 710, 715, 716, 717, 718, 719, 722, 725, 735, 739, 744, 749, 767, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testSkipTopLevelUnquotedString": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 459, 466, 467, 469, 482, 520, 536, 537, 538, 540, 541, 542, 543, 544, 553, 554, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 1123, 1124, 1125, 1147, 1148, 1228, 1229, 1230, 1233, 1236, 1239, 1242, 1245, 1246, 1254, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testStrictCommentsWithSkipValue": [230, 238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 553, 554, 576, 1228, 1229, 1230, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1357, 1366, 1390, 1397, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testIntegerMismatchFailuresDoNotAdvance": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 469, 482, 520, 536, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 673, 674, 702, 703, 709, 710, 715, 717, 718, 726, 727, 735, 739, 742, 749, 767, 894, 899, 918, 926, 1162, 1163, 1164, 1168, 1179, 1180, 1197, 1198, 1199, 1200, 1201, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403], "com.google.gson.stream.JsonReaderTest::testSkipObjectAfterPeek": [238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 385, 397, 398, 399, 401, 402, 405, 427, 428, 429, 432, 434, 459, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 540, 541, 542, 543, 544, 553, 554, 578, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 749, 767, 781, 782, 783, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1096, 1098, 1099, 1101, 1102, 1103, 1104, 1226, 1228, 1229, 1230, 1233, 1236, 1237, 1238, 1239, 1242, 1243, 1245, 1247, 1249, 1250, 1254, 1255, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410], "com.google.gson.stream.JsonReaderTest::testPrematurelyClosed": [269, 379, 380, 381, 466, 467, 469, 482, 520, 536, 541, 549, 550, 781, 782, 783, 846, 847, 848, 1214, 1215, 1216], "com.google.gson.stream.JsonReaderTest::testBomForbiddenAsOtherCharacterInDocument": [230, 238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 360, 361, 362, 466, 467, 469, 482, 520, 536, 553, 554, 576, 580, 583, 584, 588, 589, 597, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testDocumentWithCommentEndingInSlash": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 589, 593, 594, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 660, 673, 674, 709, 710, 735, 739, 744, 749, 767, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1343, 1346, 1347, 1351, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1367, 1368, 1371, 1372, 1375, 1376, 1443, 1444, 1449, 1450, 1566, 1575, 1576, 1578], "com.google.gson.stream.JsonReaderTest::testStrictMultipleTopLevelValues": [230, 238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 360, 361, 362, 364, 365, 367, 427, 428, 429, 466, 467, 469, 482, 520, 536, 540, 541, 542, 543, 546, 553, 554, 556, 557, 576, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testLenientNameValueSeparator": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 380, 381, 383, 384, 385, 466, 467, 469, 482, 483, 485, 498, 499, 501, 520, 523, 524, 529, 530, 536, 537, 538, 553, 554, 578, 580, 583, 584, 585, 603, 607, 608, 610, 624, 625, 626, 629, 630, 635, 642, 749, 767, 781, 782, 783, 786, 788, 790, 791, 796, 798, 846, 847, 848, 850, 853, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.stream.JsonReaderTest::testStrictSemicolonDelimitedNameValuePair": [230, 238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 385, 466, 467, 469, 482, 483, 485, 498, 499, 501, 520, 523, 536, 553, 554, 578, 580, 583, 603, 607, 608, 624, 625, 626, 629, 630, 635, 749, 755, 781, 782, 783, 786, 788, 790, 791, 796, 798, 846, 847, 848, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566], "com.google.gson.stream.JsonReaderTest::testEmptyStringName": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 427, 428, 429, 432, 434, 436, 444, 447, 459, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 540, 541, 542, 543, 544, 553, 554, 578, 580, 583, 584, 585, 603, 607, 608, 610, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 781, 786, 788, 790, 791, 796, 798, 846, 850, 851, 853, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410, 1575, 1576], "com.google.gson.stream.JsonReaderPathTest::testSkipArrayElements": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 466, 467, 469, 482, 520, 536, 553, 554, 576, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1403, 1470, 1492], "com.google.gson.stream.JsonReaderPathTest::testSkipNestedStructures": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 553, 554, 576, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 749, 767, 1226, 1228, 1229, 1230, 1233, 1234, 1235, 1236, 1239, 1240, 1254, 1255, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1470, 1492], "com.google.gson.stream.JsonReaderPathTest::testArrayOfObjects": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 360, 361, 362, 364, 365, 379, 380, 381, 383, 384, 385, 397, 398, 399, 401, 402, 405, 466, 467, 468, 469, 471, 472, 474, 482, 485, 498, 499, 506, 507, 520, 536, 553, 554, 576, 578, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1470, 1492], "com.google.gson.stream.JsonReaderPathTest::testArrayOfArrays": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 360, 361, 362, 364, 365, 367, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 553, 554, 556, 557, 576, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1470, 1492], "com.google.gson.stream.JsonReaderPathTest::testMultipleTopLevelValuesInOneDocument": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 342, 343, 345, 346, 348, 360, 361, 362, 364, 365, 367, 466, 467, 469, 482, 520, 536, 537, 538, 540, 541, 542, 543, 547, 553, 554, 556, 557, 576, 1273, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1470, 1492, 1575, 1576, 1578], "com.google.gson.stream.JsonReaderPathTest::testObjectPath": [238, 239, 240, 245, 269, 270, 272, 293, 379, 383, 384, 385, 397, 401, 402, 427, 428, 429, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 553, 554, 578, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 994, 997, 998, 1001, 1002, 1004, 1005, 1162, 1168, 1174, 1216, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1470, 1492], "com.google.gson.stream.JsonReaderPathTest::testArrayPath": [238, 239, 240, 245, 269, 270, 272, 293, 341, 345, 346, 348, 360, 364, 365, 427, 428, 429, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 553, 554, 576, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 1162, 1168, 1174, 1216, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1470, 1492], "com.google.gson.stream.JsonReaderPathTest::testSkipObjectValues": [238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 466, 467, 469, 482, 520, 536, 553, 554, 578, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1403, 1470, 1492], "com.google.gson.stream.JsonReaderPathTest::testSkipObjectNames": [238, 239, 240, 245, 269, 270, 272, 293, 379, 380, 381, 383, 384, 466, 467, 469, 482, 520, 536, 553, 554, 578, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1403, 1470, 1492], "com.google.gson.stream.JsonReaderPathTest::testPath": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 360, 361, 362, 364, 365, 367, 379, 380, 381, 383, 384, 385, 397, 398, 399, 401, 402, 405, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 553, 554, 574, 576, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 608, 610, 611, 612, 614, 615, 616, 618, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 782, 783, 786, 788, 790, 791, 796, 810, 811, 812, 815, 817, 819, 820, 833, 846, 847, 848, 850, 851, 854, 855, 871, 872, 873, 875, 876, 994, 997, 998, 1001, 1002, 1004, 1005, 1162, 1163, 1164, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1470, 1492], "com.google.gson.internal.bind.JsonElementReaderTest::testArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 736, 737, 738, 749, 767, 810, 815, 817, 819, 821, 824, 825, 833, 835, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.internal.bind.JsonElementReaderTest::testWrongType": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 556, 557, 574, 576, 810, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbers": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 736, 737, 738, 749, 767, 810, 815, 817, 819, 821, 824, 825, 833, 835, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.internal.bind.JsonElementReaderTest::testObject": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 736, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 821, 824, 825, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.internal.bind.JsonElementReaderTest::testBooleans": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 447, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 585, 603, 607, 608, 610, 611, 612, 614, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 846, 850, 851, 853, 854, 857, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.internal.bind.JsonElementReaderTest::testStrictNansAndInfinities": [238, 239, 240, 245, 269, 270, 272, 293, 326, 333, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 616, 617, 620, 624, 625, 626, 629, 630, 631, 647, 648, 649, 654, 656, 659, 660, 673, 674, 676, 709, 710, 713, 749, 769, 810, 815, 816, 833, 835, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.internal.bind.JsonElementReaderTest::testLenientNansAndInfinities": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 616, 617, 620, 624, 625, 626, 629, 630, 631, 647, 648, 649, 654, 656, 659, 660, 673, 674, 676, 709, 710, 713, 749, 769, 810, 815, 816, 833, 835, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbersFromStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 574, 576, 810, 815, 817, 819, 820, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.internal.bind.JsonElementReaderTest::testSkipValue": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 556, 557, 574, 576, 578, 580, 583, 584, 585, 603, 607, 611, 615, 616, 618, 624, 625, 626, 629, 630, 635, 642, 749, 767, 781, 786, 788, 790, 791, 796, 810, 815, 817, 819, 820, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.internal.bind.JsonElementReaderTest::testStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 574, 576, 810, 815, 817, 819, 820, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.internal.bind.JsonElementReaderTest::testStringsFromNumbers": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 736, 738, 749, 767, 810, 815, 817, 819, 821, 824, 825, 835, 1273, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.internal.bind.JsonElementReaderTest::testNestedObjects": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 466, 467, 469, 482, 483, 485, 486, 487, 498, 499, 501, 506, 507, 520, 521, 523, 536, 537, 538, 553, 554, 578, 781, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1228, 1229, 1230, 1254, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1228, 1229, 1230, 1254, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 611, 612, 614, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 846, 850, 854, 855, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1228, 1229, 1230, 1254, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.UncategorizedTest::testTrailingWhitespace": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 611, 612, 614, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 846, 850, 854, 855, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 387, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 498, 499, 513, 514, 515, 520, 523, 524, 534, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 781, 786, 787, 796, 798, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1228, 1229, 1230, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1566, 1575, 1576], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 585, 603, 607, 608, 610, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 781, 786, 788, 790, 791, 796, 798, 846, 850, 851, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 447, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 576, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 611, 612, 614, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 846, 850, 854, 855, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 447, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 556, 557, 574, 576, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 608, 610, 611, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 846, 850, 851, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 576, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 810, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 589, 598, 603, 607, 611, 612, 613, 624, 625, 626, 629, 630, 631, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 589, 598, 603, 607, 611, 612, 613, 624, 625, 626, 629, 630, 631, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 589, 598, 603, 607, 611, 612, 613, 624, 625, 626, 629, 630, 631, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 589, 598, 603, 607, 611, 612, 613, 624, 625, 626, 629, 630, 631, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 506, 507, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 576, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 736, 737, 738, 749, 767, 769, 781, 786, 787, 796, 798, 810, 815, 817, 818, 819, 821, 824, 825, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 781, 786, 788, 789, 796, 798, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 781, 786, 788, 789, 796, 798, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 781, 786, 788, 789, 796, 798, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 781, 786, 788, 789, 796, 798, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.StringTest::testSingleQuoteInStringSerialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 810, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1008, 1009, 1011, 1012, 1013, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1509, 1510, 1517, 1530, 1575, 1576], "com.google.gson.functional.StringTest::testAssignmentCharDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 574, 810, 815, 817, 818, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.StringTest::testStringValueDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 810, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.StringTest::testEscapingQuotesInStringSerialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 810, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1008, 1009, 1011, 1012, 1013, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1509, 1575, 1576], "com.google.gson.functional.StringTest::testEscapedBackslashInStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 810, 815, 817, 818, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1008, 1009, 1011, 1012, 1013, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1509, 1575, 1576], "com.google.gson.functional.StringTest::testEscapedCtrlRInStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 810, 815, 817, 818, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1008, 1009, 1011, 1012, 1013, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1509, 1575, 1576], "com.google.gson.functional.StringTest::testSingleQuoteInStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 810, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.StringTest::testEscapingQuotesInStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 810, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1008, 1009, 1011, 1012, 1013, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1509, 1575, 1576], "com.google.gson.functional.StringTest::testEscapedCtrlNInStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 810, 815, 817, 818, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1008, 1009, 1011, 1012, 1013, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1509, 1575, 1576], "com.google.gson.functional.StringTest::testJavascriptKeywordsInStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 810, 815, 817, 818, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.StringTest::testStringWithEscapedSlashDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 810, 815, 817, 818, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1008, 1009, 1011, 1012, 1013, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1509, 1575, 1576, 1578], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 673, 674, 702, 703, 709, 710, 715, 716, 717, 718, 719, 726, 727, 735, 739, 741, 742, 749, 767, 810, 815, 817, 818, 833, 894, 899, 905, 907, 924, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 611, 615, 616, 618, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 654, 656, 659, 660, 673, 674, 702, 703, 709, 710, 715, 717, 718, 726, 727, 735, 739, 741, 742, 749, 767, 781, 786, 788, 789, 796, 798, 871, 875, 876, 894, 899, 905, 907, 924, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 576, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 673, 674, 702, 703, 709, 710, 715, 717, 718, 726, 727, 735, 739, 741, 742, 749, 767, 781, 786, 788, 789, 796, 798, 810, 815, 817, 818, 833, 894, 899, 905, 907, 924, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 576, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 702, 703, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 726, 727, 735, 737, 738, 739, 741, 742, 749, 767, 781, 786, 788, 789, 796, 798, 810, 815, 817, 818, 833, 894, 899, 905, 907, 924, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 673, 674, 702, 703, 709, 710, 715, 717, 718, 726, 727, 735, 739, 741, 742, 749, 767, 894, 899, 905, 907, 924, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 449, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 576, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 611, 615, 616, 618, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 654, 656, 659, 660, 673, 674, 702, 703, 709, 710, 715, 717, 718, 726, 727, 735, 739, 741, 742, 749, 767, 781, 786, 788, 789, 796, 798, 871, 875, 876, 894, 899, 905, 907, 924, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 673, 674, 702, 703, 709, 710, 715, 717, 718, 726, 727, 735, 739, 741, 742, 749, 767, 894, 899, 905, 907, 924, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 781, 786, 788, 789, 796, 798, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 781, 786, 788, 789, 796, 798, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 749, 769, 781, 786, 787, 796, 798, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1008, 1009, 1011, 1012, 1013, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1509, 1510, 1517, 1530, 1575, 1576, 1578, 1582, 1583, 1589], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 769, 781, 786, 787, 796, 798, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1008, 1009, 1011, 1012, 1013, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1509, 1510, 1517, 1530, 1575, 1576, 1578, 1582, 1583, 1589], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 769, 781, 786, 787, 796, 798, 940, 945, 946, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578, 1582, 1583, 1589], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 578, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ReadersWritersTest::testTypeMismatchThrowsJsonSyntaxExceptionForReaders": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 387, 427, 428, 429, 432, 447, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 603, 607, 608, 610, 624, 625, 626, 629, 630, 635, 642, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 540, 541, 542, 543, 547, 553, 554, 574, 810, 815, 817, 819, 820, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 611, 612, 614, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 846, 850, 854, 855, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ReadersWritersTest::testTopLevelNullObjectDeserializationWithReader": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 449, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 603, 607, 611, 615, 616, 618, 624, 625, 626, 629, 630, 635, 642, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 459, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 540, 541, 542, 543, 544, 547, 553, 554, 574, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 608, 610, 611, 612, 614, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 835, 846, 850, 851, 853, 854, 855, 857, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410, 1575, 1576], "com.google.gson.functional.ReadersWritersTest::testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 449, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 603, 607, 611, 615, 616, 618, 624, 625, 626, 629, 630, 635, 642, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.ReadersWritersTest::testTypeMismatchThrowsJsonSyntaxExceptionForStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 387, 427, 428, 429, 432, 447, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 603, 607, 608, 610, 624, 625, 626, 629, 630, 635, 642, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.PrimitiveTest::testBigDecimalAsStringRepresentationDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 661, 666, 673, 674, 687, 688, 695, 696, 702, 703, 709, 715, 717, 718, 726, 727, 728, 729, 735, 739, 742, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testBigDecimalPreservePrecisionDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 661, 666, 673, 674, 702, 703, 709, 715, 717, 718, 726, 727, 735, 739, 742, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testNumberDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 661, 666, 673, 674, 702, 703, 709, 715, 716, 717, 718, 719, 722, 723, 725, 726, 727, 735, 736, 738, 739, 742, 810, 815, 817, 819, 821, 824, 825, 826, 827, 835, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsFloat": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 661, 666, 673, 674, 676, 678, 680, 681, 695, 696, 702, 703, 709, 715, 716, 717, 718, 719, 722, 725, 726, 727, 728, 729, 735, 739, 742, 894, 899, 905, 906, 918, 926, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 661, 666, 673, 674, 676, 678, 702, 703, 709, 715, 716, 717, 718, 719, 722, 725, 726, 727, 735, 739, 742, 894, 899, 905, 906, 918, 926, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testBadValueForBigIntegerDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 661, 666, 673, 674, 702, 703, 709, 715, 716, 717, 718, 719, 726, 727, 735, 739, 742, 810, 815, 817, 819, 821, 824, 826, 827, 835, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsInteger": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 578, 1162, 1168, 1179, 1182, 1193, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsDouble": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 661, 666, 673, 674, 676, 678, 680, 681, 695, 696, 702, 703, 709, 715, 716, 717, 718, 719, 722, 725, 726, 727, 728, 729, 735, 739, 742, 894, 899, 905, 906, 918, 926, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testFloatInfinityDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 894, 899, 905, 908, 910, 911, 918, 926, 1034, 1035, 1039, 1040, 1063, 1064, 1084, 1085, 1091, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testQuotedStringSerializationAndDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 810, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsDoubleWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 578, 894, 899, 905, 908, 910, 912, 913, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testBigDecimalDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 661, 666, 673, 674, 676, 678, 680, 681, 695, 696, 702, 703, 709, 715, 716, 717, 718, 719, 722, 725, 726, 727, 728, 729, 735, 739, 742, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsFloatPrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 578, 894, 899, 905, 908, 910, 912, 913, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsInt": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 438, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 1162, 1168, 1179, 1182, 1193, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDeserializingNonZeroDecimalPointValuesAsIntegerFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 661, 666, 673, 674, 702, 703, 709, 715, 717, 718, 726, 727, 735, 739, 742, 940, 945, 951, 952, 970, 971, 972, 973, 1162, 1168, 1179, 1180, 1198, 1199, 1200, 1201, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 673, 674, 676, 709, 710, 713, 749, 769, 894, 899, 905, 908, 910, 911, 918, 926, 1034, 1035, 1039, 1040, 1063, 1064, 1084, 1085, 1091, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBooleanPrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 578, 846, 850, 854, 859, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsNumber": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 438, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testPrimitiveClassLiteral": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 661, 666, 673, 674, 709, 715, 716, 717, 735, 736, 738, 1162, 1168, 1169, 1176, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsShortWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 438, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 1162, 1168, 1179, 1182, 1193, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testFloatNaNDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 616, 617, 624, 625, 626, 629, 630, 631, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 894, 899, 905, 908, 910, 911, 918, 926, 1034, 1035, 1039, 1040, 1063, 1064, 1084, 1085, 1091, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsBigDecimal": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 661, 666, 673, 674, 709, 715, 716, 717, 718, 719, 722, 723, 725, 735, 739, 742, 810, 815, 817, 819, 821, 824, 826, 827, 835, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDeserializingDecimalPointValueZeroSucceeds": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 661, 666, 673, 674, 702, 703, 709, 715, 717, 718, 726, 727, 735, 739, 742, 1162, 1168, 1179, 1180, 1198, 1199, 1207, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.PrimitiveTest::testPrimitiveLongAutoboxedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 661, 666, 673, 674, 709, 715, 716, 717, 735, 736, 738, 940, 945, 948, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsIntegerFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 661, 666, 673, 674, 676, 678, 680, 681, 695, 696, 702, 703, 709, 715, 716, 717, 718, 719, 722, 725, 726, 727, 728, 729, 735, 739, 742, 1162, 1168, 1179, 1180, 1198, 1199, 1200, 1201, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testStringsAsBooleans": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 572, 576, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDoubleNoFractAsStringRepresentationDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 661, 666, 673, 674, 687, 688, 695, 696, 709, 715, 717, 718, 726, 728, 729, 735, 739, 742, 894, 899, 905, 906, 918, 926, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsShortPrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 578, 1162, 1168, 1179, 1182, 1193, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsLongWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 438, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 940, 945, 951, 954, 965, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testBooleanDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 447, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 603, 607, 608, 610, 611, 612, 614, 624, 625, 626, 629, 630, 635, 642, 846, 850, 853, 854, 857, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsByteWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 438, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 1162, 1168, 1179, 1182, 1193, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testByteDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 661, 666, 673, 674, 709, 715, 716, 717, 735, 736, 738, 1162, 1168, 1169, 1176, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 673, 674, 676, 709, 710, 713, 749, 769, 894, 899, 905, 908, 910, 911, 918, 926, 1034, 1035, 1039, 1040, 1063, 1064, 1084, 1085, 1091, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testValueVeryCloseToZeroIsZero": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 661, 666, 673, 674, 676, 678, 680, 681, 695, 696, 702, 703, 709, 715, 716, 717, 718, 719, 722, 725, 726, 727, 728, 729, 735, 739, 742, 940, 945, 951, 952, 970, 971, 979, 1162, 1168, 1179, 1180, 1198, 1199, 1207, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testBigDecimalNegativeInfinityDeserializationNotSupported": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 673, 674, 676, 709, 710, 713, 749, 769, 810, 815, 816, 835, 1034, 1035, 1039, 1040, 1063, 1064, 1084, 1085, 1091, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsDoublePrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 438, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 894, 899, 905, 908, 910, 912, 913, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testBigDecimalNaNDeserializationNotSupported": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 616, 617, 624, 625, 626, 629, 630, 631, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 810, 815, 816, 835, 1034, 1035, 1039, 1040, 1063, 1064, 1084, 1085, 1091, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsNumber": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 578, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDoubleInfinityDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 894, 899, 905, 908, 910, 911, 918, 926, 1034, 1035, 1039, 1040, 1063, 1064, 1084, 1085, 1091, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBigDecimal": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 438, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 810, 815, 817, 819, 821, 824, 826, 830, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsInteger": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 661, 666, 673, 674, 709, 715, 716, 717, 718, 719, 722, 723, 725, 735, 739, 742, 1162, 1168, 1179, 1180, 1198, 1199, 1200, 1201, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 673, 674, 676, 680, 681, 695, 696, 702, 703, 709, 710, 715, 717, 718, 726, 727, 728, 729, 735, 739, 741, 742, 749, 767, 894, 899, 905, 907, 924, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsLongPrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 578, 940, 945, 951, 954, 965, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testBigDecimalInfinityDeserializationNotSupported": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 810, 815, 816, 835, 1034, 1035, 1039, 1040, 1063, 1064, 1084, 1085, 1091, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsBigIntegerFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 661, 666, 673, 674, 676, 678, 680, 681, 695, 696, 702, 703, 709, 715, 716, 717, 718, 719, 722, 725, 726, 727, 728, 729, 735, 739, 742, 810, 815, 817, 819, 821, 824, 826, 827, 835, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testLongAsStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 940, 945, 951, 954, 955, 957, 960, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsFloatWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 438, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 894, 899, 905, 908, 910, 912, 913, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDoubleNaNDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 616, 617, 624, 625, 626, 629, 630, 631, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 894, 899, 905, 908, 910, 911, 918, 926, 1034, 1035, 1039, 1040, 1063, 1064, 1084, 1085, 1091, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBigDecimal": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 578, 810, 815, 817, 819, 821, 824, 826, 830, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigDecimalDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 661, 666, 673, 674, 702, 703, 709, 715, 717, 718, 726, 727, 735, 739, 742, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBytePrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 578, 1162, 1168, 1179, 1182, 1193, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDoubleAsStringRepresentationDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 661, 666, 673, 674, 687, 688, 695, 696, 702, 703, 709, 715, 717, 718, 726, 727, 728, 729, 735, 739, 742, 894, 899, 905, 906, 918, 926, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBigInteger": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 578, 810, 815, 817, 819, 821, 824, 826, 830, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testReallyLongValuesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 661, 666, 673, 674, 709, 715, 716, 717, 718, 719, 722, 723, 725, 735, 736, 738, 940, 945, 948, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 769, 781, 786, 787, 796, 798, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBigInteger": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 438, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 810, 815, 817, 819, 821, 824, 826, 830, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBooleanWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 438, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 576, 846, 850, 854, 859, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testLargeDoubleDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 661, 666, 673, 674, 695, 696, 702, 703, 709, 715, 717, 718, 726, 727, 728, 729, 735, 739, 742, 894, 899, 905, 906, 918, 926, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testBigIntegerDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 661, 666, 673, 674, 709, 715, 716, 717, 718, 719, 722, 723, 725, 735, 739, 742, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsLong": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 661, 666, 673, 674, 709, 715, 716, 717, 718, 719, 722, 723, 725, 735, 739, 742, 940, 945, 951, 952, 970, 971, 972, 973, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.PrimitiveTest::testPrimitiveIntegerAutoboxedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 661, 666, 673, 674, 709, 715, 716, 717, 735, 736, 738, 1162, 1168, 1169, 1176, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigIntegerDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 661, 666, 673, 674, 709, 715, 716, 717, 718, 719, 722, 723, 725, 735, 738, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.PrimitiveTest::testBigDecimalNoFractAsStringRepresentationDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 661, 666, 673, 674, 687, 688, 695, 696, 709, 715, 717, 718, 726, 728, 729, 735, 739, 742, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.PrimitiveTest::testUnquotedStringDeserializationFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 333, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 540, 541, 542, 543, 546, 553, 554, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 810, 815, 816, 833, 835, 1034, 1035, 1039, 1040, 1063, 1064, 1084, 1085, 1090, 1091, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566, 1575, 1576], "com.google.gson.functional.PrimitiveCharacterTest::testPrimitiveCharacterAutoboxedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 810, 815, 816, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1034, 1035, 1039, 1040, 1063, 1064, 1084, 1085, 1091, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 576, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 611, 612, 614, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 846, 850, 854, 855, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 611, 612, 614, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 846, 850, 854, 855, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 576, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 736, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 821, 824, 825, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 769, 781, 786, 787, 796, 798, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 576, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 611, 612, 614, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 702, 703, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 726, 727, 735, 737, 738, 739, 741, 742, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 846, 850, 854, 855, 894, 899, 905, 907, 924, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 576, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 504, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 608, 610, 611, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 769, 781, 786, 787, 788, 789, 790, 791, 796, 798, 810, 815, 817, 818, 833, 846, 850, 851, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 585, 603, 607, 611, 615, 616, 618, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 781, 786, 788, 790, 791, 796, 798, 871, 875, 876, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ObjectTest::testTruncatedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 574, 576, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1406, 1407, 1575, 1576], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 781, 786, 788, 789, 796, 798, 810, 815, 817, 818, 833, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 447, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 576, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 611, 612, 614, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 846, 850, 854, 855, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 585, 603, 607, 611, 615, 616, 618, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 781, 786, 788, 790, 791, 796, 798, 871, 875, 876, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 749, 769, 781, 786, 787, 796, 798, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 585, 603, 607, 611, 615, 616, 618, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 781, 786, 788, 790, 791, 796, 798, 871, 875, 876, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 576, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 576, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 466, 467, 469, 482, 485, 498, 499, 506, 507, 520, 536, 537, 538, 553, 554, 578, 1273, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.ObjectTest::testEmptyStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 466, 467, 469, 482, 520, 536, 537, 538, 1282, 1284, 1288, 1293, 1307, 1334, 1335, 1337, 1338, 1339, 1406, 1407, 1575], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 576, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1228, 1229, 1230, 1254, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 556, 557, 576, 578, 781, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 781, 786, 788, 789, 790, 791, 796, 798, 810, 815, 817, 818, 833, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 789, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 447, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 576, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 611, 612, 614, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 846, 850, 854, 855, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 608, 610, 611, 612, 614, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 846, 850, 851, 854, 855, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 611, 612, 614, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 846, 850, 854, 855, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 611, 612, 614, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 846, 850, 854, 855, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 608, 610, 611, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 687, 688, 695, 696, 702, 703, 709, 710, 715, 716, 717, 718, 726, 727, 728, 729, 735, 737, 738, 739, 741, 742, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 821, 824, 826, 828, 833, 846, 850, 851, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 611, 612, 614, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 846, 850, 854, 855, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 585, 603, 607, 611, 615, 616, 618, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 781, 786, 788, 789, 796, 798, 871, 875, 876, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.NullObjectAndFieldTest::testTopLevelNullObjectDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 449, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 603, 607, 611, 615, 616, 618, 624, 625, 626, 629, 630, 635, 642, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 576, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 769, 781, 786, 787, 796, 798, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 585, 603, 607, 611, 615, 616, 618, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 781, 786, 788, 790, 791, 796, 798, 871, 875, 876, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 585, 603, 607, 611, 615, 616, 618, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 769, 781, 786, 787, 796, 798, 871, 875, 876, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 749, 769, 781, 786, 787, 796, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1035, 1039, 1040, 1090, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1509, 1575, 1576], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testMapDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testConcurrentHashMap": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1162, 1168, 1179, 1182, 1183, 1186, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testSortedMap": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1162, 1168, 1179, 1182, 1183, 1186, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 585, 603, 607, 611, 615, 616, 618, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 810, 815, 817, 819, 820, 833, 871, 875, 876, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testBooleanKeyDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1162, 1168, 1179, 1182, 1183, 1186, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 749, 769, 810, 815, 816, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1035, 1039, 1040, 1090, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 769, 810, 815, 816, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1035, 1039, 1040, 1090, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 585, 603, 607, 608, 610, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 810, 815, 817, 819, 820, 833, 846, 850, 851, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testHashMapDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1162, 1168, 1179, 1182, 1183, 1186, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testDeerializeMapOfMaps": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 498, 499, 504, 520, 523, 536, 537, 538, 553, 554, 572, 578, 781, 786, 788, 789, 796, 798, 810, 815, 817, 818, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1162, 1168, 1179, 1182, 1183, 1186, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 749, 769, 810, 815, 816, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1035, 1039, 1040, 1090, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testComplexKeysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 387, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 485, 498, 499, 504, 520, 536, 537, 538, 553, 554, 578, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testStringKeyDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testNumberKeyDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 810, 815, 817, 818, 833, 894, 899, 905, 908, 909, 924, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1162, 1168, 1179, 1182, 1183, 1186, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testConcurrentMap": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1162, 1168, 1179, 1182, 1183, 1186, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 810, 815, 817, 819, 820, 833, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapTest::testMapDeserializationEmpty": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 466, 467, 469, 482, 485, 498, 499, 506, 507, 520, 536, 537, 538, 553, 554, 578, 1273, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 361, 362, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 447, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 576, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 608, 610, 611, 612, 614, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 846, 850, 851, 854, 855, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 361, 362, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 576, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 361, 362, 364, 365, 367, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 574, 576, 810, 815, 817, 819, 820, 833, 894, 899, 905, 908, 909, 918, 924, 926, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 361, 362, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 576, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 769, 781, 786, 787, 796, 798, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.LeniencyTest::testLenientFromJson": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 572, 576, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1391, 1398, 1399, 1400, 1402, 1403, 1426, 1427, 1428, 1432, 1575, 1576], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 781, 786, 788, 789, 796, 798, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.JsonParserTest::testExtraCommasInMaps": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 498, 499, 506, 509, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 810, 815, 816, 833, 1035, 1039, 1040, 1090, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1566, 1575, 1576], "com.google.gson.functional.JsonParserTest::testParseInvalidJson": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 416, 417, 418, 420, 427, 428, 429, 432, 438, 466, 467, 468, 469, 471, 482, 520, 536, 537, 538, 553, 554, 556, 557, 576, 1273, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1406, 1407, 1575, 1576, 1578], "com.google.gson.functional.JsonParserTest::testExtraCommasInArrays": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 449, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 556, 563, 565, 566, 576, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 810, 815, 816, 833, 871, 875, 876, 1035, 1039, 1040, 1090, 1273, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 781, 786, 788, 789, 796, 798, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 781, 786, 788, 789, 796, 798, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 781, 786, 788, 789, 796, 798, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 781, 786, 788, 789, 796, 798, 810, 811, 812, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 585, 603, 607, 611, 615, 616, 618, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 781, 786, 788, 789, 796, 798, 871, 875, 876, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 781, 786, 788, 789, 796, 798, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testNullSafeObjectFromJson": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 449, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 603, 607, 611, 615, 616, 618, 624, 625, 626, 629, 630, 635, 642, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 498, 499, 504, 520, 523, 536, 537, 538, 553, 554, 572, 574, 578, 781, 782, 783, 786, 788, 789, 796, 810, 811, 812, 815, 817, 818, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.JavaUtilTest::testCurrency": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 580, 583, 584, 585, 603, 607, 611, 615, 616, 618, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 781, 786, 788, 789, 796, 798, 810, 815, 817, 818, 833, 835, 871, 875, 876, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.JavaUtilTest::testProperties": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 940, 945, 946, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLong": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 661, 666, 673, 674, 709, 715, 716, 717, 718, 719, 722, 723, 725, 735, 736, 738, 940, 945, 948, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 781, 786, 788, 789, 796, 798, 940, 945, 951, 954, 955, 957, 958, 960, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicIntegerArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArrayWithStringSerializationPolicy": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 572, 576, 940, 945, 951, 954, 955, 958, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicInteger": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 661, 666, 673, 674, 709, 715, 716, 717, 718, 719, 722, 723, 725, 735, 736, 738, 1162, 1168, 1169, 1176, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicBoolean": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 447, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 603, 607, 608, 610, 624, 625, 626, 629, 630, 635, 642, 846, 850, 853, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.InternationalizationTest::testStringsWithUnicodeChineseCharactersDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 810, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.InternationalizationTest::testStringsWithUnicodeChineseCharactersEscapedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 810, 815, 817, 818, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1008, 1009, 1011, 1012, 1013, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1509, 1510, 1517, 1530, 1575, 1576], "com.google.gson.functional.InternationalizationTest::testStringsWithRawChineseCharactersDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 810, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForCollectionType": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 574, 576, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 749, 769, 781, 786, 787, 796, 798, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1096, 1098, 1099, 1101, 1102, 1103, 1104, 1228, 1229, 1230, 1233, 1236, 1239, 1242, 1245, 1247, 1248, 1254, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 749, 769, 781, 786, 787, 796, 798, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1096, 1098, 1099, 1101, 1102, 1103, 1104, 1228, 1229, 1230, 1233, 1236, 1239, 1242, 1245, 1247, 1248, 1254, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 574, 576, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 749, 769, 781, 786, 787, 796, 798, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1096, 1098, 1099, 1101, 1102, 1103, 1104, 1228, 1229, 1230, 1233, 1236, 1239, 1242, 1245, 1247, 1248, 1254, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 576, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 702, 703, 709, 710, 715, 716, 717, 718, 726, 727, 735, 737, 738, 739, 741, 742, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 894, 899, 905, 906, 907, 918, 924, 926, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 608, 610, 611, 612, 614, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 846, 850, 851, 854, 855, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 702, 703, 709, 710, 715, 716, 717, 718, 719, 726, 727, 735, 737, 738, 739, 741, 742, 749, 767, 769, 781, 786, 787, 796, 798, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1162, 1168, 1174, 1228, 1229, 1230, 1233, 1236, 1239, 1242, 1245, 1247, 1249, 1251, 1252, 1254, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 506, 507, 520, 521, 523, 536, 537, 538, 553, 554, 578, 781, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 578, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 608, 610, 611, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 846, 850, 851, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1509, 1510, 1517, 1530, 1575, 1576], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 608, 610, 611, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 835, 846, 850, 851, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1509, 1575, 1576], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 608, 610, 611, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 846, 850, 851, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1509, 1510, 1517, 1530, 1575, 1576], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 574, 576, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1008, 1009, 1011, 1012, 1013, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1509, 1575, 1576], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 574, 576, 810, 815, 817, 819, 820, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.EnumTest::testCollectionOfEnumsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 574, 576, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.EnumTest::testEnumSubclass": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 574, 576, 810, 815, 817, 819, 820, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 749, 769, 781, 786, 787, 796, 798, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 810, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.EnumTest::testEnumSet": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 574, 576, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.EnumTest::testEnumSubclassAsParameterizedType": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 574, 576, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 810, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 574, 576, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 447, 454, 457, 466, 467, 468, 469, 471, 472, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 576, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 608, 610, 611, 612, 614, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 846, 850, 851, 854, 855, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguageCountry": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 810, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBuilderDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 673, 674, 676, 678, 680, 681, 695, 696, 702, 703, 709, 710, 715, 716, 717, 718, 719, 722, 725, 726, 727, 728, 729, 735, 739, 741, 742, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 821, 824, 826, 828, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testUuidDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 810, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguageCountryVariant": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 810, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 810, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 574, 576, 810, 815, 817, 819, 820, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlDateDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguage": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 498, 499, 501, 520, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 654, 656, 659, 660, 673, 674, 676, 680, 681, 695, 696, 702, 703, 706, 709, 715, 717, 718, 726, 727, 728, 729, 781, 786, 788, 790, 791, 796, 798, 810, 815, 816, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1034, 1035, 1039, 1040, 1084, 1085, 1091, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 810, 815, 817, 818, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1008, 1009, 1011, 1012, 1013, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1509, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testClassDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 810, 815, 816, 835, 1034, 1035, 1039, 1040, 1063, 1064, 1084, 1085, 1091, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testUriDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 810, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBufferDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultCalendarDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 427, 428, 429, 432, 434, 436, 444, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 736, 737, 738, 749, 767, 769, 781, 786, 787, 796, 798, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1162, 1163, 1164, 1168, 1169, 1174, 1176, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 749, 769, 810, 815, 816, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1035, 1039, 1040, 1090, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 810, 815, 817, 818, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 810, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 739, 741, 742, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 821, 824, 826, 828, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 466, 467, 469, 482, 485, 498, 499, 506, 507, 520, 536, 537, 538, 553, 554, 578, 1273, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.DefaultTypeAdaptersTest::testBitSetDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 427, 428, 429, 432, 438, 440, 447, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 574, 576, 580, 583, 584, 585, 588, 589, 590, 603, 607, 608, 610, 611, 612, 614, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 810, 815, 817, 819, 820, 833, 846, 850, 851, 854, 855, 994, 997, 998, 1001, 1002, 1004, 1005, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimeDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 572, 576, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 810, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultGregorianCalendarDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 427, 428, 429, 432, 434, 436, 444, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 736, 737, 738, 749, 767, 769, 781, 786, 787, 796, 798, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1162, 1163, 1164, 1168, 1169, 1174, 1176, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 810, 815, 817, 818, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 810, 815, 817, 818, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 572, 576, 810, 815, 817, 818, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 661, 666, 673, 674, 709, 715, 716, 717, 735, 738, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 603, 607, 611, 615, 616, 618, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 769, 781, 786, 787, 796, 798, 871, 875, 876, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 736, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 821, 824, 825, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 447, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 608, 610, 611, 615, 620, 624, 625, 626, 629, 630, 635, 642, 647, 648, 649, 652, 653, 654, 656, 659, 660, 661, 666, 673, 674, 709, 715, 716, 717, 735, 736, 738, 810, 815, 817, 819, 821, 824, 825, 835, 846, 850, 853, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 736, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 821, 824, 825, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 810, 815, 817, 818, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 781, 786, 788, 790, 791, 796, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 576, 578, 749, 769, 781, 786, 787, 796, 798, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 749, 769, 781, 786, 787, 796, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1035, 1039, 1040, 1090, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 749, 769, 781, 786, 787, 796, 798, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 749, 769, 781, 786, 787, 796, 798, 810, 815, 817, 818, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 578, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 576, 578, 749, 769, 781, 786, 787, 796, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1035, 1039, 1040, 1090, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 574, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 810, 815, 817, 819, 820, 833, 894, 899, 900, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CollectionTest::testVector": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CollectionTest::testPriorityQueue": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 447, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 576, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 608, 610, 611, 612, 614, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 846, 850, 851, 854, 855, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CollectionTest::testStack": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CollectionTest::testTopLevelCollectionOfIntegersDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 449, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 574, 576, 580, 583, 584, 585, 603, 607, 611, 615, 616, 618, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 810, 815, 817, 819, 820, 833, 871, 875, 876, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CollectionTest::testQueueDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 572, 576, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 576, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 940, 945, 946, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CollectionTest::testSetDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 576, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 769, 781, 786, 787, 796, 798, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 447, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 574, 576, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 611, 612, 614, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 652, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 736, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 846, 850, 854, 855, 894, 899, 900, 902, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 572, 576, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 556, 557, 576, 578, 781, 786, 788, 790, 791, 796, 798, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 574, 576, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 572, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 673, 674, 702, 703, 709, 710, 715, 716, 717, 718, 726, 727, 735, 736, 737, 738, 739, 741, 742, 749, 767, 810, 815, 817, 818, 833, 894, 899, 900, 902, 905, 906, 907, 918, 924, 926, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 449, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 585, 603, 607, 611, 615, 616, 618, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 871, 875, 876, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ArrayTest::testInvalidArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 480, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1566, 1575, 1576], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 449, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 574, 576, 580, 583, 584, 585, 603, 607, 611, 615, 616, 618, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 810, 815, 817, 819, 820, 833, 871, 875, 876, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 449, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 585, 603, 607, 611, 615, 616, 618, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 871, 875, 876, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 574, 576, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 572, 576, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 556, 557, 576, 1273, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverridePrimitiveBooleanAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 447, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 608, 610, 611, 615, 620, 624, 625, 626, 629, 630, 635, 642, 647, 648, 649, 652, 653, 654, 656, 659, 660, 661, 666, 673, 674, 709, 715, 716, 717, 735, 736, 738, 846, 850, 853, 1162, 1168, 1169, 1176, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideWrapperBooleanAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 447, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 608, 610, 611, 615, 620, 624, 625, 626, 629, 630, 635, 642, 647, 648, 649, 652, 653, 654, 656, 659, 660, 661, 666, 673, 674, 709, 715, 716, 717, 735, 736, 738, 846, 850, 853, 1162, 1168, 1169, 1176, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.ObjectTypeAdapterTest::testDeserializeNullValue": [238, 239, 240, 245, 269, 270, 272, 293, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 553, 554, 578, 580, 583, 584, 585, 603, 607, 611, 615, 616, 618, 624, 625, 626, 629, 630, 635, 641, 642, 749, 767, 781, 786, 788, 790, 791, 796, 871, 875, 876, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [238, 239, 240, 245, 269, 270, 272, 293, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 449, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 553, 554, 574, 576, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 611, 615, 616, 618, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 871, 875, 876, 894, 899, 900, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 468, 469, 471, 472, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 553, 554, 574, 576, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403], "com.google.gson.MixedStreamTest::testReadInvalidState": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 379, 380, 381, 383, 384, 385, 427, 428, 429, 432, 444, 466, 467, 469, 482, 485, 498, 499, 501, 520, 536, 553, 554, 576, 578, 810, 815, 817, 819, 821, 824, 826, 830, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403], "com.google.gson.MixedStreamTest::testReaderDoesNotMutateState": [326, 333], "com.google.gson.MixedStreamTest::testReadClosed": [269, 427, 428, 429, 466, 467, 469, 482, 520, 536, 541, 549, 550, 1214, 1215, 1216], "com.google.gson.JsonStreamParserTest::testParseTwoStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 540, 541, 542, 543, 547, 553, 554, 572, 810, 815, 817, 818, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.JsonStreamParserTest::testNoSideEffectForHasNext": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 459, 466, 467, 469, 482, 520, 536, 537, 538, 540, 541, 542, 543, 544, 547, 553, 554, 572, 810, 815, 817, 818, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410, 1575, 1576], "com.google.gson.JsonStreamParserTest::testIterator": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 459, 466, 467, 469, 482, 520, 536, 537, 538, 540, 541, 542, 543, 544, 547, 553, 554, 572, 810, 815, 817, 818, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410, 1575, 1576], "com.google.gson.JsonStreamParserTest::testCallingNextBeyondAvailableInput": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 459, 466, 467, 469, 482, 520, 536, 537, 538, 540, 541, 542, 543, 544, 547, 553, 554, 572, 810, 815, 817, 818, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1410, 1575, 1576], "com.google.gson.JsonParserTest::testParseUnquotedStringArrayFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 598, 603, 607, 611, 615, 620, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 810, 815, 816, 833, 835, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.JsonParserTest::testParseEmptyString": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 810, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.JsonParserTest::testParseUnquotedSingleWordStringFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 589, 598, 603, 607, 608, 609, 624, 625, 626, 629, 630, 631, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 810, 815, 816, 835, 1034, 1035, 1039, 1040, 1063, 1064, 1084, 1085, 1091, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.JsonParserTest::testParseReader": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 736, 737, 738, 749, 767, 769, 781, 786, 787, 796, 798, 810, 815, 817, 818, 819, 821, 824, 825, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.JsonParserTest::testParseInvalidJson": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 416, 417, 418, 420, 427, 428, 429, 432, 438, 466, 467, 468, 469, 471, 482, 520, 536, 537, 538, 553, 554, 556, 557, 576, 1273, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1406, 1407, 1575, 1576, 1578], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 540, 541, 542, 543, 547, 553, 554, 574, 578, 580, 583, 584, 585, 588, 589, 590, 603, 607, 608, 610, 611, 612, 614, 615, 620, 624, 625, 626, 629, 630, 635, 641, 642, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 781, 786, 788, 790, 791, 796, 798, 810, 815, 817, 819, 820, 833, 835, 846, 850, 851, 853, 854, 855, 857, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.JsonParserTest::testParseMixedArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 454, 457, 466, 467, 468, 469, 471, 472, 482, 485, 498, 499, 506, 507, 520, 536, 537, 538, 553, 554, 574, 576, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 736, 737, 738, 749, 767, 810, 815, 817, 819, 820, 821, 824, 825, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.JsonParserTest::testParseUnquotedMultiWordStringFails": [230, 238, 239, 240, 245, 269, 270, 272, 293, 326, 333, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 540, 541, 542, 543, 546, 553, 554, 580, 583, 584, 588, 589, 598, 603, 607, 608, 609, 624, 625, 626, 629, 630, 631, 647, 648, 649, 656, 660, 673, 674, 709, 710, 713, 749, 769, 810, 815, 816, 833, 1035, 1039, 1040, 1090, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1415, 1416, 1566, 1575, 1576], "com.google.gson.JsonParserTest::testParseString": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 718, 719, 722, 723, 725, 735, 736, 737, 738, 749, 767, 769, 781, 786, 787, 796, 798, 810, 815, 817, 818, 819, 821, 824, 825, 833, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1034, 1035, 1039, 1040, 1084, 1085, 1090, 1091, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 466, 467, 469, 482, 483, 485, 498, 499, 501, 520, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 585, 603, 607, 608, 610, 624, 625, 626, 629, 630, 635, 642, 749, 767, 781, 786, 788, 790, 791, 796, 798, 846, 850, 853, 994, 997, 998, 1001, 1002, 1004, 1005, 1007, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.JavaSerializationTest::testMapIsSerializable": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 578, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 709, 710, 715, 716, 717, 735, 737, 738, 749, 767, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1162, 1168, 1174, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.JavaSerializationTest::testNumberIsSerializable": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 576, 580, 583, 584, 588, 589, 590, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 673, 674, 676, 680, 681, 695, 696, 702, 703, 709, 710, 715, 716, 717, 718, 726, 727, 728, 729, 735, 737, 738, 739, 741, 742, 749, 767, 810, 815, 817, 819, 821, 824, 826, 828, 833, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.JavaSerializationTest::testListIsSerializable": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 574, 576, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 652, 653, 654, 656, 659, 660, 661, 666, 673, 674, 709, 715, 716, 717, 735, 736, 738, 810, 815, 817, 819, 821, 824, 825, 835, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterDoesNotAffectNonAdaptedTypes": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 574, 810, 815, 817, 819, 820, 835, 994, 997, 998, 1001, 1002, 1004, 1007, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.GsonTypeAdapterTest::testDefaultTypeAdapterThrowsParseException": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 578, 810, 815, 817, 819, 821, 824, 826, 830, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 580, 583, 584, 588, 603, 607, 611, 615, 620, 647, 648, 649, 653, 654, 656, 659, 660, 661, 666, 673, 674, 709, 715, 716, 717, 718, 719, 722, 723, 725, 735, 738, 1282, 1284, 1285, 1288, 1291, 1293, 1294, 1303, 1304, 1307, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1390, 1402, 1403, 1575, 1576, 1578], "com.google.gson.CommentsTest::testParseComments": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 574, 576, 810, 815, 817, 819, 820, 833, 994, 997, 998, 1001, 1002, 1004, 1005, 1273, 1282, 1284, 1288, 1291, 1293, 1294, 1303, 1304, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1346, 1347, 1351, 1355, 1356, 1357, 1367, 1368, 1371, 1372, 1375, 1376, 1381, 1382, 1383, 1384, 1390, 1391, 1398, 1399, 1400, 1402, 1403, 1426, 1427, 1428, 1432, 1443, 1444, 1449, 1450, 1575, 1576]}, "com.google.gson.reflect.TypeToken": {"com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassDeserialization": [72, 73, 94, 296], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [72, 73, 94, 101, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [72, 73, 94, 101, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [72, 73, 74, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [72, 73, 94, 101, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [72, 73, 74, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [72, 73, 74, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [72, 73, 74, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [72, 73, 94, 101, 284, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [72, 73, 94, 101, 296], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.PrimitiveTest::testStringsAsBooleans": [62, 82, 86, 87, 101], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [72, 73, 94, 101, 296], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [62, 72, 73, 82, 86, 87, 94, 101, 296], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [72, 73, 94, 101, 296], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [72, 73, 94, 284, 296], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [72, 73, 94, 101, 296], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [72, 73, 94, 101, 296], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [72, 73, 94, 101, 296], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [72, 73, 94, 101, 296], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [72, 73, 94, 101, 296], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.MapTest::testMapDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testConcurrentHashMap": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testSortedMap": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testBooleanKeyDeserialization": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testComplexKeysSerialization": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testHashMapDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testDeerializeMapOfMaps": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testSerializeMapOfMaps": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.MapTest::testStringKeyDeserialization": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testNumberKeyDeserialization": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testConcurrentMap": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [72, 73, 94, 101, 296], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [72, 73, 94, 101, 296], "com.google.gson.functional.JsonParserTest::testExtraCommasInArrays": [62, 82, 86, 87, 101], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [72, 73, 94, 101, 296], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [72, 73, 94, 101, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JavaUtilTest::testCurrency": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JavaUtilTest::testProperties": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArray": [72, 73, 94, 296], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLong": [72, 73, 94, 296], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [72, 73, 94, 101, 296], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicIntegerArray": [72, 73, 94, 296], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArrayWithStringSerializationPolicy": [72, 73, 94, 296], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicInteger": [72, 73, 94, 296], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicBoolean": [72, 73, 94, 296], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [72, 73, 94, 101, 296], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [72, 73, 94, 101, 296], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [72, 73, 94, 101, 296], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [72, 73, 94, 101, 296], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [72, 73, 94, 101, 296], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserialization": [72, 73, 94, 296], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.EnumTest::testEnumSubclass": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [72, 73, 94, 101, 296], "com.google.gson.functional.EnumTest::testEnumSet": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonNullDeserialization": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonPrimitiveDeserialization": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigDecimalTypeAdapter": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch": [72, 73, 94, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [72, 73, 94, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigIntegerTypeAdapter": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonArrayDeserialization": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonObjectDeserialization": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [72, 73, 74, 94, 280, 296, 303], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [72, 73, 94, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [72, 73, 94, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [72, 73, 94, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [72, 73, 94, 284, 296], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [72, 73, 94, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CollectionTest::testUserCollectionTypeAdapter": [62, 82, 86, 87, 101], "com.google.gson.functional.CollectionTest::testVector": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testPriorityQueue": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testCollectionOfObjectWithNullSerialization": [62, 82, 86, 87, 101], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CollectionTest::testStack": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testSetDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testCollectionOfObjectSerialization": [62, 82, 86, 87, 101], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [62, 72, 73, 82, 86, 87, 94, 101, 296], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [62, 72, 73, 82, 86, 87, 94, 101, 296], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.ObjectTypeAdapterTest::testSerialize": [72, 73, 94, 303], "com.google.gson.ObjectTypeAdapterTest::testDeserializeNullValue": [72, 73, 94, 303], "com.google.gson.ObjectTypeAdapterTest::testSerializeObject": [72, 73, 94, 303], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [72, 73, 94, 303], "com.google.gson.ObjectTypeAdapterTest::testSerializeNullValue": [72, 73, 94, 303], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.MixedStreamTest::testReadNulls": [72, 296], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.JavaSerializationTest::testNumberIsSerializable": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [62, 72, 73, 82, 86, 87, 94, 101, 296], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [72, 73, 94, 101, 296], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [62, 72, 73, 82, 86, 87, 94, 101, 296], "com.google.gson.DefaultInetAddressTypeAdapterTest::testInetAddressSerializationAndDeserialization": [72, 73, 74, 94, 280, 296]}, "com.google.gson.internal.bind.ArrayTypeAdapter": {"com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [58, 60, 64, 69, 70, 71, 72, 73, 76, 77, 80, 85, 90, 91, 92, 93], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [60, 64, 69, 70, 71, 72, 73, 75, 76, 77, 80], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [64, 70, 71, 72, 75], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [58, 64, 70, 71, 72, 75, 85, 91, 92, 93], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [58, 64, 70, 71, 72, 75, 85, 91, 92, 93], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [58, 64, 70, 71, 72, 75], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [64, 65], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [64, 70, 71, 72, 75], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [64, 70, 71, 72, 75], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [64, 70, 71, 72, 75], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [58, 64, 70, 71, 72, 75], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [64, 70, 71, 72, 75], "com.google.gson.functional.JsonParserTest::testParseInvalidJson": [64, 70, 71, 72], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [58, 85, 90, 91, 92, 93], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [58, 64, 70, 71, 72, 85, 91, 93], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [58, 85, 90, 91, 92, 93], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [58, 64, 70, 71, 72, 75], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [58, 60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testInvalidArrayDeserialization": [64, 70, 71, 72], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [60, 64, 69, 70, 71, 72, 73, 75, 76, 77, 80], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [60, 64, 69, 70, 71, 76, 77, 80]}, "com.google.gson.stream.JsonWriter": {"com.google.gson.stream.JsonWriterTest::testClosedWriterThrowsOnStructure": [288, 297, 308, 317, 325, 337, 366, 367, 546, 614], "com.google.gson.stream.JsonWriterTest::testInvalidTopLevelTypes": [167, 168, 170, 359, 369, 395, 400, 401, 414, 417, 597, 598, 600, 601], "com.google.gson.stream.JsonWriterTest::testValueWithoutName": [167, 168, 170, 308, 326, 359, 369, 466, 614, 641], "com.google.gson.stream.JsonWriterTest::testTwoNames": [389, 390, 395], "com.google.gson.stream.JsonWriterTest::testClosedWriterThrowsOnFlush": [528, 529, 546], "com.google.gson.stream.JsonWriterTest::testNullName": [386, 387], "com.google.gson.stream.JsonWriterTest::testNonFiniteBoxedDoubles": [508, 513, 514, 516], "com.google.gson.stream.JsonWriterTest::testBadNestingObject": [167, 168, 170, 288, 297, 308, 326, 337, 338, 339, 359, 369], "com.google.gson.stream.JsonWriterTest::testStrictWriterDoesNotPermitMultipleTopLevelValues": [167, 168, 170, 288, 297, 325, 326, 345, 359, 369, 376, 614, 616, 617, 622], "com.google.gson.stream.JsonWriterTest::testNameWithoutValue": [317, 341, 342, 395], "com.google.gson.stream.JsonWriterTest::testBadNestingArray": [167, 168, 170, 288, 317, 326, 337, 338, 339, 359, 369], "com.google.gson.stream.JsonWriterTest::testClosedWriterThrowsOnValue": [366, 367, 414, 418, 546, 614], "com.google.gson.stream.JsonWriterTest::testNonFiniteDoubles": [479, 480], "com.google.gson.stream.JsonWriterTest::testMultipleTopLevelValues": [167, 168, 170, 288, 297, 325, 326, 328, 345, 359, 369, 376, 614, 616, 617, 622], "com.google.gson.stream.JsonWriterTest::testClosedWriterThrowsOnName": [392, 393, 546], "com.google.gson.internal.bind.JsonTreeWriterTest::testStrictNansAndInfinities": [235, 242], "com.google.gson.internal.bind.JsonTreeWriterTest::testStrictBoxedNansAndInfinities": [235, 242], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigDecimalSerialization": [508, 513], "com.google.gson.MixedStreamTest::testWriteInvalidState": [167, 168, 170, 308, 325, 326, 359, 369, 614, 641], "com.google.gson.MixedStreamTest::testWriteClosed": [308, 325, 366, 367, 546, 614], "com.google.gson.MixedStreamTest::testWriteDoesNotMutateState": [235, 242, 253, 261]}, "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory": {"com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [43, 44, 45], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [43, 44, 45], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [43, 44, 45], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [43, 44, 45], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [43, 44, 45], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [43, 44, 45], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [43, 44, 45], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [43, 44, 45], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [43, 44, 45], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [43, 44, 45], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [43, 44, 45], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [43, 44, 45], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [43, 44, 45], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [43, 44, 45], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [43, 44, 45], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [43, 44, 45], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [43, 44, 45], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [43, 44, 45], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [43, 44, 45], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [43, 44, 45], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [43, 44, 45], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [43, 44, 45], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [43, 44, 45], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [43, 44, 45], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [43, 44, 45], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [43, 44, 45], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [43, 44, 45], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [43, 44, 45], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [43, 44, 45], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [43, 44, 45], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [43, 44, 45], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [43, 44, 45], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [43, 44, 45], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [43, 44, 45], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [43, 44, 45], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [43, 44, 45], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [37, 43, 44, 45, 47, 53, 55, 58, 59, 60, 68], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [43, 44, 45], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [43, 44, 45], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [43, 44, 45], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [43, 44, 45], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [43, 44, 45], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [43, 44, 45], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [43, 44, 45], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [43, 44, 45], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [43, 44, 45], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [43, 44, 45], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [43, 44, 45], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [43, 44, 45], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [43, 44, 45], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [43, 44, 45], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [43, 44, 45], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [43, 44, 45], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [43, 44, 45], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [43, 44, 45], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [43, 44, 45], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [43, 44, 45], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [43, 44, 45], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [43, 44, 45], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [43, 44, 45], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [43, 44, 45], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [43, 44, 45], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [43, 44, 45], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [43, 44, 45], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [43, 44, 45], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [43, 44, 45], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [43, 44, 45], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [43, 44, 45], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [43, 44, 45], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [43, 44, 45], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [43, 44, 45], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [43, 44, 45], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [43, 44, 45], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [43, 44, 45], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [43, 44, 45], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [43, 44, 45], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [43, 44, 45], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [43, 44, 45], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [43, 44, 45], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [43, 44, 45], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [43, 44, 45], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [43, 44, 45], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [43, 44, 45], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [43, 44, 45], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [43, 44, 45], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [43, 44, 45], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [43, 44, 45], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [43, 44, 45], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [43, 44, 45], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [43, 44, 45], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [43, 44, 45], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [43, 44, 45], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [43, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [43, 44, 45, 47, 68], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [43, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [43, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [43, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [43, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [43, 44, 45], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [37, 43, 44, 47, 53, 55, 56, 57, 68], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [43, 44, 47, 53, 55, 58, 60, 68], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [43, 44, 47, 68], "com.google.gson.functional.JavaUtilTest::testCurrency": [43, 44, 45], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [43, 44, 45], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [43, 44, 45], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [43, 44, 45], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [43, 44, 45], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [43, 44, 45], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [43, 44, 45], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [43, 44, 45], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [43, 44, 45], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [43, 44, 45], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [43, 44, 45], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [43, 44, 45], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [43, 44, 45], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [43, 44, 45], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [43, 44, 45], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [43, 44, 45], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [43, 44, 45], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [43, 44, 45], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [43, 44, 45], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [43, 44, 45], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [43, 44, 45], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [43, 44, 45], "com.google.gson.functional.EnumTest::testEnumSubclass": [43, 44, 45], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [43, 44, 45], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [43, 44, 45], "com.google.gson.functional.EnumTest::testEnumSet": [43, 44, 45], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [43, 44, 45], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [43, 44, 45], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [43, 44, 45], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [43, 44, 45], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [43, 44, 45], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [43, 44, 45], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [43, 44, 45], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [43, 44, 45], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [43, 44, 45], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [43, 44, 45], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [43, 44, 45], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [43, 44, 45], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [43, 44, 45], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [43, 44, 45], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [43, 44, 45], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [43, 44, 45], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [43, 44, 45], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [43, 44, 45], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [43, 44, 45], "com.google.gson.functional.CollectionTest::testSetDeserialization": [43, 44, 45], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [43, 44, 45], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [43, 44, 45], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [43, 44, 45]}, "com.google.gson.internal.Excluder": {"com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [63, 70, 71, 72, 112, 113, 114, 116, 117, 150, 151, 154, 156, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216, 229, 233, 234, 235, 239, 243, 244, 245, 246, 249], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [63, 70, 71, 72, 112, 113, 114, 116, 117, 150, 151, 154, 156, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216, 229, 233, 234, 235, 236, 239, 243, 244, 245, 249], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassDeserialization": [63, 70, 71, 112, 113, 114, 116, 120, 192, 194, 229, 233, 234, 235, 236], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [63, 70, 71, 72, 112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216, 229, 233, 239, 243, 249], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [63, 70, 71, 72, 112, 113, 114, 116, 117, 150, 151, 154, 156, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216, 229, 233, 234, 235, 236, 239, 243, 244, 245, 246, 249], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 160, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testConcurrentHashMap": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testSortedMap": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testHashMapDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testConcurrentMap": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilTest::testCurrency": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilTest::testProperties": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArray": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLong": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicIntegerArray": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArrayWithStringSerializationPolicy": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicInteger": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicBoolean": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [63, 91, 92, 93, 112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 164, 165, 166, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [63, 91, 92, 93, 112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 164, 165, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [63, 98, 103, 104, 106, 108, 112, 113, 114, 116, 117, 120, 150, 151, 154, 159, 163, 170, 174, 178, 179, 180, 181, 182, 183, 188, 192, 197, 201, 205, 206, 207, 208, 212, 216], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [63, 98, 103, 104, 106, 108, 112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 180, 181, 182, 183, 188, 192, 197, 201, 205, 206, 207, 208, 212, 216], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserialization": [63, 98, 103, 104, 106, 112, 113, 114, 116, 120, 192, 197, 201, 205, 206, 207, 208, 212, 216], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [63, 98, 99, 100, 101, 112, 113, 114, 116, 120, 192, 197, 201, 205, 206, 207, 208, 212, 216], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [63, 98, 99, 100, 101, 108, 112, 113, 114, 116, 117, 120, 150, 151, 154, 159, 163, 170, 174, 178, 179, 180, 181, 182, 183, 188, 192, 197, 201, 205, 206, 207, 208, 212, 216], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testEnumSubclass": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testEnumSet": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigDecimalTypeAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigIntegerTypeAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testVector": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testPriorityQueue": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testStack": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testSetDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.JavaSerializationTest::testNumberIsSerializable": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.DefaultInetAddressTypeAdapterTest::testInetAddressSerializationAndDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216]}, "com.google.gson.GsonBuilder": {"com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [78, 81, 83, 85, 114, 115, 562, 563, 565, 568], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [78, 81, 83, 85, 114, 115, 562, 563, 565, 568], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassDeserialization": [78, 83, 85, 114, 115, 562, 563, 565, 568], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassSerialization": [568], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [78, 81, 83, 85, 114, 115, 562, 563, 565, 568], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesSerialization": [568], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [78, 81, 83, 85, 114, 115, 562, 563, 565, 568], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [78, 81, 83, 85, 361, 520, 521, 527, 562, 563, 565, 568], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [83, 85, 520, 521, 527, 562, 563, 565, 568], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical": [83, 85, 520, 521, 524, 525, 527, 562, 563, 565, 568], "com.google.gson.functional.TypeAdapterPrecedenceTest::testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter": [568], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [83, 85, 478, 479, 480, 485, 524, 525, 527, 562, 563, 565, 568], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [83, 85, 478, 479, 480, 482, 483, 485, 562, 563, 565, 568], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByStreaming": [568], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [83, 85, 478, 479, 480, 485, 520, 521, 527, 562, 563, 565, 568], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreamingHierarchical": [568], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [78, 81, 83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [78, 81, 83, 85, 562, 563, 565, 568], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [83, 85, 562, 563, 565, 568], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [83, 85, 562, 563, 565, 568], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [78, 81, 83, 85, 562, 563, 565, 568], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [78, 81, 83, 85, 562, 563, 565, 568], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [78, 81, 83, 85, 482, 483, 485, 562, 563, 565, 568], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [83, 85, 562, 563, 565, 568], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [78, 81, 83, 85, 562, 563, 565, 568], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [78, 81, 83, 85, 562, 563, 565, 568], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [78, 81, 83, 85, 562, 563, 565, 568], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [78, 81, 83, 85, 562, 563, 565, 568], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [78, 81, 83, 85, 562, 563, 565, 568], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [78, 81, 83, 85, 562, 563, 565, 568], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [78, 81, 83, 85, 562, 563, 565, 568], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [83, 85, 482, 483, 485, 562, 563, 565, 568], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [78, 81, 83, 85, 562, 563, 565, 568], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [78, 81, 83, 85, 562, 563, 565, 568], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [78, 81, 83, 85, 145, 562, 563, 565, 568], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [78, 81, 83, 85, 562, 563, 565, 568], "com.google.gson.functional.PrimitiveTest::testFloatInfinitySerialization": [568], "com.google.gson.functional.PrimitiveTest::testFloatNaNSerialization": [568], "com.google.gson.functional.PrimitiveTest::testNegativeInfinitySerialization": [568], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatSerialization": [568], "com.google.gson.functional.PrimitiveTest::testDoubleInfinitySerialization": [568], "com.google.gson.functional.PrimitiveTest::testDoubleNaNSerialization": [568], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [78, 81, 83, 85, 475, 476, 485, 562, 563, 565, 568], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [78, 81, 83, 85, 475, 476, 485, 562, 563, 565, 568], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [78, 83, 85, 485, 562, 563, 565, 568], "com.google.gson.functional.ObjectTest::testAnonymousLocalClassesCustomSerialization": [568], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [78, 81, 83, 85, 168, 562, 563, 565, 568], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [78, 81, 83, 85, 168, 562, 563, 565, 568], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [78, 81, 83, 85, 562, 563, 565, 568], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [78, 81, 83, 85, 286, 562, 563, 565, 568], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [78, 81, 83, 85, 286, 562, 563, 565, 568], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicySerialiation": [568], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [78, 81, 83, 85, 286, 562, 563, 565, 568], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [78, 81, 83, 85, 286, 562, 563, 565, 568], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicySerialization": [568], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [78, 81, 83, 85, 562, 563, 565, 568], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicySerialization": [568], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicySerialization": [568], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [83, 85, 485, 562, 563, 565, 568], "com.google.gson.functional.MapTest::testGeneralMapField": [568], "com.google.gson.functional.MapTest::testCustomSerializerForSpecificMapType": [568], "com.google.gson.functional.MapTest::testSerializeMaps": [168, 361, 568], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [78, 81, 83, 85, 248, 249, 562, 563, 565, 568], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [78, 81, 83, 85, 248, 249, 562, 563, 565, 568], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [83, 85, 249, 562, 563, 565, 568], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [78, 81, 83, 85, 249, 562, 563, 565, 568], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [78, 81, 83, 85, 482, 483, 485, 562, 563, 565, 568], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [78, 81, 83, 85, 273, 562, 563, 565, 568], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArrayWithStringSerializationPolicy": [83, 85, 273, 562, 563, 565, 568], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [78, 83, 85, 485, 562, 563, 565, 568], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [78, 81, 83, 85, 475, 476, 485, 562, 563, 565, 568], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [81, 83, 85, 475, 476, 485, 562, 563, 565, 568], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [78, 83, 85, 485, 562, 563, 565, 568], "com.google.gson.functional.FieldNamingTest::testLowerCaseWithDashes": [568], "com.google.gson.functional.FieldNamingTest::testUpperCamelCaseWithSpaces": [568], "com.google.gson.functional.FieldNamingTest::testUpperCamelCase": [568], "com.google.gson.functional.FieldNamingTest::testLowerCaseWithUnderscores": [568], "com.google.gson.functional.FieldNamingTest::testIdentity": [568], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [78, 81, 83, 85, 155, 156, 475, 476, 485, 562, 563, 565, 568], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationSerialization": [568], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [78, 81, 83, 85, 155, 156, 475, 476, 485, 562, 563, 565, 568], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [78, 81, 83, 85, 168, 349, 562, 563, 565, 568], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [78, 81, 83, 85, 168, 349, 562, 563, 565, 568], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserialization": [78, 83, 85, 349, 350, 562, 563, 565, 568], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [78, 81, 83, 85, 332, 333, 562, 563, 565, 568], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerialization": [568], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [78, 81, 83, 85, 168, 332, 562, 563, 565, 568], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [78, 81, 83, 85, 386, 562, 563, 565, 568], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [81, 83, 85, 520, 521, 527, 562, 563, 565, 568], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [83, 85, 497, 498, 562, 563, 565, 568], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [78, 81, 83, 85, 497, 498, 562, 563, 565, 568], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [83, 85, 407, 408, 428, 562, 563, 565, 566, 568, 577, 578, 585, 586, 587], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [83, 85, 407, 408, 562, 563, 565, 566, 568, 577, 578, 585, 586, 587], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [83, 85, 407, 408, 562, 563, 565, 566, 568, 577, 578, 585, 586, 587], "com.google.gson.functional.DefaultTypeAdaptersTest::testClassDeserialization": [568], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigDecimalTypeAdapter": [83, 85, 482, 483, 485, 562, 563, 565, 568], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [83, 85, 562, 563, 565, 568], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigIntegerTypeAdapter": [83, 85, 482, 483, 485, 562, 563, 565, 568], "com.google.gson.functional.DefaultTypeAdaptersTest::testClassSerialization": [568], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [83, 85, 407, 408, 562, 563, 565, 566, 568, 577, 578, 585, 586, 587], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [83, 85, 520, 521, 527, 562, 563, 565, 568], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [78, 81, 83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [78, 81, 83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomSerializerInvokedForPrimitives": [568], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomSerializers": [568], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedSerializers": [568], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [78, 81, 83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [78, 81, 83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [78, 81, 83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [78, 81, 83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [78, 81, 83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [78, 81, 83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [78, 81, 83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [78, 81, 83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [78, 81, 83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.functional.CollectionTest::testUserCollectionTypeAdapter": [568], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideStringAdapter": [568], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverridePrimitiveBooleanAdapter": [568], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideWrapperBooleanAdapter": [568], "com.google.gson.ObjectTypeAdapterTest::testSerialize": [83, 85, 562, 563, 565, 568], "com.google.gson.ObjectTypeAdapterTest::testDeserializeNullValue": [83, 85, 562, 563, 565, 568], "com.google.gson.ObjectTypeAdapterTest::testSerializeObject": [83, 85, 562, 563, 565, 568], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [83, 85, 562, 563, 565, 568], "com.google.gson.ObjectTypeAdapterTest::testSerializeNullValue": [83, 85, 562, 563, 565, 568], "com.google.gson.LongSerializationPolicyTest::testStringLongSerializationIntegration": [568], "com.google.gson.LongSerializationPolicyTest::testDefaultLongSerializationIntegration": [568], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [83, 85, 478, 479, 480, 485, 562, 563, 565, 568], "com.google.gson.GsonBuilderTest::testTransientFieldExclusion": [568], "com.google.gson.GsonBuilderTest::testExcludeFieldsWithModifiers": [568]}, "com.google.gson.internal.UnsafeAllocator": {"com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [39, 40, 43, 44], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [39, 40, 43, 44], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [39, 40, 43, 44], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [39, 40, 43, 44], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [39, 40, 43, 44], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [39, 40, 43, 44], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [39, 40, 43, 44], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [39, 40, 43, 44], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [39, 40, 43, 44], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [39, 40, 43, 44], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [39, 40, 43, 44], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [39, 40, 43, 44], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [39, 40, 43, 44], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [39, 40, 43, 44], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [39, 40, 43, 44], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [39, 40, 43, 44], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [39, 40, 43, 44], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [39, 40, 43, 44], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [39, 40, 43, 44], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [39, 40, 43, 44], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [39, 40, 43, 44], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [39, 40, 43, 44], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [39, 40, 43, 44], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [39, 40, 43, 44]}, "com.google.gson.internal.bind.ObjectTypeAdapter": {"com.google.gson.functional.JsonParserTest::testParseInvalidJson": [55, 56, 59, 60, 63], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [55, 56, 76], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [55, 56, 76, 79], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [55, 56, 67, 68, 69, 70, 72, 76, 79, 82], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [55, 56, 76, 79], "com.google.gson.ObjectTypeAdapterTest::testDeserializeNullValue": [55, 56, 67, 68, 69, 70, 73, 85], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [55, 56, 59, 60, 61, 63, 67, 68, 69, 70, 72, 73, 76, 79, 85]}, "com.google.gson.JsonPrimitive": {"com.google.gson.internal.bind.JsonElementReaderTest::testArray": [56, 94, 102, 146, 157, 260], "com.google.gson.internal.bind.JsonElementReaderTest::testWrongType": [65, 94, 102, 112, 146, 166, 176, 178, 181, 193, 238, 260], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbers": [56, 94, 102, 146, 157, 193, 238, 260], "com.google.gson.internal.bind.JsonElementReaderTest::testObject": [56, 94, 102, 112, 146, 157, 166, 260], "com.google.gson.internal.bind.JsonElementReaderTest::testBooleans": [47, 94, 102, 112, 122, 132, 133], "com.google.gson.internal.bind.JsonElementReaderTest::testStrictNansAndInfinities": [65, 94, 102, 112, 146, 176, 178, 181, 193], "com.google.gson.internal.bind.JsonElementReaderTest::testLenientNansAndInfinities": [65, 94, 102, 112, 146, 176, 178, 181, 193], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbersFromStrings": [65, 94, 102, 112, 146, 176, 178, 181, 193, 238, 260], "com.google.gson.internal.bind.JsonElementReaderTest::testSkipValue": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.internal.bind.JsonElementReaderTest::testStrings": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.internal.bind.JsonElementReaderTest::testStringsFromNumbers": [56, 94, 102, 146, 157, 176, 177], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [56, 65, 94, 102, 112, 146, 157, 166, 176, 178, 181], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [56, 94, 102, 146, 157, 176, 177], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [56, 65, 94, 102, 112, 146, 166], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [65, 94, 102, 112, 146, 166, 176, 178, 181], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [47, 56, 65, 94, 102, 112, 146, 166], "com.google.gson.functional.PrimitiveTest::testPrimitiveClassLiteral": [56, 94, 102, 112, 146, 157, 166, 260], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [56, 65, 94, 102, 112, 146, 157, 176, 178, 181, 260], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [56, 94, 102, 146, 157, 260], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [65, 94, 102, 166], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [56, 85, 94, 102, 112, 146, 166], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [85, 94, 102, 112, 146, 166], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [85, 94, 102, 112, 146, 166], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [85, 94, 102, 112, 146, 166], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [56, 65, 94, 102, 112, 146, 157, 166, 176, 178, 181, 238, 260], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [56, 65, 94, 102, 112, 146, 166], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [56, 94, 102, 146, 157, 260], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [56, 94, 102, 146, 157, 260], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [56, 94, 102, 146, 157, 260], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [65, 85, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [65, 85, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [65, 85, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [65, 85, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [65, 94, 102, 112, 146, 166, 176, 178, 181], "com.google.gson.LongSerializationPolicyTest::testDefaultLongSerialization": [56, 94, 102, 146, 157, 166, 238], "com.google.gson.LongSerializationPolicyTest::testStringLongSerialization": [65, 94, 102, 112, 146, 166, 176, 178, 181], "com.google.gson.JsonStreamParserTest::testParseTwoStrings": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.JsonStreamParserTest::testNoSideEffectForHasNext": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.JsonStreamParserTest::testIterator": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.JsonPrimitiveTest::testEqualsIntegerAndBigInteger": [56, 94, 102, 157, 306, 309, 312, 313, 316, 317, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testByteEqualsInteger": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testIntegerEqualsBigInteger": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testStringsAndChar": [65, 75, 94, 97, 98, 102, 112, 146, 166, 176, 178, 181, 270], "com.google.gson.JsonPrimitiveTest::testByteEqualsLong": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testShortEqualsLong": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testFloatEqualsDouble": [56, 94, 102, 157, 289, 293, 297, 298, 299, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testByteEqualsBigInteger": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testBoolean": [47, 56, 65, 94, 102, 112, 122, 132, 133, 136, 146, 157, 176, 177, 178, 181], "com.google.gson.JsonPrimitiveTest::testParsingStringAsBoolean": [65, 94, 102, 112, 132, 136, 146, 176, 178, 181], "com.google.gson.JsonPrimitiveTest::testByteEqualsShort": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testEquals": [47, 56, 65, 94, 102, 157, 306, 309, 312, 313, 316, 317, 319, 326, 334, 335, 336, 339], "com.google.gson.JsonPrimitiveTest::testDoubleEqualsBigDecimal": [56, 94, 102, 157, 289, 293, 297, 298, 299, 306, 309, 312, 313, 316, 319, 323, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testShortEqualsBigInteger": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testFloatEqualsBigDecimal": [56, 94, 102, 157, 289, 293, 297, 298, 299, 306, 309, 312, 313, 316, 319, 323, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testLongEqualsBigInteger": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testShortEqualsInteger": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testParsingStringAsNumber": [65, 94, 102, 112, 146, 176, 178, 181, 193, 204, 215, 227, 238, 249, 260, 265], "com.google.gson.JsonPrimitiveTest::testDeepCopy": [90], "com.google.gson.JsonPrimitiveTest::testEqualsDoesNotEquateStringAndNonStringTypes": [47, 56, 65, 94, 102, 306, 309, 312, 313, 316, 319, 326, 334, 339], "com.google.gson.JsonPrimitiveTest::testIntegerEqualsLong": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testExponential": [65, 94, 102, 112, 146, 176, 178, 181, 193, 204, 260], "com.google.gson.JsonParserTest::testParseUnquotedStringArrayFails": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.JsonParserTest::testParseEmptyString": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.JsonParserTest::testParseUnquotedSingleWordStringFails": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.JsonParserTest::testParseReader": [56, 65, 94, 102, 112, 146, 157, 176, 178, 181, 260], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [47, 56, 65, 94, 102, 112, 146, 166], "com.google.gson.JsonParserTest::testParseMixedArray": [56, 65, 94, 102, 112, 146, 157, 176, 178, 181, 260], "com.google.gson.JsonParserTest::testParseString": [56, 65, 94, 102, 112, 146, 157, 176, 178, 181, 260], "com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName": [47, 94, 102, 112, 122, 132, 133], "com.google.gson.JsonObjectTest::testAddingStringProperties": [85, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.JsonObjectTest::testAddingBooleanProperties": [85, 94, 102, 112, 122, 132, 133], "com.google.gson.JsonObjectTest::testAddingCharacterProperties": [85, 94, 97, 98, 112, 146, 176, 178, 181, 270], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [56, 94, 102, 146, 157, 260]}, "com.google.gson.JsonArray": {"com.google.gson.internal.bind.JsonElementReaderTest::testArray": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testWrongType": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbers": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testBooleans": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testStrictNansAndInfinities": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testLenientNansAndInfinities": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbersFromStrings": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testSkipValue": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testStrings": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testStringsFromNumbers": [40, 97, 171], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [40, 97, 171], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [40, 97, 171], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [40, 97, 171], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [40, 97, 171], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [40, 97, 171], "com.google.gson.JsonParserTest::testParseUnquotedStringArrayFails": [40, 97, 161, 183], "com.google.gson.JsonParserTest::testParseMixedArray": [40, 97, 183], "com.google.gson.JsonObjectTest::testDeepCopy": [33, 40, 45, 46, 49, 161]}, "com.google.gson.FieldAttributes": {"com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [46, 111], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [46, 111], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [46, 111]}, "com.google.gson.internal.LazilyParsedNumber": {"com.google.gson.internal.bind.JsonElementReaderTest::testArray": [31, 37], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbers": [31, 37, 50, 63], "com.google.gson.internal.bind.JsonElementReaderTest::testObject": [31, 37], "com.google.gson.internal.bind.JsonElementReaderTest::testStringsFromNumbers": [31, 68], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [31, 68], "com.google.gson.functional.PrimitiveTest::testNumberDeserialization": [31, 37, 50, 52], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [31, 37], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [31, 37], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [31, 37], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [31, 37], "com.google.gson.JsonParserTest::testParseReader": [31, 37], "com.google.gson.JsonParserTest::testParseMixedArray": [31, 37], "com.google.gson.JsonParserTest::testParseString": [31, 37], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [31, 37]}, "com.google.gson.stream.MalformedJsonException": {"com.google.gson.stream.JsonReaderTest::testFailWithPositionDeepPath": [29]}, "com.google.gson.JsonSyntaxException": {"com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch": [30]}, "com.google.gson.DefaultDateTypeAdapter": {"com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [38, 51, 65, 84, 85, 86, 99], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [38, 51, 65, 84, 85, 87, 89, 90, 99], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [38, 51, 65, 84, 99], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [38, 51, 65, 84, 85, 87, 88, 99]}, "com.google.gson.internal.Primitives": {"com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [82, 98, 100], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [82, 98, 100]}, "com.google.gson.Gson": {"com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilSerialization": [572, 575, 594, 596], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.VersioningTest::testVersionedUntilSerialization": [572, 575, 594, 596], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassDeserialization": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 765, 766, 789, 793, 794, 844, 846, 877, 878, 879, 880, 896], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassSerialization": [572, 575, 594, 596], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesSerialization": [572, 575, 594, 596], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.VersioningTest::testVersionedClassesSerialization": [572, 575, 594, 596], "com.google.gson.functional.UncategorizedTest::testTrailingWhitespace": [720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.UncategorizedTest::testObjectEqualButNotSameSerialization": [572, 575, 594, 596], "com.google.gson.functional.UncategorizedTest::testStaticFieldsAreNotSerialized": [572, 575, 594, 596], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 572, 575, 594, 595, 596, 640, 653, 661, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 425, 720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 877, 878, 879, 894, 896], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 572, 575, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 425, 594, 595, 596, 640, 653, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 425, 572, 575, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [120, 123, 135, 142, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 553, 554, 555, 594, 595, 596, 640, 653, 661, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896, 941, 944], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 572, 575, 594, 595, 596, 640, 653, 765, 766, 789, 793, 794, 844, 846, 877, 878, 879, 880, 896], "com.google.gson.functional.TypeAdapterPrecedenceTest::testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter": [572, 575, 594, 596, 765, 766, 789, 793, 794, 844, 846, 879, 880, 896], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 572, 575, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 572, 575, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 572, 575, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByStreaming": [572, 575, 594, 596, 765, 766, 789, 793, 794, 844, 846, 879, 880, 896], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 572, 575, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreamingHierarchical": [572, 575, 594, 596, 765, 766, 789, 793, 794, 844, 846, 879, 880, 896], "com.google.gson.functional.TreeTypeAdaptersTest::testSerializeId": [594, 596], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 425, 572, 575, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 425, 572, 575, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 572, 575, 594, 595, 596, 640, 653, 661, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 572, 575, 594, 595, 596, 640, 653, 661, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ThrowableFunctionalTest::testSerializedNameOnExceptionFields": [572, 575, 594, 596], "com.google.gson.functional.StringTest::testSingleQuoteInStringSerialization": [572, 575, 594, 596, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.StringTest::testAssignmentCharDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.StringTest::testStringValueDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.StringTest::testEscapingQuotesInStringSerialization": [572, 575, 594, 596, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.StringTest::testEscapedCtrlRInStringSerialization": [572, 575, 594, 596], "com.google.gson.functional.StringTest::testEscapedBackslashInStringDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.StringTest::testEscapedCtrlRInStringDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.StringTest::testSingleQuoteInStringDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.StringTest::testStringValueSerialization": [572, 575, 594, 596], "com.google.gson.functional.StringTest::testEscapingQuotesInStringDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.StringTest::testAssignmentCharSerialization": [572, 575, 594, 596], "com.google.gson.functional.StringTest::testStringValueAsSingleElementArraySerialization": [572, 575, 594, 596], "com.google.gson.functional.StringTest::testEscapedCtrlNInStringDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.StringTest::testJavascriptKeywordsInStringSerialization": [572, 575, 594, 596], "com.google.gson.functional.StringTest::testJavascriptKeywordsInStringDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.StringTest::testEscapedCtrlNInStringSerialization": [572, 575, 594, 596], "com.google.gson.functional.StringTest::testEscapedBackslashInStringSerialization": [572, 575, 594, 596], "com.google.gson.functional.StringTest::testStringWithEscapedSlashDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 513], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 513], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 513], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 513], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 513], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 513], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 513], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 513], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 513], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 513], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 513], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 513], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 513], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 513], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 513], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 513], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.SerializedNameTest::testFirstNameIsChosenForSerialization": [572, 575, 594, 596], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.SecurityTest::testNonExecutableJsonSerialization": [572, 575, 594, 596], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenSerialization": [572, 575, 594, 596], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 488, 490, 491, 498, 499, 572, 575, 594, 595, 596, 640, 653, 661, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ReadersWritersTest::testTypeMismatchThrowsJsonSyntaxExceptionForReaders": [720, 722, 843, 844, 873, 875, 879, 891, 896], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [572, 575, 594, 596, 879, 880, 896, 917, 918, 941, 944], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 816, 817, 819, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ReadersWritersTest::testTopLevelNullObjectDeserializationWithReader": [720, 722, 816, 817, 819, 873, 875, 879, 880, 896], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 572, 575, 594, 595, 596, 640, 653, 661, 877, 878, 879, 880, 896, 917, 918, 941, 944], "com.google.gson.functional.ReadersWritersTest::testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls": [720, 722, 816, 817, 819, 873, 875, 879, 880, 896], "com.google.gson.functional.ReadersWritersTest::testTypeMismatchThrowsJsonSyntaxExceptionForStrings": [720, 722, 789, 792, 793, 843, 844, 873, 875, 879, 891, 896], "com.google.gson.functional.RawSerializationTest::testCollectionOfPrimitives": [572, 575, 594, 596], "com.google.gson.functional.RawSerializationTest::testThreeLevelParameterizedObject": [572, 575, 594, 596], "com.google.gson.functional.RawSerializationTest::testCollectionOfObjects": [572, 575, 594, 596], "com.google.gson.functional.RawSerializationTest::testTwoLevelParameterizedObject": [572, 575, 594, 596], "com.google.gson.functional.RawSerializationTest::testParameterizedObject": [572, 575, 594, 596], "com.google.gson.functional.PrintFormattingTest::testJsonObjectWithNullValuesSerialized": [679, 681], "com.google.gson.functional.PrintFormattingTest::testCompactFormattingLeavesNoWhiteSpace": [572, 575, 594, 596], "com.google.gson.functional.PrintFormattingTest::testJsonObjectWithNullValues": [679, 681], "com.google.gson.functional.PrimitiveTest::testFloatInfinitySerializationNotSupportedByDefault": [316, 317, 572, 575, 595, 640, 661, 665, 667], "com.google.gson.functional.PrimitiveTest::testBigDecimalAsStringRepresentationDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testPrimitiveBooleanAutoboxedInASingleElementArraySerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testBigDecimalPreservePrecisionDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testNumberDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsFloat": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testDoubleInfinitySerializationNotSupportedByDefault": [316, 317, 572, 575, 595, 640, 661, 665, 667], "com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testBadValueForBigIntegerDeserialization": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 896], "com.google.gson.functional.PrimitiveTest::testFloatInfinitySerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testFloatNaNSerializationNotSupportedByDefault": [316, 317, 572, 575, 595, 640, 661, 665, 667], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsInteger": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 891, 896], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsDouble": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatSerializationNotSupportedByDefault": [316, 317, 572, 575, 595, 640, 661, 665, 667], "com.google.gson.functional.PrimitiveTest::testDoubleNaNSerializationNotSupportedByDefault": [316, 317, 572, 575, 595, 640, 661, 665, 667], "com.google.gson.functional.PrimitiveTest::testBigDecimalPreservePrecisionSerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigDecimalSerialization": [572, 575, 594, 595, 596, 640, 661], "com.google.gson.functional.PrimitiveTest::testFloatInfinityDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testQuotedStringSerializationAndDeserialization": [572, 575, 594, 596, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsDoubleWrapper": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 891, 896], "com.google.gson.functional.PrimitiveTest::testFloatNaNSerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testBigDecimalDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsFloatPrimitive": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 891, 896], "com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedInASingleElementArraySerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsInt": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 891, 896], "com.google.gson.functional.PrimitiveTest::testDeserializingNonZeroDecimalPointValuesAsIntegerFails": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 896], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBooleanPrimitive": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 891, 896], "com.google.gson.functional.PrimitiveTest::testBigIntegerInASingleElementArraySerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsNumber": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 896], "com.google.gson.functional.PrimitiveTest::testPrimitiveClassLiteral": [720, 722, 765, 766, 789, 792, 793, 794, 816, 817, 819, 843, 844, 846, 873, 875, 879, 880, 896, 917, 918, 941, 944], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsShortWrapper": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 891, 896], "com.google.gson.functional.PrimitiveTest::testFloatNaNDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsBigDecimal": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testDeserializingDecimalPointValueZeroSucceeds": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testNegativeInfinitySerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testPrimitiveLongAutoboxedDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsIntegerFails": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 896], "com.google.gson.functional.PrimitiveTest::testStringsAsBooleans": [720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testLongAsStringSerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testDoubleNoFractAsStringRepresentationDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsShortPrimitive": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 891, 896], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatSerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testNumberSerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsLongWrapper": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 891, 896], "com.google.gson.functional.PrimitiveTest::testPrimitiveBooleanAutoboxedSerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testBooleanDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testBigDecimalInASingleElementArraySerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsByteWrapper": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 891, 896], "com.google.gson.functional.PrimitiveTest::testByteDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testMoreSpecificSerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testValueVeryCloseToZeroIsZero": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testBigDecimalNegativeInfinityDeserializationNotSupported": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 896], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsDoublePrimitive": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 891, 896], "com.google.gson.functional.PrimitiveTest::testBigDecimalNaNDeserializationNotSupported": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 896], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsNumber": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 896], "com.google.gson.functional.PrimitiveTest::testByteSerialization": [594, 596], "com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedSerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testDoubleInfinityDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBigDecimal": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 891, 896], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsInteger": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 896], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsLongPrimitive": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 891, 896], "com.google.gson.functional.PrimitiveTest::testBigDecimalInfinityDeserializationNotSupported": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 896], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsBigIntegerFails": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 896], "com.google.gson.functional.PrimitiveTest::testBigIntegerSerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testLongAsStringDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsFloatWrapper": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 891, 896], "com.google.gson.functional.PrimitiveTest::testDoubleNaNDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBigDecimal": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 891, 896], "com.google.gson.functional.PrimitiveTest::testPrimitiveIntegerAutoboxedSerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigDecimalDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBytePrimitive": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 891, 896], "com.google.gson.functional.PrimitiveTest::testReallyLongValuesSerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testPrimitiveLongAutoboxedSerialization": [594, 596], "com.google.gson.functional.PrimitiveTest::testBigDecimalSerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testDoubleAsStringRepresentationDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBigInteger": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 891, 896], "com.google.gson.functional.PrimitiveTest::testDoubleInfinitySerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testReallyLongValuesDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigIntegerSerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testNegativeInfinitySerializationNotSupportedByDefault": [316, 317, 572, 575, 595, 640, 661, 665, 667], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBigInteger": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 891, 896], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBooleanWrapper": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 891, 896], "com.google.gson.functional.PrimitiveTest::testLargeDoubleDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testBigIntegerDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testShortSerialization": [594, 596], "com.google.gson.functional.PrimitiveTest::testPrimitiveLongAutoboxedInASingleElementArraySerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testDoubleNaNSerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testHtmlCharacterSerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsLong": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 896], "com.google.gson.functional.PrimitiveTest::testPrimitiveIntegerAutoboxedDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigIntegerDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testPrimitiveIntegerAutoboxedInASingleElementArraySerialization": [572, 575, 594, 596], "com.google.gson.functional.PrimitiveTest::testBigDecimalNoFractAsStringRepresentationDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveTest::testUnquotedStringDeserializationFails": [186, 204, 720, 721, 722, 765, 766, 789, 792, 793, 794, 843, 844, 845, 846, 851, 855, 872, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveCharacterTest::testPrimitiveCharacterAutoboxedDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.PrimitiveCharacterTest::testPrimitiveCharacterAutoboxedSerialization": [572, 575, 594, 596], "com.google.gson.functional.PrettyPrintingTest::testPrettyPrintListOfPrimitiveArrays": [572, 575, 594, 596], "com.google.gson.functional.PrettyPrintingTest::testPrettyPrintArrayOfPrimitives": [572, 575, 594, 596], "com.google.gson.functional.PrettyPrintingTest::testEmptyMapField": [572, 575, 594, 596], "com.google.gson.functional.PrettyPrintingTest::testPrettyPrintArrayOfPrimitiveArrays": [572, 575, 594, 596], "com.google.gson.functional.PrettyPrintingTest::testMap": [572, 575, 594, 596], "com.google.gson.functional.PrettyPrintingTest::testMultipleArrays": [572, 575, 594, 596], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysSerialization": [594, 596], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 425, 594, 595, 596, 640, 653, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysSerialization": [594, 596], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 425, 594, 595, 596, 640, 653, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 425, 594, 595, 596, 640, 653, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 419, 420, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 594, 595, 596, 640, 653, 661, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersSerialization": [594, 596], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeSerialization": [572, 575, 594, 596], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithCustomSerializer": [594, 596], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 594, 595, 596, 640, 653, 661, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesSerialization": [594, 596], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueSerialization": [572, 575, 594, 596], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ObjectTest::testInnerClassSerialization": [572, 575, 594, 596], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ObjectTest::testTruncatedDeserialization": [720, 722, 789, 792, 793, 843, 844, 873, 875, 876, 879, 886, 889, 896], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsSerialization": [572, 575, 594, 596], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ObjectTest::testArrayOfArraysSerialization": [572, 575, 594, 596], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ObjectTest::testNullSerialization": [679, 681], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ObjectTest::testAnonymousLocalClassesSerialization": [572, 575, 594, 596], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersSerialization": [572, 575, 594, 596], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsSerialization": [572, 575, 594, 596], "com.google.gson.functional.ObjectTest::testEmptyStringDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 871, 873, 875, 886, 887, 896], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ObjectTest::testClassWithObjectFieldSerialization": [572, 575, 594, 596], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectSerialization": [572, 575, 594, 596], "com.google.gson.functional.ObjectTest::testNullDeserialization": [765, 766, 789, 790], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ObjectTest::testArrayOfObjectsSerialization": [572, 575, 594, 596], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesSerialization": [572, 575, 594, 596], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ObjectTest::testNestedSerialization": [572, 575, 594, 596], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ObjectTest::testDateAsMapObjectField": [572, 575, 594, 596], "com.google.gson.functional.ObjectTest::testPrimitiveArrayFieldSerialization": [572, 575, 594, 596], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ObjectTest::testNullFieldsSerialization": [572, 575, 594, 596], "com.google.gson.functional.ObjectTest::testArrayOfObjectsAsFields": [572, 575, 594, 596], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ObjectTest::testJsonObjectSerialization": [679, 681], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ObjectTest::testSingletonLists": [572, 575, 594, 596], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ObjectTest::testAnonymousLocalClassesCustomSerialization": [572, 575, 594, 596], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitSerializationOfNullArrayMembers": [572, 575, 594, 596], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberSerialization": [572, 575, 594, 596], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.NullObjectAndFieldTest::testTopLevelNullObjectDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.NullObjectAndFieldTest::testPrintPrintingArraysWithNulls": [572, 575, 594, 596], "com.google.gson.functional.NullObjectAndFieldTest::testTopLevelNullObjectSerialization": [594, 596, 679, 681], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitSerializationOfNullStringMembers": [572, 575, 594, 596], "com.google.gson.functional.NullObjectAndFieldTest::testCustomSerializationOfNulls": [572, 575, 594, 596], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896, 941, 942], "com.google.gson.functional.NullObjectAndFieldTest::testPrintPrintingObjectWithNulls": [572, 575, 594, 596], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullSerialization": [572, 575, 594, 596], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitSerializationOfNullCollectionMembers": [572, 575, 594, 596], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitSerializationOfNulls": [572, 575, 594, 596], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 572, 575, 594, 595, 596, 640, 653, 661, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicySerialiation": [572, 575, 594, 596], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicySerialization": [572, 575, 594, 596], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 425, 428, 572, 575, 595, 640, 653], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicySerialization": [572, 575, 594, 596], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicySerialization": [572, 575, 594, 596], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicySerialization": [572, 575, 594, 596], "com.google.gson.functional.NamingPolicyTest::testDeprecatedNamingStrategy": [572, 575, 594, 596], "com.google.gson.functional.NamingPolicyTest::testAtSignInSerializedName": [572, 575, 594, 596], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testListOfSubclassFields": [572, 575, 594, 596], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 530, 533, 553, 554, 555, 653, 661], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testParameterizedSubclassFields": [572, 575, 594, 596], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 530, 533, 553, 554, 555, 653, 661], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testSubclassFields": [572, 575, 594, 596], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testListOfParameterizedSubclassFields": [572, 575, 594, 596], "com.google.gson.functional.MapTest::testMapDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.MapTest::testConcurrentHashMap": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 572, 575, 594, 596, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.MapTest::testSortedMap": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.MapTest::testRawMapSerialization": [572, 575, 594, 596], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 720, 722, 789, 792, 793, 843, 844, 873, 875, 877, 878, 879, 896], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.MapTest::testInterfaceTypeMapWithSerializer": [572, 575, 594, 596], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.MapTest::testBooleanKeyDeserialization": [720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.MapTest::testMapSerializationWithNullValueButSerializeNulls": [594, 596], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 572, 575, 594, 596, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.MapTest::testComplexKeysSerialization": [594, 596], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.MapTest::testParameterizedMapSubclassSerialization": [594, 596], "com.google.gson.functional.MapTest::testMapWithQuotes": [572, 575, 594, 596], "com.google.gson.functional.MapTest::testWriteMapsWithEmptyStringKey": [572, 575, 594, 596], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.MapTest::testMapSerializationWithWildcardValues": [594, 596], "com.google.gson.functional.MapTest::testMapSerializationWithNullKey": [594, 596], "com.google.gson.functional.MapTest::testMapOfMapSerialization": [572, 575, 594, 596], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.MapTest::testHashMapDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.MapTest::testInterfaceTypeMap": [572, 575, 594, 596], "com.google.gson.functional.MapTest::testDeerializeMapOfMaps": [720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.MapTest::testSerializeMapOfMaps": [594, 596], "com.google.gson.functional.MapTest::testGeneralMapField": [572, 575, 594, 596], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [879, 880, 896, 941, 944], "com.google.gson.functional.MapTest::testMapSerializationWithNullValue": [594, 596], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.MapTest::testMapSerializationWithNullValuesSerialized": [572, 575, 594, 596], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.MapTest::testMapSerializationWithNullValues": [572, 575, 594, 596], "com.google.gson.functional.MapTest::testComplexKeysDeserialization": [720, 722, 789, 792, 793, 843, 844, 873, 875, 879, 896], "com.google.gson.functional.MapTest::testStringKeyDeserialization": [720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.MapTest::testNumberKeyDeserialization": [720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.MapTest::testCustomSerializerForSpecificMapType": [594, 596], "com.google.gson.functional.MapTest::testSerializeMaps": [572, 575, 594, 596], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 572, 575, 594, 596, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.MapTest::testConcurrentMap": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 572, 575, 594, 596, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.MapTest::testMapSubclassSerialization": [594, 596], "com.google.gson.functional.MapTest::testMapSerializationEmpty": [594, 596], "com.google.gson.functional.MapTest::testMapSerializationWithIntegerKeys": [594, 596], "com.google.gson.functional.MapTest::testMapSerialization": [594, 596], "com.google.gson.functional.MapTest::testMapDeserializationEmpty": [720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 594, 595, 596, 640, 653, 661, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 594, 595, 596, 640, 653, 661, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 720, 722, 789, 792, 793, 843, 844, 873, 875, 877, 878, 879, 896], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableSerialization": [594, 596], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.LeniencyTest::testLenientFromJson": [720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.JsonTreeTest::testJsonTreeToString": [572, 575, 594, 596, 679, 681], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 553, 554, 555, 653, 661], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 530, 533, 553, 554, 555, 653, 661], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 553, 554, 555, 653, 661], "com.google.gson.functional.JsonParserTest::testBadTypeForDeserializingCustomTree": [879, 896, 917, 941, 944], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 877, 878, 879, 880, 896, 917, 918, 941, 944], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 877, 878, 879, 880, 896, 917, 918, 941, 944], "com.google.gson.functional.JsonParserTest::testExtraCommasInMaps": [720, 722, 789, 792, 793, 843, 844, 873, 875, 879, 894, 896], "com.google.gson.functional.JsonParserTest::testParseInvalidJson": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 876, 879, 886, 889, 896], "com.google.gson.functional.JsonParserTest::testExtraCommasInArrays": [720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 877, 878, 879, 896, 917, 941, 944], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 877, 878, 879, 896, 917, 941, 944], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 572, 575, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 572, 575, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 572, 575, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 572, 575, 594, 596, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 572, 575, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testNullSafeObjectFromJson": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 572, 575, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 572, 575, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 572, 575, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testSuperclassTypeAdapterNotInvoked": [572, 575, 594, 596], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testIncorrectTypeAdapterFails": [572, 575, 595, 640, 661, 665, 667], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 484, 490, 491, 492, 493, 498, 499, 500, 572, 575, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.JavaUtilTest::testCurrency": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 572, 575, 594, 596, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.JavaUtilTest::testProperties": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 572, 575, 594, 596, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArray": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 572, 575, 594, 596, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLong": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 572, 575, 594, 596, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 572, 575, 594, 596, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicIntegerArray": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 572, 575, 594, 596, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArrayWithStringSerializationPolicy": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 572, 575, 594, 596, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicInteger": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 572, 575, 594, 596, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicBoolean": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 572, 575, 594, 596, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.InternationalizationTest::testStringsWithUnicodeChineseCharactersDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.InternationalizationTest::testStringsWithUnicodeChineseCharactersEscapedDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.InternationalizationTest::testStringsWithUnicodeChineseCharactersSerialization": [572, 575, 594, 596], "com.google.gson.functional.InternationalizationTest::testStringsWithRawChineseCharactersDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.InterfaceTest::testSerializingInterfaceObjectField": [572, 575, 594, 596], "com.google.gson.functional.InterfaceTest::testSerializingObjectImplementingInterface": [572, 575, 594, 596], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForCollectionType": [720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 553, 554, 555, 653, 661], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 530, 533, 553, 554, 555, 653, 661], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 553, 554, 555, 653, 661], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubForToJsonMethod": [572, 575, 594, 596], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 530, 533, 553, 554, 555, 653, 661], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 530, 533, 553, 554, 555, 653, 661], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionSerialization": [572, 575, 594, 596], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 530, 533, 553, 554, 555, 653, 661], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod": [594, 596], "com.google.gson.functional.InheritanceTest::testSubClassSerialization": [572, 575, 594, 596], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod": [594, 596], "com.google.gson.functional.FieldNamingTest::testLowerCaseWithDashes": [572, 575, 594, 596], "com.google.gson.functional.FieldNamingTest::testUpperCamelCaseWithSpaces": [572, 575, 594, 596], "com.google.gson.functional.FieldNamingTest::testUpperCamelCase": [572, 575, 594, 596], "com.google.gson.functional.FieldNamingTest::testLowerCaseWithUnderscores": [572, 575, 594, 596], "com.google.gson.functional.FieldNamingTest::testIdentity": [572, 575, 594, 596], "com.google.gson.functional.FieldExclusionTest::testDefaultInnerClassExclusion": [572, 575, 594, 596], "com.google.gson.functional.FieldExclusionTest::testInnerClassExclusion": [572, 575, 594, 596], "com.google.gson.functional.FieldExclusionTest::testDefaultNestedStaticClassIncluded": [572, 575, 594, 596], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ExposeFieldsTest::testNoExposedFieldSerialization": [572, 575, 594, 596], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationSerialization": [572, 575, 594, 596], "com.google.gson.functional.ExposeFieldsTest::testNullExposeFieldSerialization": [572, 575, 594, 596], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldSerialization": [572, 575, 594, 596], "com.google.gson.functional.ExposeFieldsTest::testArrayWithOneNullExposeFieldObjectSerialization": [572, 575, 594, 596], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 490, 530, 533, 553, 554, 555, 653, 661, 877, 878, 879, 880, 896, 917, 918, 941, 944], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 877, 878, 879, 880, 896, 917, 918, 941, 944], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserialization": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 765, 766, 789, 793, 794, 844, 846, 877, 878, 879, 880, 896], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerialization": [572, 575, 594, 596], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 484, 490, 491, 492, 493, 498, 499, 500, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerialization": [594, 596], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserializationDoesNotImpactSerialization": [594, 596], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactSerialization": [572, 575, 594, 596], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 572, 575, 594, 595, 596, 640, 653, 661, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 572, 575, 594, 595, 596, 640, 653, 661, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 572, 575, 594, 595, 596, 640, 653, 661, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.EscapingTest::testEscapeAllHtmlCharacters": [572, 575, 594, 596], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 572, 575, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.EnumTest::testTopLevelEnumSerialization": [572, 575, 594, 596], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 572, 575, 594, 595, 596, 640, 653, 661, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.EnumTest::testClassWithEnumFieldSerialization": [572, 575, 594, 596], "com.google.gson.functional.EnumTest::testCollectionOfEnumsDeserialization": [720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.EnumTest::testEnumSubclass": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 572, 575, 594, 595, 596, 640, 653, 661, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 594, 596, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.EnumTest::testCollectionOfEnumsSerialization": [572, 575, 594, 596], "com.google.gson.functional.EnumTest::testEnumSet": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 572, 575, 594, 595, 596, 640, 653, 661, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.EnumTest::testEnumSubclassAsParameterizedType": [572, 575, 594, 596, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 484, 490, 491, 492, 493, 498, 499, 500, 572, 575, 594, 595, 596, 640, 653, 661, 720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 877, 878, 879], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 484, 490, 491, 492, 493, 498, 499, 500, 572, 575, 594, 595, 596, 640, 653, 661, 720, 722, 789, 792, 793, 843, 844, 873, 875, 877, 878, 879], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguageCountry": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testBitSetSerialization": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBuilderDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBuilderSerialization": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonNullDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 419, 420, 428, 765, 766, 789, 793, 794, 844, 846, 877, 878, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullSerialization": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testUuidDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testUriSerialization": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleSerializationWithLanguageCountryVariant": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleSerializationWithLanguageCountry": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateSerialization": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 572, 575, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultCalendarSerialization": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonPrimitiveDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 420, 428, 765, 766, 789, 793, 794, 844, 846, 877, 878, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguageCountryVariant": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlDateSerialization": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 419, 420, 428, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlSerialization": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 594, 595, 596, 640, 653, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlDateDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonNullSerialization": [594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetSerialization": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonArraySerialization": [594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguage": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 877, 878, 879, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimeSerialization": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationWithPattern": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationWithPatternNotOverridenByTypeAdapter": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testClassDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldSerialization": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigDecimalTypeAdapter": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 594, 595, 596, 640, 653, 765, 766, 789, 793, 794, 844, 846, 877, 878, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testUriDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonPrimitiveSerialization": [594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 765, 789, 793, 844, 877, 878, 879, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBufferDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultCalendarDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateSerializationUsingBuilder": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 572, 575, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBufferSerialization": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigIntegerTypeAdapter": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 594, 595, 596, 640, 653, 765, 766, 789, 793, 794, 844, 846, 877, 878, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonArrayDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 419, 420, 428, 765, 766, 789, 793, 794, 844, 846, 877, 878, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testBitSetDeserialization": [572, 575, 594, 596, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultGregorianCalendarSerialization": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldSerialization": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimeDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testClassSerialization": [572, 575, 594, 595, 596, 640, 661, 665, 667], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesSerialization": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testNullJsonElementSerialization": [594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonObjectDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 419, 420, 428, 765, 766, 789, 793, 794, 844, 846, 877, 878, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonObjectSerialization": [594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampSerialization": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultGregorianCalendarDeserialization": [720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleSerializationWithLanguage": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testSetSerialization": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testUuidSerialization": [572, 575, 594, 596], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 513, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementSerialization": [572, 575, 594, 596], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementSerializationWithType": [594, 596], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArraySerializer": [572, 575, 594, 596], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomTypeAdapterDoesNotAppliesToSubClasses": [572, 575, 594, 596], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementSerialization": [572, 575, 594, 596], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 572, 575, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass": [572, 575, 594, 596], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomSerializerInvokedForPrimitives": [594, 596], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomSerializers": [572, 575, 594, 596], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementSerializationWithType": [594, 596], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomSerializerNotInvokedForNullValues": [572, 575, 594, 596], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedSerializers": [572, 575, 594, 596], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 530, 533, 553, 554, 555, 653, 661], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 530, 533, 553, 554, 555, 653, 661], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 530, 533, 553, 554, 555, 653, 661], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 530, 533, 553, 554, 555, 653, 661], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 530, 533, 553, 554, 555, 653, 661], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 420, 428, 484, 490, 491, 492, 493, 498, 499, 572, 575, 594, 595, 596, 640, 653, 661, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [120, 123, 135, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 419, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896, 941, 944], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [120, 123, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 484, 490, 491, 492, 493, 498, 499, 572, 575, 594, 595, 596, 640, 653, 661, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CollectionTest::testUserCollectionTypeAdapter": [594, 596], "com.google.gson.functional.CollectionTest::testCollectionOfStringsSerialization": [572, 575, 594, 596], "com.google.gson.functional.CollectionTest::testVector": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 572, 575, 594, 596, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CollectionTest::testPriorityQueue": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 572, 575, 594, 596, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CollectionTest::testCollectionOfObjectWithNullSerialization": [572, 575, 594, 596], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 572, 575, 594, 595, 596, 640, 653, 661, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CollectionTest::testStack": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 572, 575, 594, 596, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CollectionTest::testTopLevelCollectionOfIntegersDeserialization": [720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CollectionTest::testQueueDeserialization": [720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CollectionTest::testRawCollectionSerialization": [572, 575, 594, 596], "com.google.gson.functional.CollectionTest::testTopLevelCollectionOfIntegersSerialization": [594, 596], "com.google.gson.functional.CollectionTest::testNullsInListSerialization": [594, 596], "com.google.gson.functional.CollectionTest::testQueueSerialization": [594, 596], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CollectionTest::testSetSerialization": [572, 575, 594, 596], "com.google.gson.functional.CollectionTest::testSetDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CollectionTest::testCollectionOfObjectSerialization": [572, 575, 594, 596], "com.google.gson.functional.CollectionTest::testRawCollectionOfIntegersSerialization": [572, 575, 594, 596], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionSerilaization": [572, 575, 594, 596], "com.google.gson.functional.CollectionTest::testCollectionOfBagOfPrimitivesSerialization": [572, 575, 594, 596], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CollectionTest::testLinkedListSerialization": [594, 596], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 408, 412, 413, 415, 416, 417, 418, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.CircularReferenceTest::testSelfReferenceIgnoredInSerialization": [572, 575, 594, 596], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphSerialization": [572, 575, 594, 596], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ArrayTest::testMixingTypesInObjectArraySerialization": [572, 575, 594, 596], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ArrayTest::testNullsInArraySerialization": [572, 575, 594, 596], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ArrayTest::testInvalidArrayDeserialization": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 894, 896], "com.google.gson.functional.ArrayTest::testObjectArrayWithNonPrimitivesSerialization": [572, 575, 594, 596], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ArrayTest::testSingleNullInArraySerialization": [572, 575, 594, 596], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsSerialization": [572, 575, 594, 596], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysSerialization": [572, 575, 594, 596], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ArrayTest::testSingleStringArraySerialization": [572, 575, 594, 596], "com.google.gson.functional.ArrayTest::testMultiDimenstionalObjectArraysSerialization": [572, 575, 594, 596], "com.google.gson.functional.ArrayTest::testArrayOfCollectionSerialization": [594, 596], "com.google.gson.functional.ArrayTest::testArrayOfStringsSerialization": [572, 575, 594, 596], "com.google.gson.functional.ArrayTest::testArrayOfNullSerialization": [572, 575, 594, 596], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsSerialization": [572, 575, 594, 596], "com.google.gson.functional.ArrayTest::testNullsInArrayWithSerializeNullPropertySetSerialization": [572, 575, 594, 596], "com.google.gson.functional.ArrayTest::testArrayElementsAreArrays": [572, 575, 594, 596], "com.google.gson.functional.ArrayTest::testEmptyArraySerialization": [572, 575, 594, 596], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 428, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideStringAdapter": [594, 596, 765, 766, 789, 793, 794, 844, 846, 879, 880, 896], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverridePrimitiveBooleanAdapter": [594, 596, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideWrapperBooleanAdapter": [594, 596, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.ObjectTypeAdapterTest::testSerialize": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 513], "com.google.gson.ObjectTypeAdapterTest::testDeserializeNullValue": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 513], "com.google.gson.ObjectTypeAdapterTest::testSerializeObject": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 513], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 513], "com.google.gson.ObjectTypeAdapterTest::testSerializeNullValue": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 513], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 875, 877, 878, 879, 880, 896], "com.google.gson.MixedStreamTest::testReadNulls": [872, 877, 896], "com.google.gson.MixedStreamTest::testWriteInvalidState": [661, 665, 667], "com.google.gson.MixedStreamTest::testWriteClosed": [661, 665, 667], "com.google.gson.MixedStreamTest::testWriteNulls": [730], "com.google.gson.MixedStreamTest::testWriteDoesNotMutateState": [654, 656, 665, 666], "com.google.gson.MixedStreamTest::testReadInvalidState": [875, 879, 891, 896], "com.google.gson.MixedStreamTest::testWriteLenient": [316, 317, 661, 665, 667], "com.google.gson.MixedStreamTest::testReaderDoesNotMutateState": [872, 896], "com.google.gson.MixedStreamTest::testReadClosed": [875, 891, 896], "com.google.gson.LongSerializationPolicyTest::testStringLongSerializationIntegration": [594, 596], "com.google.gson.LongSerializationPolicyTest::testDefaultLongSerializationIntegration": [594, 596], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [120, 123, 186, 199, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 413, 415, 416, 417, 419, 420, 425, 428, 572, 575, 594, 595, 596, 640, 653, 661, 877, 878, 879, 880, 896, 917, 918, 941, 944], "com.google.gson.JsonObjectTest::testPropertyWithQuotes": [679, 681], "com.google.gson.JsonObjectTest::testWritePropertyWithEmptyStringName": [679, 681], "com.google.gson.JavaSerializationTest::testMapIsSerializable": [720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.JavaSerializationTest::testNumberIsSerializable": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 413, 415, 416, 417, 420, 428, 720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.JavaSerializationTest::testListIsSerializable": [720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 572, 575, 594, 595, 596, 640, 653, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 877, 878, 879, 880, 896], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterDoesNotAffectNonAdaptedTypes": [572, 575, 594, 596, 720, 722, 765, 766, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896], "com.google.gson.GsonTypeAdapterTest::testDefaultTypeAdapterThrowsParseException": [720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 879, 891, 896], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [120, 123, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 394, 397, 399, 400, 406, 407, 415, 416, 417, 419, 420, 428, 572, 575, 595, 640, 653, 661, 665, 667, 720, 722, 765, 789, 792, 793, 843, 844, 873, 875, 877, 878, 879, 891, 896], "com.google.gson.GsonBuilderTest::testTransientFieldExclusion": [572, 575, 594, 596], "com.google.gson.GsonBuilderTest::testExcludeFieldsWithModifiers": [572, 575, 594, 596], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 553, 554, 555, 653, 661], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 553, 554, 555, 653, 661], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 420, 428, 553, 554, 555, 653, 661], "com.google.gson.DefaultInetAddressTypeAdapterTest::testInetAddressSerializationAndDeserialization": [120, 123, 186, 206, 209, 210, 213, 216, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 392, 393, 397, 399, 400, 406, 407, 415, 416, 417, 419, 420, 428, 572, 575, 594, 595, 596, 640, 653, 765, 766, 789, 793, 794, 844, 846, 877, 878, 879, 880, 896], "com.google.gson.CommentsTest::testParseComments": [720, 722, 789, 792, 793, 794, 843, 844, 846, 873, 875, 879, 880, 896]}, "com.google.gson.JsonElement": {"com.google.gson.internal.bind.JsonTreeWriterTest::testArray": [321, 325], "com.google.gson.internal.bind.JsonTreeWriterTest::testSerializeNullsTrue": [321, 325], "com.google.gson.internal.bind.JsonTreeWriterTest::testSerializeNullsFalse": [321, 325], "com.google.gson.internal.bind.JsonTreeWriterTest::testObject": [321, 325], "com.google.gson.internal.bind.JsonTreeWriterTest::testLenientNansAndInfinities": [321, 325], "com.google.gson.internal.bind.JsonTreeWriterTest::testNestedObject": [321, 325], "com.google.gson.internal.bind.JsonTreeWriterTest::testNestedArray": [321, 325], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [55, 74, 87, 88], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [46, 55, 64, 74, 87, 88, 103, 104, 119, 120], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [74], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [74], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [74], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [74], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [74], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [74], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [55, 74, 87, 88], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [74], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [55, 74, 87, 88], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [55, 74, 87, 88], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [55, 74, 87, 88], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [55, 74, 87, 88], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [74], "com.google.gson.functional.JsonArrayTest::testSameAddition": [321, 325], "com.google.gson.functional.JsonArrayTest::testBooleanPrimitiveAddition": [321, 325], "com.google.gson.functional.JsonArrayTest::testIntegerPrimitiveAddition": [321, 325], "com.google.gson.functional.JsonArrayTest::testDoublePrimitiveAddition": [321, 325], "com.google.gson.functional.JsonArrayTest::testNullPrimitiveAddition": [321, 325], "com.google.gson.functional.JsonArrayTest::testCharPrimitiveAddition": [321, 325], "com.google.gson.functional.JsonArrayTest::testStringPrimitiveAddition": [321, 325], "com.google.gson.functional.JsonArrayTest::testMixedPrimitiveAddition": [321, 325], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [74], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [55, 74, 87, 88], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [46, 55, 74, 87, 88, 103, 104], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [55, 74, 87, 88], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [55, 74, 87, 88], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [46, 55, 74, 87, 88, 103, 104], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [55, 74, 87, 88], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [55, 74, 87, 88], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [74], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [74], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [74], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [74], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [74], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [74], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [74], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [74], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [74], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [74], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [55, 74, 87, 88], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [74], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [46, 55, 64, 74, 87, 88, 119, 120], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [46, 55, 64, 74, 87, 88, 103, 104, 119, 120], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [74], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [46, 55, 64, 74, 87, 88, 119, 120], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [46, 55, 64, 74, 87, 88, 119, 120], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [74], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [74], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [55, 74, 87, 88], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [74], "com.google.gson.LongSerializationPolicyTest::testDefaultLongSerialization": [64, 119, 120], "com.google.gson.LongSerializationPolicyTest::testStringLongSerialization": [64, 119, 120], "com.google.gson.JsonPrimitiveTest::testValidJsonOnToString": [321, 325], "com.google.gson.JsonParserTest::testParseUnquotedStringArrayFails": [46, 103, 104], "com.google.gson.JsonParserTest::testParseEmptyString": [64], "com.google.gson.JsonParserTest::testParseReader": [55, 87, 88], "com.google.gson.JsonParserTest::testParseEmptyWhitespaceInput": [74], "com.google.gson.JsonParserTest::testParseMixedArray": [46, 103, 104, 321, 325], "com.google.gson.JsonParserTest::testParseUnquotedMultiWordStringFails": [74], "com.google.gson.JsonParserTest::testParseString": [55, 87, 88], "com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName": [55, 87, 88], "com.google.gson.JsonObjectTest::testAddingNullPropertyValue": [74], "com.google.gson.JsonObjectTest::testDeepCopy": [46, 103, 104], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [74], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [74], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [55, 74, 87, 88]}, "com.google.gson.internal.bind.TimeTypeAdapter": {"com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimeDeserialization": [40, 51, 57]}, "com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper": {"com.google.gson.functional.UncategorizedTest::testTrailingWhitespace": [40], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [33, 35, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [40], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [40], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [33, 34, 35, 40, 52, 53, 54, 55, 56, 58, 68, 75, 77, 79], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [34, 40], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [33, 35, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [33, 35, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [40], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [40], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [34, 40], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [40], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [40], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [34, 40], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [40], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [33, 35, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [33, 35, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.PrimitiveTest::testStringsAsBooleans": [40], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [40], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [40], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [40], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [33, 34, 35, 40, 52, 53, 54, 55, 68, 75, 77, 79], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [33, 34, 35, 40, 52, 53, 54, 55, 68, 75, 77, 79], "com.google.gson.functional.ObjectTest::testTruncatedDeserialization": [40], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [34, 40], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [40], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [40], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [40], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [34, 40], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [40], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [33, 35, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [33, 34, 35, 52, 53, 54, 55, 56, 59, 65, 68, 75, 77, 79], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [34, 52, 68], "com.google.gson.functional.MapTest::testMapDeserialization": [34, 40], "com.google.gson.functional.MapTest::testConcurrentHashMap": [34, 40], "com.google.gson.functional.MapTest::testSortedMap": [34, 40], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [34, 40], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [34, 40], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [34, 40], "com.google.gson.functional.MapTest::testBooleanKeyDeserialization": [40], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [34, 40], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [34, 40], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [34, 40], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [34, 40], "com.google.gson.functional.MapTest::testHashMapDeserialization": [34, 40], "com.google.gson.functional.MapTest::testDeerializeMapOfMaps": [40], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [40], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [34, 40], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [34, 40], "com.google.gson.functional.MapTest::testComplexKeysDeserialization": [40], "com.google.gson.functional.MapTest::testStringKeyDeserialization": [40], "com.google.gson.functional.MapTest::testNumberKeyDeserialization": [40], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [34, 40], "com.google.gson.functional.MapTest::testConcurrentMap": [34, 40], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [34, 40], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [33, 34, 35, 40, 52, 53, 54, 55, 68, 75, 77, 79], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [33, 34, 35, 40, 52, 53, 54, 55, 68, 75, 77, 79], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [34, 40], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [34, 40], "com.google.gson.functional.LeniencyTest::testLenientFromJson": [40], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [33, 35, 53, 54, 55, 68, 75, 77, 79], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [33, 35, 53, 54, 55, 68, 75, 77, 79], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [33, 35, 53, 54, 55, 68, 75, 77, 79], "com.google.gson.functional.JsonParserTest::testExtraCommasInMaps": [40], "com.google.gson.functional.JsonParserTest::testParseInvalidJson": [40], "com.google.gson.functional.JsonParserTest::testExtraCommasInArrays": [40], "com.google.gson.functional.JavaUtilTest::testProperties": [34, 40], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForCollectionType": [40], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [34, 40], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [68], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [33, 34, 35, 52, 53, 54, 55, 56, 59, 65, 68, 75, 77, 79], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [68], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [33, 34, 35, 53, 54, 55, 56, 59, 65, 68, 75, 77, 79], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [33, 34, 35, 52, 53, 54, 55, 56, 59, 65, 68, 75, 77, 79], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [68], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [34, 40], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [33, 34, 35, 52, 53, 54, 55, 68, 75, 77, 79], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [33, 35, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [33, 35, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [33, 35, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [40], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [33, 34, 35, 40, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.EnumTest::testCollectionOfEnumsDeserialization": [40], "com.google.gson.functional.EnumTest::testEnumSubclass": [33, 35, 40, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.EnumTest::testEnumSet": [33, 34, 35, 40, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.EnumTest::testEnumSubclassAsParameterizedType": [40], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [34, 40, 52, 68], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [33, 34, 35, 40, 52, 53, 54, 55, 56, 58, 68, 75, 77, 79], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [34, 40], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [34, 40], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [34, 40], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [34, 40], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [34, 40], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [33, 35, 53, 54, 55, 56, 58, 68, 75, 77, 79], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [33, 34, 35, 52, 53, 54, 55, 56, 58, 68, 75, 77, 79], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [34, 52, 68], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [33, 34, 35, 53, 54, 55, 56, 59, 62, 68, 75, 77, 79], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [34, 40], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [34, 52, 68], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [34, 40], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [34, 40], "com.google.gson.functional.CollectionTest::testVector": [34, 40], "com.google.gson.functional.CollectionTest::testPriorityQueue": [34, 40], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [33, 34, 35, 40, 52, 53, 54, 55, 68, 75, 77, 79], "com.google.gson.functional.CollectionTest::testStack": [34, 40], "com.google.gson.functional.CollectionTest::testTopLevelCollectionOfIntegersDeserialization": [40], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [34, 40], "com.google.gson.functional.CollectionTest::testQueueDeserialization": [40], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [40], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [34, 40], "com.google.gson.functional.CollectionTest::testSetDeserialization": [34, 40], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [34, 40], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [34, 40], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [40], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [34, 40], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [40], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [40], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [40], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [40], "com.google.gson.functional.ArrayTest::testInvalidArrayDeserialization": [40], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [40], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [40], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [40], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [40], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [40], "com.google.gson.MixedStreamTest::testWriteLenient": [68], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [33, 35, 53, 54, 55, 75, 77, 79], "com.google.gson.JavaSerializationTest::testMapIsSerializable": [40], "com.google.gson.JavaSerializationTest::testNumberIsSerializable": [34, 40], "com.google.gson.JavaSerializationTest::testListIsSerializable": [40], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [68], "com.google.gson.CommentsTest::testParseComments": [40]}, "com.google.gson.JsonObject": {"com.google.gson.internal.bind.JsonElementReaderTest::testObject": [33, 57, 132], "com.google.gson.internal.bind.JsonElementReaderTest::testNestedObjects": [33, 57, 132], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [33, 57, 152], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [33, 57, 132, 152], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [33, 57, 132], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [33, 57, 132], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [33, 57, 152], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [33, 57, 152], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [33, 57, 152], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [33, 57, 132], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [33, 57, 132], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [33, 57, 132], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [33, 57, 142], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [33, 57, 68, 79, 122, 132], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [33, 57, 79, 90, 122, 132], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [33, 57, 79, 90, 122, 132], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [33, 57, 79, 90, 122, 132], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [33, 57, 152], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [33, 57, 152], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [33, 57, 152], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [33, 57, 152], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [33, 57, 152], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [33, 57, 152], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [33, 57, 132, 152], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [33, 57, 132], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [33, 57, 152], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [33, 57, 79, 122, 132, 152], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [33, 57, 79, 122, 132, 152], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [33, 57, 79, 122, 132, 152], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [33, 57, 79, 122, 132, 152], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [33, 57, 132, 152], "com.google.gson.JsonParserTest::testParseReader": [33, 57, 152], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [33, 57, 132], "com.google.gson.JsonParserTest::testParseString": [33, 57, 152], "com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName": [33, 57, 152], "com.google.gson.JsonObjectTest::testAddingAndRemovingObjectProperties": [33, 57, 68, 142, 152], "com.google.gson.JsonObjectTest::testAddingStringProperties": [33, 57, 79, 122, 142, 152], "com.google.gson.JsonObjectTest::testAddingNullPropertyValue": [33, 54, 55, 57, 142, 152], "com.google.gson.JsonObjectTest::testAddingNullOrEmptyPropertyName": [57], "com.google.gson.JsonObjectTest::testAddingBooleanProperties": [33, 57, 101, 122, 142, 152], "com.google.gson.JsonObjectTest::testDeepCopy": [33, 38, 39, 40, 42, 57, 152], "com.google.gson.JsonObjectTest::testEqualsNonEmptyObject": [33, 187], "com.google.gson.JsonObjectTest::testAddingCharacterProperties": [33, 57, 112, 122, 142, 152], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [33, 132], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [33, 132], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [33, 57, 142]}, "com.google.gson.internal.bind.MapTypeAdapterFactory": {"com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [118, 119, 120], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [118, 119, 120], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [118, 119, 120], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [118, 119, 120], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [118, 119, 120], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [118, 119, 120], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [118, 119, 120], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [116, 118, 119, 120, 123, 124, 126, 131, 133], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [116, 118, 119, 120, 123, 124, 126, 131, 133], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [118, 119, 120], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [118, 119, 120], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [118, 119, 120], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [118, 119, 120], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [118, 119, 120], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [118, 119, 120, 131, 133], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [116, 118, 119, 120, 123, 124, 126, 131, 133], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [116, 118, 119, 120, 123, 124, 126, 131, 133], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [116, 118, 119, 120, 123, 124, 126, 131, 133], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [116, 118, 119, 120, 123, 124, 126, 131, 133], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [118, 119, 120, 131, 133], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [116, 118, 119, 120, 123, 124, 126, 131, 133], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [118, 119, 120], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [118, 119, 120], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [118, 119, 120], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [118, 119, 120], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [118, 119, 120], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [118, 119, 120], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [118, 119, 120], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [118, 119, 120], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [118, 119, 120], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [118, 119, 120], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [118, 119, 120], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [118, 119, 120], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [118, 119, 120], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [118, 119, 120], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [112, 116, 118, 119, 120, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [112, 116, 118, 119, 120, 123, 124, 126, 131, 133], "com.google.gson.functional.MapTest::testMapDeserialization": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testConcurrentHashMap": [111, 116, 118, 119, 123, 124, 125, 126, 127, 131, 133, 140], "com.google.gson.functional.MapTest::testSortedMap": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [111, 116, 118, 119, 123, 124, 125, 126, 127, 131, 133, 140], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testHashMapDeserialization": [111, 116, 118, 119, 123, 124, 125, 126, 127, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [111, 116, 118, 119, 123, 124, 125, 126, 127, 131, 133, 140], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testConcurrentMap": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [112, 116, 118, 119, 120, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [112, 116, 118, 119, 120, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [116, 118, 119, 120, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [118, 119, 120], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [118, 119, 120], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [118, 119, 120], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [118, 119, 120], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [118, 119, 120], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [118, 119, 120], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [118, 119, 120], "com.google.gson.functional.JavaUtilTest::testCurrency": [118, 119, 120], "com.google.gson.functional.JavaUtilTest::testProperties": [111, 116, 118, 119, 124, 125, 126, 127, 131, 133, 140], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [118, 119, 120], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [118, 119, 120], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [118, 119, 120], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [118, 119, 120], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [118, 119, 120], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [118, 119, 120], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [118, 119, 120], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [118, 119, 120], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [118, 119, 120], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [118, 119, 120], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [118, 119, 120], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [118, 119, 120], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [118, 119, 120], "com.google.gson.functional.EnumTest::testEnumSubclass": [118, 119, 120], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [118, 119, 120], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [118, 119, 120], "com.google.gson.functional.EnumTest::testEnumSet": [118, 119, 120], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [118, 119, 120], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [118, 119, 120], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [118, 119, 120], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [118, 119, 120], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [111, 116, 118, 119, 124, 125, 126, 127, 131, 133, 140], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [118, 119, 120], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [118, 119, 120], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [118, 119, 120], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [118, 119, 120], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [118, 119, 120], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [118, 119, 120], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [118, 119, 120], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [118, 119, 120], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [118, 119, 120], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [118, 119, 120], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [118, 119, 120], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [118, 119, 120], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [118, 119, 120], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [118, 119, 120], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [118, 119, 120], "com.google.gson.functional.CollectionTest::testSetDeserialization": [118, 119, 120], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [118, 119, 120], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [118, 119, 120], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [118, 119, 120], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [112, 118, 119, 131, 133], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [112, 118, 119, 131, 133], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [112, 118, 119, 131, 133]}, "com.google.gson.internal.bind.DateTypeAdapter": {"com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [41, 49, 51, 55, 59, 64], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [41, 49, 51, 55, 59, 64], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [41, 49, 51, 55, 59, 64]}, "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory": {"com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 140, 145, 146, 147, 148, 150, 154, 155, 157, 160], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [89, 91, 96], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [89, 91, 96], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 140, 145, 146, 147, 148, 150, 154, 155, 157, 160], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [89, 91, 96], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 140, 145, 146, 147, 148, 150, 154, 155, 157, 160], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 140, 145, 146, 147, 148, 150, 154, 155, 157, 160], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 140, 145, 146, 147, 148, 150, 154, 155, 157, 160], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 140, 145, 146, 147, 148, 150, 154, 155, 157, 160], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [89, 91, 96], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 140, 145, 146, 147, 148, 150, 154, 155, 157, 160], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [55, 57, 61, 65, 70, 75, 76, 77, 81, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [55, 57, 61, 65, 70, 75, 76, 77, 81, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [55, 89, 91, 95, 96], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 81, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [55, 57, 61, 65, 70, 75, 76, 77, 81, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [55, 57, 61, 65, 70, 75, 76, 77, 81, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 150, 155, 156, 157, 158, 160, 162, 163, 165, 166], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.JavaUtilTest::testCurrency": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 153, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 153, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 153, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [55, 89, 91, 95, 96], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [55, 89, 91, 95, 96], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 140, 145, 146, 147, 148, 150, 154, 155, 157, 160], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.CollectionTest::testSetDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 139, 140, 145, 146, 147, 148, 149, 150, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 160, 162, 170, 171, 173], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [55, 57, 61, 65, 70, 75, 76, 77, 85, 89, 91, 95, 96, 104, 130, 131, 135, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 170, 171, 173]}, "com.google.gson.TreeTypeAdapter": {"com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [44, 51, 54, 55, 58, 96], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [43, 44, 45, 51, 54, 55, 58, 62, 66, 70, 71, 105], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [44, 51, 54, 55, 58, 105], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [44, 51, 54, 55, 58, 96], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [44, 51, 54, 55, 58, 96], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [44, 51, 54, 55, 58, 96], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [44, 51, 54, 55, 58, 96], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [44, 51, 54, 55, 58, 95, 96], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [44, 46, 51, 54, 55, 58, 95, 96], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [44, 51, 54, 55, 58, 96], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [44, 51, 54, 55, 58, 96], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [44, 45, 46, 47, 51, 52, 75, 76, 96], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [44, 51, 54, 55, 58, 105], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [44, 46, 51, 54, 55, 58, 85], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [44, 46, 51, 54, 55, 58, 85], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [44, 51, 54, 55, 58, 85], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [44, 46, 51, 54, 55, 58, 85], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [44, 51, 54, 55, 58, 96], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [44, 51, 54, 55, 58, 95, 96], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [44, 46, 51, 54, 55, 58, 105], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [44, 51, 54, 95, 96], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [44, 51, 54, 55, 58, 95, 96], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [44, 51, 54, 55, 58, 96], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [44, 51, 54, 55, 58, 96], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [44, 51, 54, 55, 58, 95, 96], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [43, 62, 66, 70, 71, 95, 96], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [43, 62, 66, 70, 71, 95, 96], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [43, 62, 66, 70, 71, 96], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [43, 62, 66, 70, 71, 95, 96], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [43, 62, 66, 70, 71, 95, 96], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [43, 44, 45, 46, 47, 51, 54, 55, 58, 62, 63, 75, 76, 95, 96], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [44, 51, 54, 95, 96], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [44, 51, 54, 55, 58, 96], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [44, 51, 54, 95, 96], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [44, 45, 51, 54, 55, 58, 95, 96], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [43, 44, 45, 46, 47, 51, 54, 55, 58, 62, 63, 75, 76, 95, 96], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [44, 51, 54, 95, 96], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [44, 51, 54, 55, 58, 96], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [43, 44, 51, 54, 55, 58, 62, 66, 70, 95, 96]}, "com.google.gson.internal.bind.CollectionTypeAdapterFactory": {"com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [47, 48, 49], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [47, 48, 49], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [47, 48, 49], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [47, 48, 49], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [47, 48, 49], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [47, 48, 49], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [47, 48, 49], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [47, 48, 49, 57, 58], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [47, 48, 49, 57, 58], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [47, 48, 49], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [47, 48, 49, 57, 58], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [47, 48, 49, 57, 58], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [47, 48, 49, 57, 58], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [47, 48, 49, 57, 58], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [47, 48, 49], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [47, 48, 49], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [45, 47, 48, 49, 52, 53], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [45, 47, 48, 49, 52, 53], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [47, 48, 49], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [45, 47, 48, 49, 52, 53], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [47, 48, 49], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [47, 48, 49], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [47, 48, 49], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [47, 48, 49], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [47, 48, 49], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [47, 48, 49], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [47, 48, 49], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [47, 48, 49], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [47, 48, 49], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [47, 48, 49], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [47, 48, 49], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [47, 48, 49], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [47, 48, 49], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [40, 45, 47, 48, 49, 52, 53, 54, 57, 58], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [47, 48, 49], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [40, 45, 47, 48, 49, 52, 53, 54, 57, 58], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [47, 48, 49], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [47, 48, 49], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [47, 48, 49], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [47, 48, 49], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [47, 48, 49], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [47, 48, 49], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [47, 48, 49], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [47, 48, 49], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [47, 48, 49], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [47, 48, 49], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [47, 48, 49], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [47, 48, 49], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [47, 48, 49], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [47, 48, 49], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.MapTest::testMapDeserialization": [47, 48, 49], "com.google.gson.functional.MapTest::testConcurrentHashMap": [47, 48, 49], "com.google.gson.functional.MapTest::testSortedMap": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [47, 48, 49], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [47, 48, 49], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [47, 48, 49], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [47, 48, 49], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [47, 48, 49], "com.google.gson.functional.MapTest::testHashMapDeserialization": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [47, 48, 49], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [47, 48, 49], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [47, 48, 49], "com.google.gson.functional.MapTest::testConcurrentMap": [47, 48, 49], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [47, 48, 49], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [47, 48, 49], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [47, 48, 49], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [47, 48, 49], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [47, 48, 49], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [47, 48, 49], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [47, 48, 49], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [47, 48, 49], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [47, 48, 49], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [47, 48, 49], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [47, 48, 49], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [47, 48, 49], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [47, 48, 49], "com.google.gson.functional.JavaUtilTest::testCurrency": [47, 48, 49], "com.google.gson.functional.JavaUtilTest::testProperties": [47, 48, 49], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [47, 48, 49], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [47, 48, 49], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [47, 48, 49], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [40, 45, 47, 48, 52, 53, 54, 57, 58], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [47, 48, 49], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [47, 48, 49], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [47, 48, 49], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [47, 48, 49], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [47, 48, 49], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [47, 48, 49], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [47, 48, 49], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [47, 48, 49], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [47, 48, 49], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [47, 48, 49], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [47, 48, 49], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [47, 48, 49], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [47, 48, 49], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [47, 48, 49], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [47, 48, 49], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [47, 48, 49], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [40, 45, 47, 48, 52, 53, 54, 57, 58], "com.google.gson.functional.EnumTest::testEnumSubclass": [40, 45, 47, 48, 49, 52, 53, 54, 57, 58], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [47, 48, 49], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [47, 48, 49], "com.google.gson.functional.EnumTest::testEnumSet": [40, 45, 47, 48, 49, 52, 53, 54, 57, 58], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [47, 48, 49], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [47, 48, 49], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [47, 48, 49], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [47, 48, 49], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [47, 48, 49], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [47, 48, 49], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [40, 45, 47, 48, 52, 53, 54, 57, 58], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [47, 48, 49], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [47, 48, 49], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [47, 48, 49], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [47, 48, 49], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [47, 48, 49], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [47, 48, 49], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [47, 48, 49], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [47, 48, 49], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [47, 48, 49], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [47, 48, 49], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [47, 48, 49], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [47, 48, 49], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testVector": [40, 45, 47, 48, 52, 53, 54, 57, 58], "com.google.gson.functional.CollectionTest::testPriorityQueue": [40, 45, 47, 48, 52, 53, 54, 57, 58], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testStack": [40, 45, 47, 48, 52, 53, 54, 57, 58], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [40, 45, 47, 48, 49, 52, 53, 54, 57, 58], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testSetDeserialization": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [40, 47, 48, 54, 57, 58], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [45, 47, 48, 49, 52, 53, 57, 58], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [47, 48, 49], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [47, 48, 49], "com.google.gson.JavaSerializationTest::testNumberIsSerializable": [45, 47, 48, 52, 53, 57, 58], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [47, 48, 49], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [47, 48, 49], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [47, 48, 49]}, "com.google.gson.TypeAdapter": {"com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [284, 285], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [186], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [234], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [234], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [186], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [186], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [186], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [186], "com.google.gson.ObjectTypeAdapterTest::testSerialize": [215, 221], "com.google.gson.ObjectTypeAdapterTest::testDeserializeNullValue": [259, 260, 273], "com.google.gson.ObjectTypeAdapterTest::testSerializeObject": [215, 221], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [259, 260, 273], "com.google.gson.ObjectTypeAdapterTest::testSerializeNullValue": [215, 221]}, "com.google.gson.JsonStreamParser": {"com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [69, 70, 82, 87, 105], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [69, 70, 82, 87, 105], "com.google.gson.JsonStreamParserTest::testParseTwoStrings": [61, 69, 70, 82, 87, 105], "com.google.gson.JsonStreamParserTest::testNoSideEffectForHasNext": [61, 69, 70, 87, 105], "com.google.gson.JsonStreamParserTest::testIterator": [61, 69, 70, 87, 105], "com.google.gson.JsonStreamParserTest::testCallingNextBeyondAvailableInput": [61, 69, 70, 82, 83, 87, 105]}, "com.google.gson.JsonParser": {"com.google.gson.internal.bind.JsonElementReaderTest::testArray": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testWrongType": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbers": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testObject": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testBooleans": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testStrictNansAndInfinities": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testLenientNansAndInfinities": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbersFromStrings": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testSkipValue": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testStrings": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testStringsFromNumbers": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testNestedObjects": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [58, 59, 63, 82, 84, 90], "com.google.gson.JsonParserTest::testParseUnquotedStringArrayFails": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.JsonParserTest::testParseEmptyString": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.JsonParserTest::testParseUnquotedSingleWordStringFails": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.JsonParserTest::testParseReader": [58, 59, 63, 82, 84, 90], "com.google.gson.JsonParserTest::testParseEmptyWhitespaceInput": [45, 58, 59, 63, 84, 90], "com.google.gson.JsonParserTest::testParseInvalidJson": [45, 58, 59, 82, 84, 90], "com.google.gson.JsonParserTest::testParseMixedArray": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.JsonParserTest::testParseUnquotedMultiWordStringFails": [45, 58, 59, 60, 65, 81, 82, 84, 90], "com.google.gson.JsonParserTest::testParseString": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName": [45, 58, 59, 63, 82, 84, 90]}, "com.google.gson.internal.bind.TypeAdapters": {"com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [854, 867], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [854, 867], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [854, 867], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [854, 867], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [854, 867], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [854, 867], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [854, 867], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [854, 867], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [854, 867], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [854, 867], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical": [854, 901], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [901], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [854, 867], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [854, 867], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [854, 867], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [854, 867], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [854, 867], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [854, 867], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [854, 867], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [854, 867], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [854, 867], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [854, 867], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [854, 867], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [854, 867], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [854, 867], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [854, 867], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [854, 867], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [854, 867], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [854, 867], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [854, 867], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [854, 867], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [854, 867], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [854, 867], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [854, 867], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [854, 867], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [854, 867], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [854, 867], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [854, 867], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [854, 867], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [854, 867], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [854, 867], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [854, 867], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [854, 867], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [854, 867], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [854, 867], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [854, 867], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [854, 867], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [854, 867], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [854, 867], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [854, 867], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [854, 867], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [854, 867], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [854, 867], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [854, 867], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [854, 867], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [854, 867], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [854, 867], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [854, 867], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [854, 867], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [854, 867], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [854, 867], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [854, 867], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [854, 867], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [854, 867], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [854, 867], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [854, 867], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [854, 867], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [854, 867], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [854, 867], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [854, 867], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [854, 867], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [854, 867], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [854, 867], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [854, 867], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [854, 867], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [854, 867], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [854, 867], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [854, 867], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [854, 867], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [854, 867], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [854, 867], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [854, 867], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [854, 867], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [854, 867], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [854, 867], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [854, 867], "com.google.gson.functional.MapTest::testMapDeserialization": [854, 867], "com.google.gson.functional.MapTest::testConcurrentHashMap": [854, 867], "com.google.gson.functional.MapTest::testSortedMap": [854, 867], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [854, 867], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [854, 867], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [854, 867], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [854, 867], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [854, 867], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [854, 867], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [854, 867], "com.google.gson.functional.MapTest::testHashMapDeserialization": [854, 867], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [854, 867], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [854, 867], "com.google.gson.functional.MapTest::testConcurrentNavigableMap": [854, 867], "com.google.gson.functional.MapTest::testConcurrentMap": [854, 867], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [854, 867], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [854, 867], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [854, 867], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [854, 867], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [854, 867], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [854, 867], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [854, 867], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [854, 867], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [854, 867], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [854, 867], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [854, 867], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [854, 867], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [854, 867], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [854, 867], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [854, 867], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [854, 867], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [854, 867], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [854, 867], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [854, 867], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [854, 867], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [854, 867], "com.google.gson.functional.JavaUtilTest::testCurrency": [854, 867], "com.google.gson.functional.JavaUtilTest::testProperties": [854, 867], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArray": [854, 867], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLong": [854, 867], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [854, 867], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicIntegerArray": [854, 867], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongArrayWithStringSerializationPolicy": [854, 867], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicInteger": [854, 867], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicBoolean": [854, 867], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [854, 867], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [854, 867], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [854, 867], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [854, 867], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [854, 867], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [854, 867], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [854, 867], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [854, 867], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [854, 867], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [854, 867], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [854, 867], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [854, 867], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [854, 867], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [854, 867], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [854, 867], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [854, 867], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [867], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [854, 867], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [854, 867], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [854, 867], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [854, 867], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [854, 867], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [854, 867], "com.google.gson.functional.EnumTest::testEnumSubclass": [854, 867], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [854, 867], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [854, 867], "com.google.gson.functional.EnumTest::testEnumSet": [854, 867], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [854, 867], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [854, 867], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [854, 867], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonNullDeserialization": [854], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [854, 867], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonPrimitiveDeserialization": [854], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [854, 867], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [854, 867], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigDecimalTypeAdapter": [854], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch": [854], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [854, 867], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [854, 867], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [854, 867], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [854, 867], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [854, 867], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigIntegerTypeAdapter": [854], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonArrayDeserialization": [854], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonObjectDeserialization": [854], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [854, 867], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [854, 867], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [854, 867], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [854, 867], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [854, 867], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [854, 867], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [854, 867], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [854, 867], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [854, 867], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [854, 867], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [854, 867], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [854, 867], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [854, 867], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [854, 867], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [854, 867], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [854, 867], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [854, 867], "com.google.gson.functional.CollectionTest::testVector": [854, 867], "com.google.gson.functional.CollectionTest::testPriorityQueue": [854, 867], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [854, 867], "com.google.gson.functional.CollectionTest::testStack": [854, 867], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [854, 867], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [854, 867], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [854, 867], "com.google.gson.functional.CollectionTest::testSetDeserialization": [854, 867], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [854, 867], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [854, 867], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [854, 867], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [854, 867], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [854, 867], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [854, 867], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [854, 867], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [854, 867], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [854, 867], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [854, 867], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [854, 867], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [854, 867], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [854, 867], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [854, 867], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [854, 867], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [854, 867], "com.google.gson.JavaSerializationTest::testNumberIsSerializable": [854, 867], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [854, 867], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [854, 867], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [854, 867], "com.google.gson.DefaultInetAddressTypeAdapterTest::testInetAddressSerializationAndDeserialization": [854, 867]}, "com.google.gson.internal.Streams": {"com.google.gson.internal.bind.JsonElementReaderTest::testArray": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testWrongType": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbers": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testObject": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testBooleans": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testStrictNansAndInfinities": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testLenientNansAndInfinities": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbersFromStrings": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testSkipValue": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testStrings": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testStringsFromNumbers": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testNestedObjects": [46, 48], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [48], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [46, 48, 72], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [48], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [48], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [48], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [48], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [48], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [46, 48], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [48], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [48], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [48], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [48], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [46, 48], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [46, 48], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [48], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [48], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [48], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [48], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [48], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [46, 48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [46, 48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [46, 48], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [72], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [72], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [72], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [72], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [72], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [48], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [48], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [48], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [46, 48], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [48], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [46, 48], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [48], "com.google.gson.JsonStreamParserTest::testParseTwoStrings": [48], "com.google.gson.JsonStreamParserTest::testNoSideEffectForHasNext": [48], "com.google.gson.JsonStreamParserTest::testIterator": [48], "com.google.gson.JsonStreamParserTest::testCallingNextBeyondAvailableInput": [48], "com.google.gson.JsonParserTest::testParseUnquotedStringArrayFails": [46, 48], "com.google.gson.JsonParserTest::testParseEmptyString": [46, 48], "com.google.gson.JsonParserTest::testParseUnquotedSingleWordStringFails": [46, 48], "com.google.gson.JsonParserTest::testParseReader": [46, 48], "com.google.gson.JsonParserTest::testParseInvalidJson": [46, 47, 48, 54, 58], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [46, 48], "com.google.gson.JsonParserTest::testParseMixedArray": [46, 48], "com.google.gson.JsonParserTest::testParseUnquotedMultiWordStringFails": [46, 48], "com.google.gson.JsonParserTest::testParseString": [46, 48], "com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName": [46, 48], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [48], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [48]}, "com.google.gson.internal.bind.JsonTreeReader": {"com.google.gson.internal.bind.JsonElementReaderTest::testArray": [50, 54, 59, 60, 65, 66, 87, 88, 91, 92, 93, 94, 95, 96, 99, 100, 103, 105, 107, 108, 130, 134, 197, 198, 199], "com.google.gson.internal.bind.JsonElementReaderTest::testWrongType": [50, 54, 59, 60, 64, 65, 66, 70, 76, 87, 91, 92, 93, 94, 95, 96, 99, 100, 105, 107, 108, 109, 110, 111, 112, 130, 134, 138, 139, 144, 152, 153, 154, 156, 160, 165, 170, 171, 172, 174, 183, 184, 185, 187, 193, 194, 195, 197], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbers": [50, 54, 59, 60, 87, 91, 92, 93, 94, 95, 96, 99, 130, 134, 170, 174, 179, 183, 187, 188, 189, 193, 197, 198, 199], "com.google.gson.internal.bind.JsonElementReaderTest::testObject": [50, 54, 71, 72, 77, 78, 87, 88, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 109, 110, 111, 113, 115, 116, 130, 134, 145, 146, 147, 148, 197, 198, 199], "com.google.gson.internal.bind.JsonElementReaderTest::testBooleans": [50, 54, 59, 60, 87, 91, 92, 93, 94, 95, 96, 99, 130, 134, 138, 160, 161], "com.google.gson.internal.bind.JsonElementReaderTest::testStrictNansAndInfinities": [50, 54, 59, 60, 87, 91, 92, 93, 94, 95, 96, 99, 130, 134, 156, 170, 174, 175, 176], "com.google.gson.internal.bind.JsonElementReaderTest::testLenientNansAndInfinities": [50, 54, 59, 60, 87, 91, 92, 93, 94, 95, 96, 99, 130, 134, 170, 174, 178, 179], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbersFromStrings": [50, 54, 59, 60, 87, 91, 92, 93, 94, 95, 96, 99, 130, 134, 170, 174, 179, 183, 187, 188, 189, 193, 197, 198, 199], "com.google.gson.internal.bind.JsonElementReaderTest::testSkipValue": [50, 54, 59, 60, 87, 91, 92, 93, 94, 95, 96, 99, 100, 130, 134, 152, 156, 208, 211], "com.google.gson.internal.bind.JsonElementReaderTest::testEarlyClose": [50, 54, 60, 87, 91, 92, 105, 107, 109, 120, 122, 123, 130, 203, 204], "com.google.gson.internal.bind.JsonElementReaderTest::testStrings": [50, 54, 59, 60, 87, 91, 92, 93, 94, 95, 96, 99, 130, 134, 152, 156], "com.google.gson.internal.bind.JsonElementReaderTest::testStringsFromNumbers": [50, 54, 59, 60, 87, 91, 92, 93, 94, 95, 96, 99, 130, 134, 152, 156], "com.google.gson.internal.bind.JsonElementReaderTest::testNestedObjects": [50, 54, 71, 72, 77, 78, 130, 134, 145, 146, 147, 148], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [50, 54, 59, 60, 65, 66, 71, 72, 77, 78, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 99, 100, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 130, 134, 145, 146, 147, 148, 156], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [50, 54, 59, 60, 65, 66, 71, 72, 77, 78, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 99, 100, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 130, 134, 145, 146, 147, 148, 156, 178, 198], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [50, 54, 87, 91, 92, 105, 107, 109, 110, 111, 112, 130, 134, 156], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [50, 54, 71, 72, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 130, 134, 145, 146, 147, 148, 156, 161, 188, 198], "com.google.gson.functional.PrimitiveTest::testPrimitiveClassLiteral": [50, 54, 87, 91, 92, 105, 107, 109, 110, 111, 113, 115, 116, 130, 197, 199], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [50, 54, 71, 72, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 109, 110, 111, 112, 130, 134, 156, 178, 221, 222, 223, 224], "com.google.gson.functional.JsonParserTest::testBadTypeForDeserializingCustomTree": [50, 54, 70, 87, 91, 92, 105, 107, 108, 130, 138, 139], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [50, 54, 71, 72, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 130, 134, 145, 146, 147, 148, 156, 188, 198], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [50, 54, 71, 72, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 130, 134, 145, 146, 147, 148, 156, 198], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [50, 54, 71, 72, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 130, 134, 145, 146, 147, 148, 156, 183, 184, 185, 198], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [50, 54, 70, 71, 72, 77, 78, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 130, 134, 138, 139, 145, 146, 147, 148, 198, 208, 211], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [50, 54, 71, 72, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 130, 134, 145, 146, 147, 148, 188, 208, 211], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [50, 54, 71, 72, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 130, 134, 145, 146, 147, 148, 188, 208, 211], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [50, 54, 71, 72, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 109, 110, 111, 112, 130, 134, 145, 146, 147, 148, 156, 208, 211], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [50, 54, 71, 72, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 130, 134, 145, 146, 147, 148, 156, 161, 188, 198]}, "com.google.gson.internal.bind.SqlDateTypeAdapter": {"com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlDateDeserialization": [38, 51, 57]}, "com.google.gson.internal.ConstructorConstructor": {"com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 88, 89, 94, 99, 103, 123, 134, 178, 213, 218], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 88, 89, 94, 99, 103, 123, 134, 178, 213, 218], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 88, 89, 94, 99, 103, 123, 134, 178, 213, 218], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 88, 89, 94, 99, 103, 123, 134, 178, 213, 218], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 88, 89, 94, 99, 103, 123, 134, 178, 213, 218], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [52, 56, 62, 63, 64], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [52, 56, 62, 63, 64], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.MapTest::testConcurrentHashMap": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.MapTest::testConcurrentSkipListMap": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.MapTest::testHashMapDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterWrappedInNullSafeAsRequested": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.JavaUtilTest::testCurrency": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.JavaUtilTest::testProperties": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.JavaUtilConcurrentAtomicTest::testAtomicLongWithStringSerializationPolicy": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [52, 56, 57, 62, 63, 73, 75, 76], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 99, 123, 134, 135, 141, 142], "com.google.gson.functional.EnumTest::testEnumSubclass": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 99, 123, 134, 135, 141, 142], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.EnumTest::testEnumSet": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 90, 99, 123, 134, 135, 141, 142], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [52, 56, 57, 62, 63, 73, 75, 83, 84, 88, 89, 94, 99, 123, 134, 178, 213, 218], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CollectionTest::testVector": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CollectionTest::testPriorityQueue": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 88, 89, 94, 99, 103, 123, 134, 178, 213, 218], "com.google.gson.functional.CollectionTest::testStack": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CollectionTest::testSetDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 99], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [52, 56, 57, 62, 63, 73, 75, 83, 84, 85, 99, 103]}, "com.google.gson.internal.LinkedTreeMap": {"com.google.gson.internal.bind.JsonElementReaderTest::testObject": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 154, 159, 161, 166, 167, 169, 180, 430, 431], "com.google.gson.internal.bind.JsonElementReaderTest::testNestedObjects": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 154, 159, 161, 166, 167, 169, 180, 430, 431], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 175, 180, 186, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416, 430, 431], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 154, 159, 161, 166, 167, 169, 180, 430, 431], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 175, 180, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416, 430, 431], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 161, 166, 167, 169, 170, 171, 180, 186], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 155, 161, 166, 167, 169, 170, 171, 180, 186], "com.google.gson.functional.MapTest::testMapDeserialization": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 161, 166, 167, 169, 170, 173, 180, 186], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [60, 72, 94, 95, 96, 97, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [48, 60, 72, 78, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 177, 180, 186], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 161, 166, 167, 169, 170, 171, 180, 186], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [48, 60, 72, 78, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 177, 180, 186], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [52, 60, 94, 96, 123, 126, 154, 159, 161, 166, 180, 430, 431], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [48, 60, 72, 78, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 177, 180, 186], "com.google.gson.functional.MapTest::testMapDeserializationEmpty": [48, 60, 78], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [48, 60, 72, 94, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 161, 166, 167, 169, 170, 171, 175, 177, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416, 430, 431], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [48, 60, 72, 94, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 161, 166, 167, 169, 170, 171, 175, 177, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416, 430, 431], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [60, 72, 87, 94, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 155, 161, 166, 167, 169, 170, 171, 175, 186, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [52, 60, 72, 94, 96, 111, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 173, 175, 180, 186, 218, 219, 223, 224, 226, 261, 264, 268, 277, 278, 279, 285, 291, 292, 293, 296, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 347, 348, 354, 362, 363, 375, 385, 388, 402, 405, 408, 413, 416, 417, 430, 431], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 154, 159, 161, 166, 167, 169, 180, 430, 431], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 180, 430, 431], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 154, 159, 161, 166, 167, 169, 180, 430, 431], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 154, 155, 161, 166, 167, 180, 186], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 173, 175, 180, 186, 285, 291, 292, 296, 299, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 329, 330, 336, 354, 362, 363, 375, 385, 388, 402, 413, 416, 430, 431], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 173, 180, 430, 431], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [48, 60, 72, 78, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 177, 180, 186], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 159, 161, 166, 167, 180, 186, 430, 431], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 159, 161, 166, 167, 180, 186, 430, 431], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 159, 161, 166, 167, 180, 186, 430, 431], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 159, 161, 166, 167, 180, 186, 430, 431], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 180, 186, 430, 431], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 175, 180, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416, 430, 431], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [48, 60, 72, 78, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 161, 166, 167, 169, 170, 173, 175, 177, 180, 186, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 326, 336, 354, 362, 363, 375, 385, 388], "com.google.gson.JsonParserTest::testParseReader": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 161, 166, 167, 169, 170, 173, 180, 186], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 175, 180, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416, 430, 431], "com.google.gson.JsonParserTest::testParseString": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 161, 166, 167, 169, 170, 173, 180, 186], "com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.JsonObjectTest::testAddingAndRemovingObjectProperties": [60, 72, 82, 83, 87, 94, 96, 111, 112, 122, 123, 126, 129, 134, 139, 140, 154, 155, 161, 166, 167, 180, 186, 223, 224, 226, 261, 264, 268, 277, 278, 279, 281, 285, 291, 299], "com.google.gson.JsonObjectTest::testAddingStringProperties": [60, 72, 82, 83, 87, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.JsonObjectTest::testAddingNullPropertyValue": [60, 72, 82, 83, 87, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.JsonObjectTest::testAddingNullOrEmptyPropertyName": [91, 92], "com.google.gson.JsonObjectTest::testAddingBooleanProperties": [60, 72, 82, 83, 87, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.JsonObjectTest::testDeepCopy": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 159, 161, 166, 167, 180, 186, 430, 431], "com.google.gson.JsonObjectTest::testAddingCharacterProperties": [60, 72, 82, 83, 87, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [48, 60, 430, 431], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [48, 60, 430, 431], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [60, 72, 87, 94, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 186]}, "com.google.gson.internal.bind.JsonTreeWriter": {"com.google.gson.internal.bind.JsonTreeWriterTest::testArray": [49, 68, 76, 82, 83, 95, 96], "com.google.gson.internal.bind.JsonTreeWriterTest::testPrematureClose": [49, 97, 195, 196], "com.google.gson.internal.bind.JsonTreeWriterTest::testStrictNansAndInfinities": [163, 164], "com.google.gson.internal.bind.JsonTreeWriterTest::testSerializeNullsTrue": [49, 68, 76, 82, 83, 114, 115], "com.google.gson.internal.bind.JsonTreeWriterTest::testSerializeNullsFalse": [49, 68, 76, 82, 83, 114, 115], "com.google.gson.internal.bind.JsonTreeWriterTest::testObject": [49, 68, 76, 82, 83, 114, 115], "com.google.gson.internal.bind.JsonTreeWriterTest::testLenientNansAndInfinities": [49, 68, 76, 82, 83, 95, 96], "com.google.gson.internal.bind.JsonTreeWriterTest::testNestedObject": [49, 68, 76, 82, 83, 114, 115], "com.google.gson.internal.bind.JsonTreeWriterTest::testEmptyWriter": [55, 68], "com.google.gson.internal.bind.JsonTreeWriterTest::testWriteAfterClose": [49, 72, 76, 82, 85, 86, 89, 95, 96, 97, 105, 106, 107, 198], "com.google.gson.internal.bind.JsonTreeWriterTest::testStrictBoxedNansAndInfinities": [176, 180, 181, 182, 183], "com.google.gson.internal.bind.JsonTreeWriterTest::testNestedArray": [49, 68, 76, 82, 83, 95, 96], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [49, 68, 72, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 95, 96, 97, 114, 115, 116, 124, 125, 126, 136, 137, 138, 145, 148, 176, 187], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 124, 125, 126, 136, 137, 138, 176, 187], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 124, 125, 126, 136, 137, 138, 145, 148], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148, 158, 176, 187], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148, 158, 176, 187], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 158, 176, 187], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [49, 68, 72, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 95, 96, 97, 114, 115, 116, 124, 125, 126, 136, 137, 138, 145, 146, 148, 153], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [49, 68, 72, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 95, 96, 97, 114, 115, 116, 124, 125, 126, 136, 137, 138, 145, 146, 148, 153], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148, 176, 187], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [49, 68, 72, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 95, 96, 97, 114, 115, 116, 124, 125, 126, 136, 137, 138, 145, 148], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [49, 68, 76, 82, 83, 153], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [49, 68, 76, 82, 83, 114, 115], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [49, 68, 76, 82, 83, 114, 115], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148]}}