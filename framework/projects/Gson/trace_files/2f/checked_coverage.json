{"com.google.gson.JsonParser": {"com.google.gson.internal.bind.JsonElementReaderTest::testStrings": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testWrongType": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbersFromStrings": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testSkipValue": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testStrictNansAndInfinities": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbers": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testBooleans": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testObject": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testStringsFromNumbers": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testArray": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testNestedObjects": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.internal.bind.JsonElementReaderTest::testLenientNansAndInfinities": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [58, 59, 63, 82, 84, 90], "com.google.gson.JsonParserTest::testParseUnquotedSingleWordStringFails": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.JsonParserTest::testParseUnquotedMultiWordStringFails": [45, 58, 59, 60, 65, 81, 82, 84, 90], "com.google.gson.JsonParserTest::testParseInvalidJson": [45, 58, 59, 82, 84, 90], "com.google.gson.JsonParserTest::testParseMixedArray": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.JsonParserTest::testParseString": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.JsonParserTest::testParseEmptyString": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.JsonParserTest::testParseReader": [58, 59, 63, 82, 84, 90], "com.google.gson.JsonParserTest::testParseUnquotedStringArrayFails": [45, 58, 59, 63, 82, 84, 90], "com.google.gson.JsonParserTest::testParseEmptyWhitespaceInput": [45, 58, 59, 63, 84, 90], "com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName": [45, 58, 59, 63, 82, 84, 90]}, "com.google.gson.internal.Excluder": {"com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [63, 70, 71, 72, 112, 113, 114, 116, 117, 150, 151, 154, 156, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216, 229, 233, 234, 235, 239, 243, 244, 245, 246, 249], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [63, 70, 71, 72, 112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216, 229, 233, 239, 243, 249], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [63, 70, 71, 72, 112, 113, 114, 116, 117, 150, 151, 154, 156, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216, 229, 233, 234, 235, 236, 239, 243, 244, 245, 246, 249], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [63, 70, 71, 72, 112, 113, 114, 116, 117, 150, 151, 154, 156, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216, 229, 233, 234, 235, 236, 239, 243, 244, 245, 249], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassDeserialization": [63, 70, 71, 112, 113, 114, 116, 120, 192, 194, 229, 233, 234, 235, 236], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 160, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testHashMapDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testSortedMap": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [63, 91, 92, 93, 112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 164, 165, 166, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [63, 91, 92, 93, 112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 164, 165, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [63, 98, 103, 104, 106, 108, 112, 113, 114, 116, 117, 120, 150, 151, 154, 159, 163, 170, 174, 178, 179, 180, 181, 182, 183, 188, 192, 197, 201, 205, 206, 207, 208, 212, 216], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [63, 98, 103, 104, 106, 108, 112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 180, 181, 182, 183, 188, 192, 197, 201, 205, 206, 207, 208, 212, 216], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [63, 98, 99, 100, 101, 108, 112, 113, 114, 116, 117, 120, 150, 151, 154, 159, 163, 170, 174, 178, 179, 180, 181, 182, 183, 188, 192, 197, 201, 205, 206, 207, 208, 212, 216], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [63, 98, 99, 100, 101, 112, 113, 114, 116, 120, 192, 197, 201, 205, 206, 207, 208, 212, 216], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserialization": [63, 98, 103, 104, 106, 112, 113, 114, 116, 120, 192, 197, 201, 205, 206, 207, 208, 212, 216], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testEnumSet": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testEnumSubclass": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigIntegerTypeAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigDecimalTypeAdapter": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [112, 113, 114, 116, 117, 150, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testSetDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [112, 113, 114, 116, 117, 150, 151, 154, 159, 163, 170, 174, 178, 179, 188, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.JavaSerializationTest::testNumberIsSerializable": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.JavaSerializationTest::testListIsSerializable": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216], "com.google.gson.DefaultInetAddressTypeAdapterTest::testInetAddressSerializationAndDeserialization": [112, 113, 114, 116, 117, 192, 197, 201, 205, 206, 212, 216]}, "com.google.gson.internal.bind.CollectionTypeAdapterFactory": {"com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [46, 47, 48], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [46, 47, 48], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [46, 47, 48], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [46, 47, 48], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [46, 47, 48], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [46, 47, 48], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [46, 47, 48], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [46, 47, 48, 56, 57], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [46, 47, 48, 56, 57], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [46, 47, 48], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [44, 46, 47, 48, 51, 52, 56, 57], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [46, 47, 48, 56, 57], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [46, 47, 48, 56, 57], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [46, 47, 48, 56, 57], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [46, 47, 48, 56, 57], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [46, 47, 48], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [46, 47, 48], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [44, 46, 47, 48, 51, 52, 56, 57], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [44, 46, 47, 48, 51, 52], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [44, 46, 47, 48, 51, 52, 56, 57], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [44, 46, 47, 48, 51, 52], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [46, 47, 48], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [44, 46, 47, 48, 51, 52, 56, 57], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [44, 46, 47, 48, 51, 52, 56, 57], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [46, 47, 48], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [44, 46, 47, 48, 51, 52, 56, 57], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [44, 46, 47, 48, 51, 52, 56, 57], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [44, 46, 47, 48, 51, 52, 56, 57], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [44, 46, 47, 48, 51, 52, 56, 57], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [44, 46, 47, 48, 51, 52, 56, 57], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [44, 46, 47, 48, 51, 52], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [46, 47, 48], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [46, 47, 48], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [46, 47, 48], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [46, 47, 48], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [46, 47, 48], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [46, 47, 48], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [46, 47, 48], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [46, 47, 48], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [46, 47, 48], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [46, 47, 48], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [44, 46, 47, 48, 51, 52, 56, 57], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [40, 44, 46, 47, 48, 51, 52, 53, 56, 57], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [46, 47, 48], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [46, 47, 48], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [46, 47, 48], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [40, 44, 46, 47, 48, 51, 52, 53, 56, 57], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [44, 46, 47, 48, 51, 52, 56, 57], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [44, 46, 47, 48, 51, 52, 56, 57], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [46, 47, 48], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [46, 47, 48], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [46, 47, 48], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [46, 47, 48], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [46, 47, 48], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [46, 47, 48], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [46, 47, 48], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [46, 47, 48], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [46, 47, 48], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [46, 47, 48], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [46, 47, 48], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [46, 47, 48], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [46, 47, 48], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [46, 47, 48], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [46, 47, 48], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [46, 47, 48], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [46, 47, 48], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [46, 47, 48], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [46, 47, 48], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [46, 47, 48], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [46, 47, 48], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [46, 47, 48], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [46, 47, 48], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [46, 47, 48], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [46, 47, 48], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [46, 47, 48], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [46, 47, 48], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [46, 47, 48], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [46, 47, 48], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [46, 47, 48], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [46, 47, 48], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [46, 47, 48], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [44, 46, 47, 48, 51, 52, 56, 57], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [44, 46, 47, 48, 51, 52, 56, 57], "com.google.gson.functional.MapTest::testMapDeserialization": [46, 47, 48], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [46, 47, 48], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [46, 47, 48], "com.google.gson.functional.MapTest::testHashMapDeserialization": [46, 47, 48], "com.google.gson.functional.MapTest::testSortedMap": [46, 47, 48], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [46, 47, 48], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [46, 47, 48], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [46, 47, 48], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [46, 47, 48], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [46, 47, 48], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [46, 47, 48], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [46, 47, 48], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [46, 47, 48], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [46, 47, 48], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [46, 47, 48], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [46, 47, 48], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [46, 47, 48], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [46, 47, 48], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [46, 47, 48], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [46, 47, 48], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [46, 47, 48], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [46, 47, 48], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [46, 47, 48], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [46, 47, 48], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [46, 47, 48], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [46, 47, 48], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [46, 47, 48], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [46, 47, 48], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [46, 47, 48], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [46, 47, 48], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [40, 44, 46, 47, 51, 52, 53, 56, 57], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [46, 47, 48], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [46, 47, 48], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [46, 47, 48], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [44, 46, 47, 48, 51, 52, 56, 57], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [46, 47, 48], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [44, 46, 47, 48, 51, 52, 56, 57], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [46, 47, 48], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [46, 47, 48], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [46, 47, 48], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [46, 47, 48], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [46, 47, 48], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [46, 47, 48], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [46, 47, 48], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [46, 47, 48], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [46, 47, 48], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [46, 47, 48], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [46, 47, 48], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [46, 47, 48], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [46, 47, 48], "com.google.gson.functional.EnumTest::testEnumSet": [40, 44, 46, 47, 48, 51, 52, 53, 56, 57], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [46, 47, 48], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [46, 47, 48], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [46, 47, 48], "com.google.gson.functional.EnumTest::testEnumSubclass": [40, 44, 46, 47, 48, 51, 52, 53, 56, 57], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [40, 44, 46, 47, 51, 52, 53, 56, 57], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [44, 46, 47, 48, 51, 52, 56, 57], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [46, 47, 48], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [46, 47, 48], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [40, 44, 46, 47, 51, 52, 53, 56, 57], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [46, 47, 48], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [46, 47, 48], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [44, 46, 47, 51, 52, 56, 57], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [46, 47, 48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [44, 46, 47, 51, 52, 56, 57], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [46, 47, 48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [46, 47, 48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [46, 47, 48], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [46, 47, 48], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [46, 47, 48], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [46, 47, 48], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [46, 47, 48], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [46, 47, 48], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [46, 47, 48], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [46, 47, 48], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [46, 47, 48], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [46, 47, 48], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [44, 46, 47, 51, 52, 56, 57], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [40, 46, 47, 53, 56, 57], "com.google.gson.functional.CollectionTest::testSetDeserialization": [44, 46, 47, 48, 51, 52, 56, 57], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [44, 46, 47, 51, 52, 56, 57], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [40, 44, 46, 47, 48, 51, 52, 53, 56, 57], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [44, 46, 47, 51, 52, 56, 57], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [44, 46, 47, 48, 51, 52, 56, 57], "com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization": [44, 46, 47, 51, 52, 56, 57], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [44, 46, 47, 51, 52, 56, 57], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [44, 46, 47, 51, 52, 56, 57], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [44, 46, 47, 48, 51, 52, 56, 57], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [46, 47, 48], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [46, 47, 48], "com.google.gson.JavaSerializationTest::testNumberIsSerializable": [44, 46, 47, 51, 52, 56, 57], "com.google.gson.JavaSerializationTest::testListIsSerializable": [44, 46, 47, 51, 52, 56, 57], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [46, 47, 48], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [46, 47, 48], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [46, 47, 48]}, "com.google.gson.internal.Streams": {"com.google.gson.internal.bind.JsonElementReaderTest::testStrings": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testWrongType": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbersFromStrings": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testSkipValue": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testStrictNansAndInfinities": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbers": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testBooleans": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testObject": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testStringsFromNumbers": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testArray": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testNestedObjects": [46, 48], "com.google.gson.internal.bind.JsonElementReaderTest::testLenientNansAndInfinities": [46, 48], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [48], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [46, 48, 72], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [48], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [48], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [48], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [48], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [48], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [46, 48], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [48], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [48], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [48], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [48], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [48], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [46, 48], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [46, 48], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [48], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [48], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [48], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [48], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [48], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [46, 48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [46, 48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [48], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [46, 48], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [72], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [72], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [72], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [72], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [72], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [48], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [48], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [46, 48], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [48], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [48], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [46, 48], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [48], "com.google.gson.JsonStreamParserTest::testNoSideEffectForHasNext": [48], "com.google.gson.JsonStreamParserTest::testIterator": [48], "com.google.gson.JsonStreamParserTest::testParseTwoStrings": [48], "com.google.gson.JsonStreamParserTest::testCallingNextBeyondAvailableInput": [48], "com.google.gson.JsonParserTest::testParseUnquotedSingleWordStringFails": [46, 48], "com.google.gson.JsonParserTest::testParseUnquotedMultiWordStringFails": [46, 48], "com.google.gson.JsonParserTest::testParseInvalidJson": [46, 47, 48, 54, 58], "com.google.gson.JsonParserTest::testParseMixedArray": [46, 48], "com.google.gson.JsonParserTest::testParseString": [46, 48], "com.google.gson.JsonParserTest::testParseEmptyString": [46, 48], "com.google.gson.JsonParserTest::testParseReader": [46, 48], "com.google.gson.JsonParserTest::testParseUnquotedStringArrayFails": [46, 48], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [46, 48], "com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName": [46, 48], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [48], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [48]}, "com.google.gson.TreeTypeAdapter": {"com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [31, 44, 51, 54, 55, 58, 96], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [31, 43, 44, 45, 51, 54, 55, 58, 62, 66, 70, 71, 105], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [31, 44, 51, 54, 55, 58, 105], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [31, 44, 51, 54, 55, 58, 96], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [31, 44, 51, 54, 55, 58, 96], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [31, 44, 51, 54, 55, 58, 96], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [31, 44, 51, 54, 55, 58, 96], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [31, 44, 51, 54, 55, 58, 95, 96], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [31, 44, 46, 51, 54, 55, 58, 95, 96], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [31, 44, 51, 54, 55, 58, 96], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [31, 44, 51, 54, 55, 58, 96], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [31, 44, 45, 46, 47, 51, 52, 75, 76, 96], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [31, 44, 51, 54, 55, 58, 105], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [31, 44, 46, 51, 54, 55, 58, 85], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [31, 44, 51, 54, 55, 58, 85], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [31, 44, 46, 51, 54, 55, 58, 85], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [31, 44, 46, 51, 54, 55, 58, 85], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [31, 44, 51, 54, 55, 58, 96], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [31, 44, 51, 54, 55, 58, 96], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [31, 44, 51, 54, 55, 58, 95, 96], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [31, 44, 51, 54, 95, 96], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [31, 44, 51, 54, 55, 58, 95, 96], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [31, 44, 51, 54, 55, 58, 96], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [31, 44, 46, 51, 54, 55, 58, 105], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [31, 44, 51, 54, 55, 58, 95, 96], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [31, 43, 62, 66, 70, 71, 95, 96], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [31, 43, 62, 66, 70, 71, 95, 96], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [31, 43, 62, 66, 70, 71, 95, 96], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [31, 43, 62, 66, 70, 71, 96], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [31, 43, 62, 66, 70, 71, 95, 96], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [31, 44, 51, 54, 95, 96], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [31, 44, 51, 54, 95, 96], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [31, 43, 44, 45, 46, 47, 51, 54, 55, 58, 62, 63, 75, 76, 95, 96], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [31, 44, 45, 51, 54, 55, 58, 95, 96], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [31, 43, 44, 45, 46, 47, 51, 54, 55, 58, 62, 63, 75, 76, 95, 96], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [31, 44, 51, 54, 95, 96], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [31, 44, 51, 54, 55, 58, 96], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [31, 44, 51, 54, 55, 58, 96], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [31, 43, 44, 51, 54, 55, 58, 62, 66, 70, 95, 96]}, "com.google.gson.internal.bind.JsonTreeWriter": {"com.google.gson.internal.bind.JsonTreeWriterTest::testStrictBoxedNansAndInfinities": [176, 180, 181, 182, 183], "com.google.gson.internal.bind.JsonTreeWriterTest::testWriteAfterClose": [49, 72, 76, 82, 85, 86, 89, 95, 96, 97, 105, 106, 107, 198], "com.google.gson.internal.bind.JsonTreeWriterTest::testPrematureClose": [49, 97, 195, 196], "com.google.gson.internal.bind.JsonTreeWriterTest::testEmptyWriter": [55, 68], "com.google.gson.internal.bind.JsonTreeWriterTest::testSerializeNullsFalse": [49, 68, 76, 82, 83, 114, 115], "com.google.gson.internal.bind.JsonTreeWriterTest::testLenientNansAndInfinities": [49, 68, 76, 82, 83, 95, 96], "com.google.gson.internal.bind.JsonTreeWriterTest::testObject": [49, 68, 76, 82, 83, 114, 115], "com.google.gson.internal.bind.JsonTreeWriterTest::testArray": [49, 68, 76, 82, 83, 95, 96], "com.google.gson.internal.bind.JsonTreeWriterTest::testNestedObject": [49, 68, 76, 82, 83, 114, 115], "com.google.gson.internal.bind.JsonTreeWriterTest::testNestedArray": [49, 68, 76, 82, 83, 95, 96], "com.google.gson.internal.bind.JsonTreeWriterTest::testSerializeNullsTrue": [49, 68, 76, 82, 83, 114, 115], "com.google.gson.internal.bind.JsonTreeWriterTest::testStrictNansAndInfinities": [163, 164], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [49, 68, 72, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 95, 96, 97, 114, 115, 116, 124, 125, 126, 136, 137, 138, 145, 148, 176, 187], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 124, 125, 126, 136, 137, 138, 145, 148], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 124, 125, 126, 136, 137, 138, 176, 187], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 158, 176, 187], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148, 158, 176, 187], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148, 158, 176, 187], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [49, 68, 72, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 95, 96, 97, 114, 115, 116, 124, 125, 126, 136, 137, 138, 145, 146, 148, 153], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [49, 68, 72, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 95, 96, 97, 114, 115, 116, 124, 125, 126, 136, 137, 138, 145, 146, 148, 153], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148, 176, 187], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [49, 68, 72, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 95, 96, 97, 114, 115, 116, 124, 125, 126, 136, 137, 138, 145, 148], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [49, 68, 76, 82, 83, 153], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [49, 68, 72, 76, 77, 78, 79, 82, 83, 114, 115, 116, 136, 137, 138, 145, 148], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [49, 68, 76, 82, 83, 114, 115], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [49, 68, 76, 82, 83, 114, 115]}, "com.google.gson.JsonPrimitive": {"com.google.gson.internal.bind.JsonElementReaderTest::testStrings": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.internal.bind.JsonElementReaderTest::testWrongType": [65, 94, 102, 112, 146, 166, 176, 178, 181, 193, 238, 260], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbersFromStrings": [65, 94, 102, 112, 146, 176, 178, 181, 193, 238, 260], "com.google.gson.internal.bind.JsonElementReaderTest::testSkipValue": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.internal.bind.JsonElementReaderTest::testStrictNansAndInfinities": [65, 94, 102, 112, 146, 176, 178, 181, 193], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbers": [56, 94, 102, 146, 157, 193, 238, 260], "com.google.gson.internal.bind.JsonElementReaderTest::testBooleans": [47, 94, 102, 112, 122, 132, 133], "com.google.gson.internal.bind.JsonElementReaderTest::testObject": [56, 94, 102, 112, 146, 157, 166, 260], "com.google.gson.internal.bind.JsonElementReaderTest::testStringsFromNumbers": [56, 94, 102, 146, 157, 176, 177], "com.google.gson.internal.bind.JsonElementReaderTest::testArray": [56, 94, 102, 146, 157, 260], "com.google.gson.internal.bind.JsonElementReaderTest::testLenientNansAndInfinities": [65, 94, 102, 112, 146, 176, 178, 181, 193], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [56, 65, 94, 102, 112, 146, 157, 166, 176, 178, 181], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [56, 94, 102, 146, 157, 176, 177], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [56, 65, 94, 102, 112, 146, 166], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [56, 65, 94, 102, 112, 146, 166, 176, 178, 181], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [47, 56, 65, 94, 102, 112, 146, 166], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [65, 94, 102, 112, 146, 166, 176, 178, 181], "com.google.gson.functional.PrimitiveTest::testPrimitiveClassLiteral": [56, 94, 102, 112, 146, 157, 166, 260], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [56, 65, 94, 102, 112, 146, 157, 176, 178, 181, 260], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [56, 94, 102, 146, 157, 260], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [65, 94, 102, 166], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [85, 94, 102, 112, 146, 166], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [85, 94, 102, 112, 146, 166], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [56, 85, 94, 102, 112, 146, 166], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [85, 94, 102, 112, 146, 166], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [56, 65, 94, 102, 112, 146, 157, 166, 176, 178, 181, 238, 260], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [56, 65, 94, 102, 112, 146, 166], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [56, 94, 102, 146, 157, 260], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [56, 94, 102, 146, 157, 260], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [56, 94, 102, 146, 157, 260], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [65, 85, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [65, 85, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [65, 85, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [65, 85, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [65, 94, 102, 112, 146, 166, 176, 178, 181], "com.google.gson.LongSerializationPolicyTest::testDefaultLongSerialization": [56, 94, 102, 146, 157, 166, 238], "com.google.gson.LongSerializationPolicyTest::testStringLongSerialization": [65, 94, 102, 112, 146, 166, 176, 178, 181], "com.google.gson.JsonStreamParserTest::testNoSideEffectForHasNext": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.JsonStreamParserTest::testIterator": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.JsonStreamParserTest::testParseTwoStrings": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.JsonPrimitiveTest::testEqualsIntegerAndBigInteger": [56, 94, 102, 157, 306, 309, 312, 313, 316, 317, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testShortEqualsInteger": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testDeepCopy": [90], "com.google.gson.JsonPrimitiveTest::testIntegerEqualsLong": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testByteEqualsInteger": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testByteEqualsLong": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testParsingStringAsBoolean": [65, 94, 102, 112, 132, 136, 146, 176, 178, 181], "com.google.gson.JsonPrimitiveTest::testParsingStringAsNumber": [65, 94, 102, 112, 146, 176, 178, 181, 193, 204, 215, 227, 238, 249, 260, 265], "com.google.gson.JsonPrimitiveTest::testBoolean": [47, 56, 65, 94, 102, 112, 122, 132, 133, 136, 146, 157, 176, 177, 178, 181], "com.google.gson.JsonPrimitiveTest::testLongEqualsBigInteger": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testShortEqualsBigInteger": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testIntegerEqualsBigInteger": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testFloatEqualsDouble": [56, 94, 102, 157, 289, 293, 297, 298, 299, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testFloatEqualsBigDecimal": [56, 94, 102, 157, 289, 293, 297, 298, 299, 306, 309, 312, 313, 316, 319, 323, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testEquals": [47, 56, 65, 94, 102, 157, 306, 309, 312, 313, 316, 317, 319, 326, 334, 335, 336, 339], "com.google.gson.JsonPrimitiveTest::testExponential": [65, 94, 102, 112, 146, 176, 178, 181, 193, 204, 260], "com.google.gson.JsonPrimitiveTest::testShortEqualsLong": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testDoubleEqualsBigDecimal": [56, 94, 102, 157, 289, 293, 297, 298, 299, 306, 309, 312, 313, 316, 319, 323, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testEqualsDoesNotEquateStringAndNonStringTypes": [47, 56, 65, 94, 102, 306, 309, 312, 313, 316, 319, 326, 334, 339], "com.google.gson.JsonPrimitiveTest::testByteEqualsShort": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testByteEqualsBigInteger": [56, 94, 102, 157, 289, 293, 294, 295, 334, 335, 336], "com.google.gson.JsonPrimitiveTest::testStringsAndChar": [65, 75, 94, 97, 98, 102, 112, 146, 166, 176, 178, 181, 270], "com.google.gson.JsonParserTest::testParseUnquotedSingleWordStringFails": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.JsonParserTest::testParseMixedArray": [56, 65, 94, 102, 112, 146, 157, 176, 178, 181, 260], "com.google.gson.JsonParserTest::testParseString": [56, 65, 94, 102, 112, 146, 157, 176, 178, 181, 260], "com.google.gson.JsonParserTest::testParseEmptyString": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.JsonParserTest::testParseReader": [56, 65, 94, 102, 112, 146, 157, 176, 178, 181, 260], "com.google.gson.JsonParserTest::testParseUnquotedStringArrayFails": [65, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [47, 56, 65, 94, 102, 112, 146, 166], "com.google.gson.JsonObjectTest::testAddingStringProperties": [85, 94, 102, 112, 146, 176, 178, 181], "com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName": [47, 94, 102, 112, 122, 132, 133], "com.google.gson.JsonObjectTest::testAddingCharacterProperties": [85, 94, 97, 98, 112, 146, 176, 178, 181, 270], "com.google.gson.JsonObjectTest::testAddingBooleanProperties": [85, 94, 102, 112, 122, 132, 133], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [56, 94, 102, 146, 157, 260]}, "com.google.gson.Gson": {"com.google.gson.functional.VersioningTest::testVersionedUntilSerialization": [516, 519, 538, 540], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilSerialization": [516, 519, 538, 540], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.VersioningTest::testVersionedClassesSerialization": [516, 519, 538, 540], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesSerialization": [516, 519, 538, 540], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassSerialization": [516, 519, 538, 540], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassDeserialization": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 728, 729, 779, 781, 812, 813, 814, 815, 831], "com.google.gson.functional.UncategorizedTest::testStaticFieldsAreNotSerialized": [516, 519, 538, 540], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 369, 700, 724, 727, 728, 778, 779, 808, 810, 812, 813, 814, 829, 831], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 516, 519, 538, 539, 540, 584, 597, 605, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.UncategorizedTest::testTrailingWhitespace": [724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 359, 360, 361, 363, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.UncategorizedTest::testObjectEqualButNotSameSerialization": [516, 519, 538, 540], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 516, 519, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 369, 516, 519, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 369, 538, 539, 540, 584, 597, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [112, 115, 126, 133, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 497, 498, 499, 538, 539, 540, 584, 597, 605, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831, 876, 879], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 359, 360, 361, 363, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.TypeAdapterPrecedenceTest::testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter": [516, 519, 538, 540, 700, 701, 724, 728, 729, 779, 781, 814, 815, 831], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 359, 360, 361, 363, 516, 519, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 359, 360, 361, 363, 516, 519, 538, 539, 540, 584, 597, 700, 701, 724, 728, 729, 779, 781, 812, 813, 814, 815, 831], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 359, 360, 361, 363, 516, 519, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByStreaming": [516, 519, 538, 540, 700, 701, 724, 728, 729, 779, 781, 814, 815, 831], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreamingHierarchical": [516, 519, 538, 540, 700, 701, 724, 728, 729, 779, 781, 814, 815, 831], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 359, 360, 361, 363, 516, 519, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 359, 360, 361, 363, 516, 519, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.TreeTypeAdaptersTest::testSerializeId": [538, 540], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 369, 516, 519, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 369, 516, 519, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 516, 519, 538, 539, 540, 584, 597, 605, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ThrowableFunctionalTest::testSerializedNameOnExceptionFields": [516, 519, 538, 540], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 516, 519, 538, 539, 540, 584, 597, 605, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.StringTest::testEscapedCtrlNInStringDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.StringTest::testEscapingQuotesInStringDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.StringTest::testStringValueSerialization": [516, 519, 538, 540], "com.google.gson.functional.StringTest::testAssignmentCharDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.StringTest::testStringValueAsSingleElementArraySerialization": [516, 519, 538, 540], "com.google.gson.functional.StringTest::testSingleQuoteInStringSerialization": [516, 519, 538, 540, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.StringTest::testEscapedBackslashInStringSerialization": [516, 519, 538, 540], "com.google.gson.functional.StringTest::testEscapedCtrlNInStringSerialization": [516, 519, 538, 540], "com.google.gson.functional.StringTest::testJavascriptKeywordsInStringDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.StringTest::testEscapedCtrlRInStringDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.StringTest::testSingleQuoteInStringDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.StringTest::testStringValueDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.StringTest::testStringWithEscapedSlashDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.StringTest::testEscapingQuotesInStringSerialization": [516, 519, 538, 540, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.StringTest::testEscapedCtrlRInStringSerialization": [516, 519, 538, 540], "com.google.gson.functional.StringTest::testAssignmentCharSerialization": [516, 519, 538, 540], "com.google.gson.functional.StringTest::testEscapedBackslashInStringDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.StringTest::testJavascriptKeywordsInStringSerialization": [516, 519, 538, 540], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 457], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 457], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 457], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 457], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 457], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 457], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 457], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 457], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 457], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 457], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 457], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 457], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 457], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 457], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 457], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 457], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.SerializedNameTest::testFirstNameIsChosenForSerialization": [516, 519, 538, 540], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.SecurityTest::testNonExecutableJsonSerialization": [516, 519, 538, 540], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenSerialization": [516, 519, 538, 540], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 432, 434, 435, 442, 443, 444, 516, 519, 538, 539, 540, 584, 597, 605, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 751, 752, 754, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ReadersWritersTest::testTypeMismatchThrowsJsonSyntaxExceptionForReaders": [778, 779, 808, 810, 814, 826, 831], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 516, 519, 538, 539, 540, 584, 597, 605, 812, 813, 814, 815, 831, 852, 853, 876, 879], "com.google.gson.functional.ReadersWritersTest::testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls": [751, 752, 754, 808, 810, 814, 815, 831], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [516, 519, 538, 540, 814, 815, 831, 852, 853, 876, 879], "com.google.gson.functional.ReadersWritersTest::testTopLevelNullObjectDeserializationWithReader": [751, 752, 754, 808, 810, 814, 815, 831], "com.google.gson.functional.ReadersWritersTest::testTypeMismatchThrowsJsonSyntaxExceptionForStrings": [724, 727, 728, 778, 779, 808, 810, 814, 826, 831], "com.google.gson.functional.RawSerializationTest::testTwoLevelParameterizedObject": [516, 519, 538, 540], "com.google.gson.functional.RawSerializationTest::testCollectionOfObjects": [516, 519, 538, 540], "com.google.gson.functional.RawSerializationTest::testParameterizedObject": [516, 519, 538, 540], "com.google.gson.functional.RawSerializationTest::testCollectionOfPrimitives": [516, 519, 538, 540], "com.google.gson.functional.RawSerializationTest::testThreeLevelParameterizedObject": [516, 519, 538, 540], "com.google.gson.functional.PrintFormattingTest::testJsonObjectWithNullValues": [623, 625], "com.google.gson.functional.PrintFormattingTest::testJsonObjectWithNullValuesSerialized": [623, 625], "com.google.gson.functional.PrintFormattingTest::testCompactFormattingLeavesNoWhiteSpace": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testBigDecimalAsStringRepresentationDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testPrimitiveIntegerAutoboxedInASingleElementArraySerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testPrimitiveIntegerAutoboxedDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testReallyLongValuesSerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsLongPrimitive": [700, 724, 727, 728, 778, 779, 808, 810, 814, 826, 831], "com.google.gson.functional.PrimitiveTest::testFloatInfinitySerializationNotSupportedByDefault": [100, 299, 300, 516, 519, 539, 584, 605, 609, 611], "com.google.gson.functional.PrimitiveTest::testFloatNaNDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testDoubleNaNSerializationNotSupportedByDefault": [100, 299, 300, 516, 519, 539, 584, 605, 609, 611], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testBigDecimalNaNDeserializationNotSupported": [700, 724, 727, 728, 778, 779, 808, 810, 814, 831], "com.google.gson.functional.PrimitiveTest::testDeserializingNonZeroDecimalPointValuesAsIntegerFails": [700, 724, 727, 728, 778, 779, 808, 810, 814, 831], "com.google.gson.functional.PrimitiveTest::testQuotedStringSerializationAndDeserialization": [516, 519, 538, 540, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testReallyLongValuesDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testUnquotedStringDeserializationFails": [700, 701, 724, 727, 728, 729, 778, 779, 780, 781, 786, 790, 807, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testDoubleAsStringRepresentationDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testPrimitiveBooleanAutoboxedSerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatSerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testShortSerialization": [538, 540], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsDoubleWrapper": [700, 724, 727, 728, 778, 779, 808, 810, 814, 826, 831], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBigInteger": [700, 724, 727, 728, 778, 779, 808, 810, 814, 826, 831], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testNegativeInfinitySerializationNotSupportedByDefault": [100, 299, 300, 516, 519, 539, 584, 605, 609, 611], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsLong": [700, 724, 727, 728, 778, 779, 808, 810, 814, 831], "com.google.gson.functional.PrimitiveTest::testDoubleInfinitySerializationNotSupportedByDefault": [100, 299, 300, 516, 519, 539, 584, 605, 609, 611], "com.google.gson.functional.PrimitiveTest::testFloatNaNSerializationNotSupportedByDefault": [100, 299, 300, 516, 519, 539, 584, 605, 609, 611], "com.google.gson.functional.PrimitiveTest::testPrimitiveClassLiteral": [700, 701, 724, 727, 728, 729, 751, 752, 754, 778, 779, 781, 808, 810, 814, 815, 831, 852, 853, 876, 879], "com.google.gson.functional.PrimitiveTest::testLongAsStringDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testPrimitiveLongAutoboxedSerialization": [538, 540], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBigDecimal": [700, 724, 727, 728, 778, 779, 808, 810, 814, 826, 831], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsLongWrapper": [700, 724, 727, 728, 778, 779, 808, 810, 814, 826, 831], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBytePrimitive": [700, 724, 727, 728, 778, 779, 808, 810, 814, 826, 831], "com.google.gson.functional.PrimitiveTest::testDoubleInfinityDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testBadValueForBigIntegerDeserialization": [700, 724, 727, 728, 778, 779, 808, 810, 814, 831], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigIntegerSerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsFloat": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testPrimitiveLongAutoboxedDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testPrimitiveIntegerAutoboxedSerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testNumberSerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testByteDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testFloatInfinitySerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testDoubleNaNSerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testStringsAsBooleans": [724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testPrimitiveLongAutoboxedInASingleElementArraySerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsDoublePrimitive": [700, 724, 727, 728, 778, 779, 808, 810, 814, 826, 831], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsFloatWrapper": [700, 724, 727, 728, 778, 779, 808, 810, 814, 826, 831], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsNumber": [700, 724, 727, 728, 778, 779, 808, 810, 814, 831], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigIntegerDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testBigIntegerInASingleElementArraySerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testFloatNaNSerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testDoubleInfinitySerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testBigIntegerDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testBigDecimalPreservePrecisionSerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsBigIntegerFails": [700, 724, 727, 728, 778, 779, 808, 810, 814, 831], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBigDecimal": [700, 724, 727, 728, 778, 779, 808, 810, 814, 826, 831], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsNumber": [700, 724, 727, 728, 778, 779, 808, 810, 814, 831], "com.google.gson.functional.PrimitiveTest::testDoubleNoFractAsStringRepresentationDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsFloatPrimitive": [700, 724, 727, 728, 778, 779, 808, 810, 814, 826, 831], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsShortWrapper": [700, 724, 727, 728, 778, 779, 808, 810, 814, 826, 831], "com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testPrimitiveBooleanAutoboxedInASingleElementArraySerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatSerializationNotSupportedByDefault": [100, 299, 300, 516, 519, 539, 584, 605, 609, 611], "com.google.gson.functional.PrimitiveTest::testLargeDoubleDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testHtmlCharacterSerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsShortPrimitive": [700, 724, 727, 728, 778, 779, 808, 810, 814, 826, 831], "com.google.gson.functional.PrimitiveTest::testDeserializingDecimalPointValueZeroSucceeds": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsInteger": [700, 724, 727, 728, 778, 779, 808, 810, 814, 826, 831], "com.google.gson.functional.PrimitiveTest::testBigDecimalNegativeInfinityDeserializationNotSupported": [700, 724, 727, 728, 778, 779, 808, 810, 814, 831], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigDecimalDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testNumberDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsInteger": [700, 724, 727, 728, 778, 779, 808, 810, 814, 831], "com.google.gson.functional.PrimitiveTest::testBigDecimalDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testByteSerialization": [538, 540], "com.google.gson.functional.PrimitiveTest::testNegativeInfinitySerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedSerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBooleanWrapper": [700, 724, 727, 728, 778, 779, 808, 810, 814, 826, 831], "com.google.gson.functional.PrimitiveTest::testMoreSpecificSerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBigInteger": [700, 724, 727, 728, 778, 779, 808, 810, 814, 826, 831], "com.google.gson.functional.PrimitiveTest::testBigDecimalInfinityDeserializationNotSupported": [700, 724, 727, 728, 778, 779, 808, 810, 814, 831], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsByteWrapper": [700, 724, 727, 728, 778, 779, 808, 810, 814, 826, 831], "com.google.gson.functional.PrimitiveTest::testLongAsStringSerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testBigDecimalInASingleElementArraySerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testFloatInfinityDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsBigDecimal": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testBigIntegerSerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testDoubleNaNDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testBooleanDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testBigDecimalPreservePrecisionDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testBigDecimalSerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedInASingleElementArraySerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBooleanPrimitive": [700, 724, 727, 728, 778, 779, 808, 810, 814, 826, 831], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigDecimalSerialization": [516, 519, 538, 539, 540, 584, 605], "com.google.gson.functional.PrimitiveTest::testBigDecimalNoFractAsStringRepresentationDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testValueVeryCloseToZeroIsZero": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsIntegerFails": [700, 724, 727, 728, 778, 779, 808, 810, 814, 831], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsDouble": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrimitiveCharacterTest::testPrimitiveCharacterAutoboxedSerialization": [516, 519, 538, 540], "com.google.gson.functional.PrimitiveCharacterTest::testPrimitiveCharacterAutoboxedDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.PrettyPrintingTest::testPrettyPrintListOfPrimitiveArrays": [516, 519, 538, 540], "com.google.gson.functional.PrettyPrintingTest::testEmptyMapField": [516, 519, 538, 540], "com.google.gson.functional.PrettyPrintingTest::testMultipleArrays": [516, 519, 538, 540], "com.google.gson.functional.PrettyPrintingTest::testMap": [516, 519, 538, 540], "com.google.gson.functional.PrettyPrintingTest::testPrettyPrintArrayOfPrimitiveArrays": [516, 519, 538, 540], "com.google.gson.functional.PrettyPrintingTest::testPrettyPrintArrayOfPrimitives": [516, 519, 538, 540], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysSerialization": [538, 540], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 369, 538, 539, 540, 584, 597, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysSerialization": [538, 540], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 538, 539, 540, 584, 597, 605, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersSerialization": [538, 540], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesSerialization": [538, 540], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 538, 539, 540, 584, 597, 605, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithCustomSerializer": [538, 540], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 369, 538, 539, 540, 584, 597, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 363, 364, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 369, 538, 539, 540, 584, 597, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeSerialization": [516, 519, 538, 540], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ObjectTest::testNullFieldsSerialization": [516, 519, 538, 540], "com.google.gson.functional.ObjectTest::testAnonymousLocalClassesSerialization": [516, 519, 538, 540], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ObjectTest::testAnonymousLocalClassesCustomSerialization": [516, 519, 538, 540], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueSerialization": [516, 519, 538, 540], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersSerialization": [516, 519, 538, 540], "com.google.gson.functional.ObjectTest::testEmptyStringDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 806, 808, 810, 821, 822, 831], "com.google.gson.functional.ObjectTest::testArrayOfObjectsSerialization": [516, 519, 538, 540], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ObjectTest::testSingletonLists": [516, 519, 538, 540], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsSerialization": [516, 519, 538, 540], "com.google.gson.functional.ObjectTest::testNestedSerialization": [516, 519, 538, 540], "com.google.gson.functional.ObjectTest::testNullSerialization": [623, 625], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ObjectTest::testInnerClassSerialization": [516, 519, 538, 540], "com.google.gson.functional.ObjectTest::testClassWithObjectFieldSerialization": [516, 519, 538, 540], "com.google.gson.functional.ObjectTest::testArrayOfObjectsAsFields": [516, 519, 538, 540], "com.google.gson.functional.ObjectTest::testTruncatedDeserialization": [724, 727, 728, 778, 779, 808, 810, 811, 814, 821, 824, 831], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ObjectTest::testNullDeserialization": [700, 701, 724, 725], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ObjectTest::testDateAsMapObjectField": [516, 519, 538, 540], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectSerialization": [516, 519, 538, 540], "com.google.gson.functional.ObjectTest::testJsonObjectSerialization": [623, 625], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsSerialization": [516, 519, 538, 540], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ObjectTest::testPrimitiveArrayFieldSerialization": [516, 519, 538, 540], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesSerialization": [516, 519, 538, 540], "com.google.gson.functional.ObjectTest::testArrayOfArraysSerialization": [516, 519, 538, 540], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberSerialization": [516, 519, 538, 540], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitSerializationOfNullArrayMembers": [516, 519, 538, 540], "com.google.gson.functional.NullObjectAndFieldTest::testTopLevelNullObjectDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.NullObjectAndFieldTest::testPrintPrintingArraysWithNulls": [516, 519, 538, 540], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.NullObjectAndFieldTest::testPrintPrintingObjectWithNulls": [516, 519, 538, 540], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitSerializationOfNullCollectionMembers": [516, 519, 538, 540], "com.google.gson.functional.NullObjectAndFieldTest::testTopLevelNullObjectSerialization": [538, 540, 623, 625], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullSerialization": [516, 519, 538, 540], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitSerializationOfNulls": [516, 519, 538, 540], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831, 876, 877], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitSerializationOfNullStringMembers": [516, 519, 538, 540], "com.google.gson.functional.NullObjectAndFieldTest::testCustomSerializationOfNulls": [516, 519, 538, 540], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicySerialization": [516, 519, 538, 540], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 516, 519, 538, 539, 540, 584, 597, 605, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 369, 372, 516, 519, 539, 584, 597], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicySerialiation": [516, 519, 538, 540], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicySerialization": [516, 519, 538, 540], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.NamingPolicyTest::testAtSignInSerializedName": [516, 519, 538, 540], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicySerialization": [516, 519, 538, 540], "com.google.gson.functional.NamingPolicyTest::testDeprecatedNamingStrategy": [516, 519, 538, 540], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicySerialization": [516, 519, 538, 540], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 474, 477, 497, 498, 499, 597, 605], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testParameterizedSubclassFields": [516, 519, 538, 540], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testSubclassFields": [516, 519, 538, 540], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testListOfSubclassFields": [516, 519, 538, 540], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 474, 477, 497, 498, 499, 597, 605], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testListOfParameterizedSubclassFields": [516, 519, 538, 540], "com.google.gson.functional.MapTest::testMapDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.MapTest::testMapDeserializationEmpty": [724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.MapTest::testRawMapSerialization": [516, 519, 538, 540], "com.google.gson.functional.MapTest::testCustomSerializerForSpecificMapType": [538, 540], "com.google.gson.functional.MapTest::testParameterizedMapSubclassSerialization": [538, 540], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.MapTest::testDeerializeMapOfMaps": [724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [814, 815, 831, 876, 879], "com.google.gson.functional.MapTest::testBooleanKeyDeserialization": [724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.MapTest::testNumberKeyDeserialization": [724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.MapTest::testInterfaceTypeMap": [516, 519, 538, 540], "com.google.gson.functional.MapTest::testHashMapDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.MapTest::testSortedMap": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.MapTest::testMapSerializationWithNullValuesSerialized": [516, 519, 538, 540], "com.google.gson.functional.MapTest::testInterfaceTypeMapWithSerializer": [516, 519, 538, 540], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.MapTest::testMapSubclassSerialization": [538, 540], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.MapTest::testMapSerializationWithWildcardValues": [538, 540], "com.google.gson.functional.MapTest::testSerializeMaps": [516, 519, 538, 540], "com.google.gson.functional.MapTest::testMapWithQuotes": [516, 519, 538, 540], "com.google.gson.functional.MapTest::testMapSerializationWithNullKey": [538, 540], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.MapTest::testComplexKeysDeserialization": [724, 727, 728, 778, 779, 808, 810, 814, 831], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.MapTest::testMapSerializationWithIntegerKeys": [538, 540], "com.google.gson.functional.MapTest::testWriteMapsWithEmptyStringKey": [516, 519, 538, 540], "com.google.gson.functional.MapTest::testMapSerialization": [538, 540], "com.google.gson.functional.MapTest::testMapSerializationEmpty": [538, 540], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.MapTest::testGeneralMapField": [516, 519, 538, 540], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 724, 727, 728, 778, 779, 808, 810, 812, 813, 814, 831], "com.google.gson.functional.MapTest::testComplexKeysSerialization": [538, 540], "com.google.gson.functional.MapTest::testMapSerializationWithNullValues": [516, 519, 538, 540], "com.google.gson.functional.MapTest::testSerializeMapOfMaps": [538, 540], "com.google.gson.functional.MapTest::testMapSerializationWithNullValue": [538, 540], "com.google.gson.functional.MapTest::testStringKeyDeserialization": [724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.MapTest::testMapOfMapSerialization": [516, 519, 538, 540], "com.google.gson.functional.MapTest::testMapSerializationWithNullValueButSerializeNulls": [538, 540], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 538, 539, 540, 584, 597, 605, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 724, 727, 728, 778, 779, 808, 810, 812, 813, 814, 831], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableSerialization": [538, 540], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 538, 539, 540, 584, 597, 605, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 497, 498, 499, 597, 605], "com.google.gson.functional.JsonTreeTest::testJsonTreeToString": [516, 519, 538, 540, 623, 625], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 474, 477, 497, 498, 499, 597, 605], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 497, 498, 499, 597, 605], "com.google.gson.functional.JsonParserTest::testParseInvalidJson": [700, 724, 727, 728, 778, 779, 808, 810, 811, 814, 821, 824, 831], "com.google.gson.functional.JsonParserTest::testExtraCommasInMaps": [724, 727, 728, 778, 779, 808, 810, 814, 829, 831], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 812, 813, 814, 831, 852, 876, 879], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 812, 813, 814, 815, 831, 852, 853, 876, 879], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 812, 813, 814, 815, 831, 852, 853, 876, 879], "com.google.gson.functional.JsonParserTest::testExtraCommasInArrays": [724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.JsonParserTest::testBadTypeForDeserializingCustomTree": [814, 831, 852, 876, 879], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 812, 813, 814, 831, 852, 876, 879], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 359, 360, 361, 363, 516, 519, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 516, 519, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 359, 360, 361, 363, 516, 519, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 516, 519, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [516, 519, 538, 540, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked": [516, 519, 538, 540, 700, 701, 724, 728, 729, 779, 781, 814, 815, 831], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testSuperclassTypeAdapterNotInvoked": [516, 519, 538, 540], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 359, 360, 361, 363, 516, 519, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 359, 360, 361, 363, 428, 434, 435, 436, 437, 442, 443, 444, 516, 519, 538, 539, 540, 584, 597, 700, 701, 724, 728, 729, 779, 781, 812, 813, 814, 815, 831], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testIncorrectTypeAdapterFails": [516, 519, 539, 584, 605, 609, 611], "com.google.gson.functional.InternationalizationTest::testStringsWithUnicodeChineseCharactersSerialization": [516, 519, 538, 540], "com.google.gson.functional.InternationalizationTest::testStringsWithUnicodeChineseCharactersEscapedDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.InternationalizationTest::testStringsWithRawChineseCharactersDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.InternationalizationTest::testStringsWithUnicodeChineseCharactersDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.InterfaceTest::testSerializingInterfaceObjectField": [516, 519, 538, 540], "com.google.gson.functional.InterfaceTest::testSerializingObjectImplementingInterface": [516, 519, 538, 540], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForCollectionType": [724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.InheritanceTest::testSubClassSerialization": [516, 519, 538, 540], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 497, 498, 499, 597, 605], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod": [538, 540], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 474, 477, 497, 498, 499, 597, 605], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionSerialization": [516, 519, 538, 540], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod": [538, 540], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubForToJsonMethod": [516, 519, 538, 540], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 497, 498, 499, 597, 605], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 474, 477, 497, 498, 499, 597, 605], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 474, 477, 497, 498, 499, 597, 605], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 474, 477, 497, 498, 499, 597, 605], "com.google.gson.functional.FieldNamingTest::testUpperCamelCase": [516, 519, 538, 540], "com.google.gson.functional.FieldNamingTest::testLowerCaseWithUnderscores": [516, 519, 538, 540], "com.google.gson.functional.FieldNamingTest::testIdentity": [516, 519, 538, 540], "com.google.gson.functional.FieldNamingTest::testLowerCaseWithDashes": [516, 519, 538, 540], "com.google.gson.functional.FieldNamingTest::testUpperCamelCaseWithSpaces": [516, 519, 538, 540], "com.google.gson.functional.FieldExclusionTest::testInnerClassExclusion": [516, 519, 538, 540], "com.google.gson.functional.FieldExclusionTest::testDefaultInnerClassExclusion": [516, 519, 538, 540], "com.google.gson.functional.FieldExclusionTest::testDefaultNestedStaticClassIncluded": [516, 519, 538, 540], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ExposeFieldsTest::testNoExposedFieldSerialization": [516, 519, 538, 540], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldSerialization": [516, 519, 538, 540], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ExposeFieldsTest::testArrayWithOneNullExposeFieldObjectSerialization": [516, 519, 538, 540], "com.google.gson.functional.ExposeFieldsTest::testNullExposeFieldSerialization": [516, 519, 538, 540], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationSerialization": [516, 519, 538, 540], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 434, 474, 477, 497, 498, 499, 597, 605, 812, 813, 814, 815, 831, 852, 853, 876, 879], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 812, 813, 814, 815, 831, 852, 853, 876, 879], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserializationDoesNotImpactSerialization": [538, 540], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerialization": [516, 519, 538, 540], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 428, 434, 435, 436, 437, 442, 443, 444, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerialization": [538, 540], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactSerialization": [516, 519, 538, 540], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserialization": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 728, 729, 779, 781, 812, 813, 814, 815, 831], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 516, 519, 538, 539, 540, 584, 597, 605, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 516, 519, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 516, 519, 538, 539, 540, 584, 597, 605, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.EscapingTest::testEscapeAllHtmlCharacters": [516, 519, 538, 540], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 516, 519, 538, 539, 540, 584, 597, 605, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.EnumTest::testEnumSet": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 516, 519, 538, 539, 540, 584, 597, 605, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 538, 540, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.EnumTest::testEnumSubclassAsParameterizedType": [516, 519, 538, 540, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.EnumTest::testCollectionOfEnumsSerialization": [516, 519, 538, 540], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.EnumTest::testCollectionOfEnumsDeserialization": [724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.EnumTest::testClassWithEnumFieldSerialization": [516, 519, 538, 540], "com.google.gson.functional.EnumTest::testEnumSubclass": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 516, 519, 538, 539, 540, 584, 597, 605, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.EnumTest::testTopLevelEnumSerialization": [516, 519, 538, 540], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 516, 519, 538, 539, 540, 584, 597, 605, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 428, 434, 435, 436, 437, 442, 443, 444, 516, 519, 538, 539, 540, 584, 597, 605, 700, 724, 727, 728, 778, 779, 808, 810, 812, 813, 814], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 428, 434, 435, 436, 437, 442, 443, 444, 516, 519, 538, 539, 540, 584, 597, 605, 724, 727, 728, 778, 779, 808, 810, 812, 813, 814], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldSerialization": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldSerialization": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonNullSerialization": [538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlDateSerialization": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlDateDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonObjectDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 363, 364, 372, 700, 701, 724, 728, 729, 779, 781, 812, 813, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonArraySerialization": [538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 724, 728, 779, 812, 813, 814, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesSerialization": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonObjectSerialization": [538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultCalendarDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testUriSerialization": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testUuidDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlSerialization": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetSerialization": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimeDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 724, 727, 728, 778, 779, 808, 810, 812, 813, 814, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullSerialization": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleSerializationWithLanguageCountry": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 457, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBuilderSerialization": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguage": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationWithPatternNotOverridenByTypeAdapter": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testBitSetDeserialization": [516, 519, 538, 540, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testNullJsonElementSerialization": [538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationWithPattern": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateSerializationUsingBuilder": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonNullDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 363, 364, 372, 700, 701, 724, 728, 729, 779, 781, 812, 813, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguageCountry": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateSerialization": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testSetSerialization": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 359, 360, 361, 363, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testUuidSerialization": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleSerializationWithLanguage": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testUriDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigIntegerTypeAdapter": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 359, 360, 361, 363, 538, 539, 540, 584, 597, 700, 701, 724, 728, 729, 779, 781, 812, 813, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonArrayDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 363, 364, 372, 700, 701, 724, 728, 729, 779, 781, 812, 813, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonPrimitiveSerialization": [538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testClassDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBuilderDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultGregorianCalendarDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 538, 539, 540, 584, 597, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigDecimalTypeAdapter": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 359, 360, 361, 363, 538, 539, 540, 584, 597, 700, 701, 724, 728, 729, 779, 781, 812, 813, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testClassSerialization": [516, 519, 538, 539, 540, 584, 605, 609, 611], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonPrimitiveDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 359, 360, 361, 363, 364, 372, 700, 701, 724, 728, 729, 779, 781, 812, 813, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 359, 360, 361, 363, 516, 519, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBufferSerialization": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBufferDeserialization": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 363, 364, 372, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguageCountryVariant": [700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultCalendarSerialization": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampSerialization": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 359, 360, 361, 363, 516, 519, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.DefaultTypeAdaptersTest::testBitSetSerialization": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultGregorianCalendarSerialization": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleSerializationWithLanguageCountryVariant": [516, 519, 538, 540], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimeSerialization": [516, 519, 538, 540], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementSerializationWithType": [538, 540], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomSerializerNotInvokedForNullValues": [516, 519, 538, 540], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementSerializationWithType": [538, 540], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass": [516, 519, 538, 540], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementSerialization": [516, 519, 538, 540], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomSerializerInvokedForPrimitives": [538, 540], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArraySerializer": [516, 519, 538, 540], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedSerializers": [516, 519, 538, 540], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementSerialization": [516, 519, 538, 540], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomSerializers": [516, 519, 538, 540], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 359, 360, 361, 363, 516, 519, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomTypeAdapterDoesNotAppliesToSubClasses": [516, 519, 538, 540], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 474, 477, 497, 498, 499, 597, 605], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 474, 477, 497, 498, 499, 597, 605], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 474, 477, 497, 498, 499, 597, 605], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 474, 477, 497, 498, 499, 597, 605], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 474, 477, 497, 498, 499, 597, 605], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 428, 434, 435, 436, 437, 442, 443, 516, 519, 538, 539, 540, 584, 597, 605, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [112, 115, 126, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 363, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831, 876, 879], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 359, 360, 361, 363, 364, 372, 428, 434, 435, 436, 437, 442, 443, 516, 519, 538, 539, 540, 584, 597, 605, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [112, 115, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CollectionTest::testSetDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CollectionTest::testRawCollectionOfIntegersSerialization": [516, 519, 538, 540], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CollectionTest::testCollectionOfStringsSerialization": [516, 519, 538, 540], "com.google.gson.functional.CollectionTest::testUserCollectionTypeAdapter": [538, 540], "com.google.gson.functional.CollectionTest::testRawCollectionSerialization": [516, 519, 538, 540], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CollectionTest::testLinkedListSerialization": [538, 540], "com.google.gson.functional.CollectionTest::testQueueDeserialization": [724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionSerilaization": [516, 519, 538, 540], "com.google.gson.functional.CollectionTest::testTopLevelCollectionOfIntegersSerialization": [538, 540], "com.google.gson.functional.CollectionTest::testNullsInListSerialization": [538, 540], "com.google.gson.functional.CollectionTest::testCollectionOfObjectSerialization": [516, 519, 538, 540], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 516, 519, 538, 539, 540, 584, 597, 605, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CollectionTest::testTopLevelCollectionOfIntegersDeserialization": [724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.functional.CollectionTest::testCollectionOfObjectWithNullSerialization": [516, 519, 538, 540], "com.google.gson.functional.CollectionTest::testQueueSerialization": [538, 540], "com.google.gson.functional.CollectionTest::testCollectionOfBagOfPrimitivesSerialization": [516, 519, 538, 540], "com.google.gson.functional.CollectionTest::testSetSerialization": [516, 519, 538, 540], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.CircularReferenceTest::testSelfReferenceIgnoredInSerialization": [516, 519, 538, 540], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphSerialization": [516, 519, 538, 540], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 352, 356, 357, 359, 360, 361, 362, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysSerialization": [516, 519, 538, 540], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsSerialization": [516, 519, 538, 540], "com.google.gson.functional.ArrayTest::testMultiDimenstionalObjectArraysSerialization": [516, 519, 538, 540], "com.google.gson.functional.ArrayTest::testArrayOfStringsSerialization": [516, 519, 538, 540], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsSerialization": [516, 519, 538, 540], "com.google.gson.functional.ArrayTest::testArrayElementsAreArrays": [516, 519, 538, 540], "com.google.gson.functional.ArrayTest::testArrayOfCollectionSerialization": [538, 540], "com.google.gson.functional.ArrayTest::testSingleStringArraySerialization": [516, 519, 538, 540], "com.google.gson.functional.ArrayTest::testSingleNullInArraySerialization": [516, 519, 538, 540], "com.google.gson.functional.ArrayTest::testNullsInArraySerialization": [516, 519, 538, 540], "com.google.gson.functional.ArrayTest::testEmptyArraySerialization": [516, 519, 538, 540], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.functional.ArrayTest::testObjectArrayWithNonPrimitivesSerialization": [516, 519, 538, 540], "com.google.gson.functional.ArrayTest::testMixingTypesInObjectArraySerialization": [516, 519, 538, 540], "com.google.gson.functional.ArrayTest::testInvalidArrayDeserialization": [700, 724, 727, 728, 778, 779, 808, 810, 814, 829, 831], "com.google.gson.functional.ArrayTest::testArrayOfNullSerialization": [516, 519, 538, 540], "com.google.gson.functional.ArrayTest::testNullsInArrayWithSerializeNullPropertySetSerialization": [516, 519, 538, 540], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverridePrimitiveBooleanAdapter": [538, 540, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideWrapperBooleanAdapter": [538, 540, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideStringAdapter": [538, 540, 700, 701, 724, 728, 729, 779, 781, 814, 815, 831], "com.google.gson.ObjectTypeAdapterTest::testSerializeObject": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 457], "com.google.gson.ObjectTypeAdapterTest::testDeserializeNullValue": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 457], "com.google.gson.ObjectTypeAdapterTest::testSerializeNullValue": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 457], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 457], "com.google.gson.ObjectTypeAdapterTest::testSerialize": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 457], "com.google.gson.MixedStreamTest::testReadInvalidState": [810, 814, 826, 831], "com.google.gson.MixedStreamTest::testWriteLenient": [100, 299, 300, 605, 609, 611], "com.google.gson.MixedStreamTest::testWriteClosed": [605, 609, 611], "com.google.gson.MixedStreamTest::testReaderDoesNotMutateState": [807, 831], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 810, 812, 813, 814, 815, 831], "com.google.gson.MixedStreamTest::testReadNulls": [807, 812, 831], "com.google.gson.MixedStreamTest::testWriteNulls": [665], "com.google.gson.MixedStreamTest::testWriteInvalidState": [605, 609, 611], "com.google.gson.MixedStreamTest::testWriteDoesNotMutateState": [598, 600, 609, 610], "com.google.gson.MixedStreamTest::testReadClosed": [810, 826, 831], "com.google.gson.LongSerializationPolicyTest::testStringLongSerializationIntegration": [538, 540], "com.google.gson.LongSerializationPolicyTest::testDefaultLongSerializationIntegration": [538, 540], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [112, 115, 177, 189, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 357, 359, 360, 361, 363, 364, 369, 372, 516, 519, 538, 539, 540, 584, 597, 605, 812, 813, 814, 815, 831, 852, 853, 876, 879], "com.google.gson.JsonObjectTest::testPropertyWithQuotes": [623, 625], "com.google.gson.JsonObjectTest::testWritePropertyWithEmptyStringName": [623, 625], "com.google.gson.JavaSerializationTest::testMapIsSerializable": [724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.JavaSerializationTest::testNumberIsSerializable": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.JavaSerializationTest::testListIsSerializable": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 357, 359, 360, 361, 364, 372, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterDoesNotAffectNonAdaptedTypes": [516, 519, 538, 540, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831], "com.google.gson.GsonTypeAdapterTest::testDefaultTypeAdapterThrowsParseException": [700, 724, 727, 728, 778, 779, 808, 810, 814, 826, 831], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 359, 360, 361, 363, 516, 519, 538, 539, 540, 584, 597, 700, 701, 724, 727, 728, 729, 778, 779, 781, 808, 810, 812, 813, 814, 815, 831], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [112, 115, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 338, 341, 343, 344, 350, 351, 359, 360, 361, 363, 364, 372, 516, 519, 539, 584, 597, 605, 609, 611, 700, 724, 727, 728, 778, 779, 808, 810, 812, 813, 814, 826, 831], "com.google.gson.GsonBuilderTest::testTransientFieldExclusion": [516, 519, 538, 540], "com.google.gson.GsonBuilderTest::testExcludeFieldsWithModifiers": [516, 519, 538, 540], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 497, 498, 499, 597, 605], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 497, 498, 499, 597, 605], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 364, 372, 497, 498, 499, 597, 605], "com.google.gson.DefaultInetAddressTypeAdapterTest::testInetAddressSerializationAndDeserialization": [112, 115, 177, 195, 198, 199, 202, 205, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 336, 337, 341, 343, 344, 350, 351, 359, 360, 361, 363, 364, 372, 516, 519, 538, 539, 540, 584, 597, 700, 701, 724, 728, 729, 779, 781, 812, 813, 814, 815, 831], "com.google.gson.CommentsTest::testParseComments": [724, 727, 728, 729, 778, 779, 781, 808, 810, 814, 815, 831]}, "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory": {"com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [42, 43, 44], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [42, 43, 44], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [42, 43, 44], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [42, 43, 44], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [42, 43, 44], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [42, 43, 44], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [42, 43, 44], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [42, 43, 44], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [42, 43, 44], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [42, 43, 44], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [42, 43, 44], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [42, 43, 44], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [42, 43, 44], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [42, 43, 44], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [42, 43, 44], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [42, 43, 44], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [42, 43, 44], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [42, 43, 44], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [42, 43, 44], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [42, 43, 44], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [42, 43, 44], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [42, 43, 44], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [42, 43, 44], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [42, 43, 44], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [42, 43, 44], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [42, 43, 44], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [42, 43, 44], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [42, 43, 44], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [42, 43, 44], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [42, 43, 44], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [42, 43, 44], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [42, 43, 44], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [42, 43, 44], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [42, 43, 44], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [42, 43, 44], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [42, 43, 44], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [37, 42, 43, 44, 46, 52, 53, 57, 58, 59], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [42, 43, 44], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [42, 43, 44], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [42, 43, 44], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [42, 43, 44], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [42, 43, 44], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [42, 43, 44], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [42, 43, 44], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [42, 43, 44], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [42, 43, 44], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [42, 43, 44], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [42, 43, 44], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [42, 43, 44], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [42, 43, 44], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [42, 43, 44], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [42, 43, 44], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [42, 43, 44], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [42, 43, 44], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [42, 43, 44], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [42, 43, 44], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [42, 43, 44], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [42, 43, 44], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [42, 43, 44], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [42, 43, 44], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [42, 43, 44], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [42, 43, 44], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [42, 43, 44], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [42, 43, 44], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [42, 43, 44], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [42, 43, 44], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [42, 43, 44], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [42, 43, 44], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [42, 43, 44], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [42, 43, 44], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [42, 43, 44], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [42, 43, 44], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [42, 43, 44], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [42, 43, 44], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [42, 43, 44], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [42, 43, 44], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [42, 43, 44], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [42, 43, 44], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [42, 43, 44], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [42, 43, 44], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [42, 43, 44], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [42, 43, 44], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [42, 43, 44], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [42, 43, 44], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [42, 43, 44], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [42, 43, 44], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [42, 43, 44], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [42, 43, 44], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [42, 43, 44], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [42, 43, 44], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [42, 43, 44], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [42, 43, 44], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [42, 43, 44], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [42, 43, 44], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [42, 43, 44], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [42, 43, 44], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [37, 42, 43, 44, 46, 52, 53, 54, 55], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [42, 43, 44], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [37, 42, 43, 46, 52, 53, 54, 55], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [42, 43, 44], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [42, 43, 44], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [42, 43, 44], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [42, 43, 44], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [42, 43, 44], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [42, 43, 44], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [42, 43, 44], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [42, 43, 44], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [42, 43, 44], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [42, 43, 44], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [42, 43, 44], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [42, 43, 44], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [42, 43, 44], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [42, 43, 44], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [42, 43, 44], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [42, 43, 44], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [42, 43, 44], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [42, 43, 44], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [42, 43, 44], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [42, 43, 44], "com.google.gson.functional.EnumTest::testEnumSet": [42, 43, 44], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [42, 43, 44], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [42, 43, 44], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [42, 43, 44], "com.google.gson.functional.EnumTest::testEnumSubclass": [42, 43, 44], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [42, 43, 44], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [42, 43, 44], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [42, 43, 44], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [42, 43, 44], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [42, 43, 44], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [42, 43, 44], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [42, 43, 44], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [42, 43, 44], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [42, 43, 44], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [42, 43, 44], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [42, 43, 44], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [42, 43, 44], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [42, 43, 44], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [42, 43, 44], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [42, 43, 44], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [42, 43, 44], "com.google.gson.functional.CollectionTest::testSetDeserialization": [42, 43, 44], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [42, 43, 44], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [42, 43, 44], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [42, 43, 44], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [42, 43, 44], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [42, 43, 44]}, "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory": {"com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [90, 92, 97], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [90, 92, 97], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 141, 146, 147, 148, 149, 151, 155, 156, 158, 161], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [90, 92, 97], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 141, 146, 147, 148, 149, 151, 155, 156, 158, 161], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [90, 92, 97], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 141, 146, 147, 148, 149, 151, 155, 156, 158, 161], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 141, 146, 147, 148, 149, 151, 155, 156, 158, 161], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 141, 146, 147, 148, 149, 151, 155, 156, 158, 161], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 141, 146, 147, 148, 149, 151, 155, 156, 158, 161], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 141, 146, 147, 148, 149, 151, 155, 156, 158, 161], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [56, 58, 62, 66, 71, 76, 77, 78, 82, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [49, 56, 58, 62, 66, 71, 76, 77, 78, 82, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [56, 90, 92, 96, 97], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [49, 56, 58, 62, 66, 71, 76, 77, 78, 82, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [56, 58, 62, 66, 71, 76, 77, 78, 82, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 151, 156, 157, 158, 159, 161, 163, 164, 166, 167], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 82, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 154, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 154, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 154, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [56, 90, 92, 96, 97], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [56, 90, 92, 96, 97], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 141, 146, 147, 148, 149, 151, 155, 156, 158, 161], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.CollectionTest::testSetDeserialization": [56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 140, 141, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 171, 172, 174], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [49, 56, 58, 62, 66, 71, 76, 77, 78, 86, 90, 92, 96, 97, 105, 131, 132, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 171, 172, 174]}, "com.google.gson.internal.bind.ObjectTypeAdapter": {"com.google.gson.functional.JsonParserTest::testParseInvalidJson": [55, 56, 59, 60, 63], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [55, 56, 76], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [55, 56, 76, 79], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [55, 56, 67, 68, 69, 70, 72, 76, 79, 82], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [55, 56, 76, 79], "com.google.gson.ObjectTypeAdapterTest::testDeserializeNullValue": [55, 56, 67, 68, 69, 70, 73, 85], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [55, 56, 59, 60, 61, 63, 67, 68, 69, 70, 72, 73, 76, 79, 85]}, "com.google.gson.internal.LazilyParsedNumber": {"com.google.gson.internal.bind.JsonElementReaderTest::testNumbers": [31, 37, 50, 63], "com.google.gson.internal.bind.JsonElementReaderTest::testObject": [31, 37], "com.google.gson.internal.bind.JsonElementReaderTest::testStringsFromNumbers": [31, 68], "com.google.gson.internal.bind.JsonElementReaderTest::testArray": [31, 37], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [31, 68], "com.google.gson.functional.PrimitiveTest::testNumberDeserialization": [31, 37, 50, 52], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [31, 37], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [31, 37], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [31, 37], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [31, 37], "com.google.gson.JsonParserTest::testParseMixedArray": [31, 37], "com.google.gson.JsonParserTest::testParseString": [31, 37], "com.google.gson.JsonParserTest::testParseReader": [31, 37], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [31, 37]}, "com.google.gson.internal.UnsafeAllocator": {"com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [39, 40, 43, 44], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [39, 40, 43, 44], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [39, 40, 43, 44], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [39, 40, 43, 44], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [39, 40, 43, 44], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [39, 40, 43, 44], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [39, 40, 43, 44], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [39, 40, 43, 44], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [39, 40, 43, 44], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [39, 40, 43, 44], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [39, 40, 43, 44], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [39, 40, 43, 44], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [39, 40, 43, 44], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [39, 40, 43, 44], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [39, 40, 43, 44], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [39, 40, 43, 44], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [39, 40, 43, 44], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [39, 40, 43, 44], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [39, 40, 43, 44], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [39, 40, 43, 44], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [39, 40, 43, 44], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [39, 40, 43, 44], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [39, 40, 43, 44], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [39, 40, 43, 44]}, "com.google.gson.internal.bind.SqlDateTypeAdapter": {"com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlDateDeserialization": [38, 51, 57]}, "com.google.gson.DefaultDateTypeAdapter": {"com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [35, 49, 63, 64, 82, 83, 85, 86, 97], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [35, 49, 63, 64, 82, 97], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [35, 49, 63, 64, 82, 83, 84, 97], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [35, 49, 63, 64, 82, 83, 85, 87, 88, 97]}, "com.google.gson.FieldAttributes": {"com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [46, 111], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [46, 111], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [46, 111]}, "com.google.gson.internal.ConstructorConstructor": {"com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [48, 52, 53, 58, 59, 69, 71, 79, 95], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 84, 85, 90, 95, 99, 119, 130, 174, 197, 202], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 84, 85, 90, 95, 99, 119, 130, 174, 197, 202], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 84, 85, 90, 95, 99, 119, 130, 174, 197, 202], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 84, 85, 90, 95, 99, 119, 130, 174, 197, 202], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 84, 85, 90, 95, 99, 119, 130, 174, 197, 202], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [48, 52, 58, 59, 60], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [48, 52, 58, 59, 60], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [48, 52, 53, 58, 59, 69, 71, 79, 95], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.MapTest::testHashMapDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [48, 52, 53, 58, 59, 69, 71, 79, 95], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [48, 52, 53, 58, 59, 69, 71, 79, 95], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [48, 52, 53, 58, 59, 69, 71, 79, 95], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [48, 52, 53, 58, 59, 69, 71, 79, 95], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [48, 52, 53, 58, 59, 69, 71, 79, 95], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [48, 52, 53, 58, 59, 69, 71, 79, 95], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [48, 52, 53, 58, 59, 69, 71, 79, 95], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 84, 85, 90, 95, 99, 119, 130, 174, 197, 202], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [48, 52, 53, 58, 59, 69, 71, 72], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [48, 52, 53, 58, 59, 69, 71, 79, 95], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [48, 52, 53, 58, 59, 69, 71, 79, 95], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [48, 52, 53, 58, 59, 69, 71, 79, 95], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.EnumTest::testEnumSet": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 86, 95, 119, 130, 131, 137, 138], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.EnumTest::testEnumSubclass": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 95, 119, 130, 131, 137, 138], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 95, 119, 130, 131, 137, 138], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [48, 52, 53, 58, 59, 69, 71, 79, 95], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 95], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [48, 52, 53, 58, 59, 69, 71, 79, 95], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [48, 52, 53, 58, 59, 69, 71, 79, 95], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [48, 52, 53, 58, 59, 69, 71, 79, 95], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [48, 52, 53, 58, 59, 69, 71, 79, 80, 84, 85, 90, 95, 119, 130, 174, 197, 202], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.CollectionTest::testSetDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 95], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 84, 85, 90, 95, 99, 119, 130, 174, 197, 202], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [48, 52, 53, 58, 59, 69, 71, 79, 80, 81, 95, 99]}, "com.google.gson.internal.bind.DateTypeAdapter": {"com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [41, 49, 51, 53, 56, 62, 66, 71], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [41, 49, 51, 53, 56, 62, 66, 71], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [41, 49, 51, 53, 56, 62, 66, 71]}, "com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper": {"com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [33, 35, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.UncategorizedTest::testTrailingWhitespace": [40], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [40], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [40], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [33, 34, 35, 40, 52, 53, 54, 55, 56, 58, 68, 75, 77, 79], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [34, 40], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [33, 35, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [33, 35, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [34, 40], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [40], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [40], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [34, 40], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [40], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [40], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [40], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [33, 35, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [33, 35, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [40], "com.google.gson.functional.PrimitiveTest::testStringsAsBooleans": [40], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [40], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [33, 34, 35, 40, 52, 53, 54, 55, 68, 75, 77, 79], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [33, 34, 35, 40, 52, 53, 54, 55, 68, 75, 77, 79], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [40], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [40], "com.google.gson.functional.ObjectTest::testTruncatedDeserialization": [40], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [40], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [34, 40], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [40], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [34, 40], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [40], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [33, 35, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [34, 52, 68], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [33, 34, 35, 52, 53, 54, 55, 56, 59, 65, 68, 75, 77, 79], "com.google.gson.functional.MapTest::testMapDeserialization": [34, 40], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [34, 40], "com.google.gson.functional.MapTest::testDeerializeMapOfMaps": [40], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [40], "com.google.gson.functional.MapTest::testBooleanKeyDeserialization": [40], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [34, 40], "com.google.gson.functional.MapTest::testNumberKeyDeserialization": [40], "com.google.gson.functional.MapTest::testHashMapDeserialization": [34, 40], "com.google.gson.functional.MapTest::testSortedMap": [34, 40], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [34, 40], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [34, 40], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [34, 40], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [34, 40], "com.google.gson.functional.MapTest::testComplexKeysDeserialization": [40], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [34, 40], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [34, 40], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [34, 40], "com.google.gson.functional.MapTest::testStringKeyDeserialization": [40], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [33, 34, 35, 40, 52, 53, 54, 55, 68, 75, 77, 79], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [34, 40], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [34, 40], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [33, 34, 35, 40, 52, 53, 54, 55, 68, 75, 77, 79], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [33, 35, 53, 54, 55, 68, 75, 77, 79], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [33, 35, 53, 54, 55, 68, 75, 77, 79], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [33, 35, 53, 54, 55, 68, 75, 77, 79], "com.google.gson.functional.JsonParserTest::testParseInvalidJson": [40], "com.google.gson.functional.JsonParserTest::testExtraCommasInMaps": [40], "com.google.gson.functional.JsonParserTest::testExtraCommasInArrays": [40], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForCollectionType": [40], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [34, 40], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [68], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [34, 40], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [33, 34, 35, 52, 53, 54, 55, 56, 59, 65, 68, 75, 77, 79], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [68], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [68], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [33, 34, 35, 53, 54, 55, 56, 59, 65, 68, 75, 77, 79], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [33, 34, 35, 52, 53, 54, 55, 56, 59, 65, 68, 75, 77, 79], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [33, 34, 35, 52, 53, 54, 55, 68, 75, 77, 79], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [33, 35, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [40], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [33, 35, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [33, 35, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.EnumTest::testEnumSet": [33, 34, 35, 40, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.EnumTest::testEnumSubclassAsParameterizedType": [40], "com.google.gson.functional.EnumTest::testCollectionOfEnumsDeserialization": [40], "com.google.gson.functional.EnumTest::testEnumSubclass": [33, 35, 40, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [33, 34, 35, 40, 53, 54, 55, 75, 77, 79], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [34, 40, 52, 68], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [33, 34, 35, 40, 52, 53, 54, 55, 56, 58, 68, 75, 77, 79], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [34, 40], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [34, 40], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [34, 40], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [34, 40], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [34, 40], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [33, 35, 53, 54, 55, 56, 58, 68, 75, 77, 79], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [33, 34, 35, 53, 54, 55, 56, 59, 62, 68, 75, 77, 79], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [33, 34, 35, 52, 53, 54, 55, 56, 58, 68, 75, 77, 79], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [34, 52, 68], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [34, 40], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [34, 40], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [34, 52, 68], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [34, 40], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [40], "com.google.gson.functional.CollectionTest::testSetDeserialization": [34, 40], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [34, 40], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [40], "com.google.gson.functional.CollectionTest::testQueueDeserialization": [40], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [34, 40], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [33, 34, 35, 40, 52, 53, 54, 55, 68, 75, 77, 79], "com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization": [34, 40], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [34, 40], "com.google.gson.functional.CollectionTest::testTopLevelCollectionOfIntegersDeserialization": [40], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [34, 40], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [34, 40], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [40], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [40], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [40], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [40], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [40], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [40], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [40], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [40], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [40], "com.google.gson.functional.ArrayTest::testInvalidArrayDeserialization": [40], "com.google.gson.MixedStreamTest::testWriteLenient": [68], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [33, 35, 53, 54, 55, 75, 77, 79], "com.google.gson.JavaSerializationTest::testMapIsSerializable": [40], "com.google.gson.JavaSerializationTest::testNumberIsSerializable": [34, 40], "com.google.gson.JavaSerializationTest::testListIsSerializable": [34, 40], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [68], "com.google.gson.CommentsTest::testParseComments": [40]}, "com.google.gson.reflect.TypeToken": {"com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassDeserialization": [72, 73, 94, 296], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [72, 73, 94, 101, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [72, 73, 94, 101, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [72, 73, 74, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [72, 73, 74, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [72, 73, 74, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [72, 73, 94, 101, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [72, 73, 74, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [72, 73, 94, 101, 284, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [62, 63, 64, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [72, 73, 94, 101, 296], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [72, 73, 94, 101, 296], "com.google.gson.functional.PrimitiveTest::testStringsAsBooleans": [62, 82, 86, 87, 101], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [62, 72, 73, 82, 86, 87, 94, 101, 296], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [72, 73, 94, 101, 296], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [72, 73, 94, 284, 296], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [72, 73, 94, 101, 296], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [72, 73, 94, 101, 296], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [72, 73, 94, 101, 296], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [72, 73, 94, 101, 296], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [72, 73, 94, 101, 296], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.MapTest::testMapDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testDeerializeMapOfMaps": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testBooleanKeyDeserialization": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.MapTest::testNumberKeyDeserialization": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testHashMapDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testSortedMap": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapTest::testComplexKeysSerialization": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testSerializeMapOfMaps": [62, 82, 86, 87, 101], "com.google.gson.functional.MapTest::testStringKeyDeserialization": [62, 82, 86, 87, 101], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [72, 73, 94, 101, 296], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [72, 73, 94, 101, 296], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [72, 73, 94, 101, 296], "com.google.gson.functional.JsonParserTest::testExtraCommasInArrays": [62, 82, 86, 87, 101], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [72, 73, 94, 101, 296], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [72, 73, 94, 101, 296], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [72, 73, 94, 101, 296], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [72, 73, 94, 101, 296], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [72, 73, 94, 101, 296], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserialization": [72, 73, 94, 296], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.EnumTest::testEnumSet": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [72, 73, 94, 101, 296], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.EnumTest::testEnumSubclass": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonObjectDeserialization": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch": [72, 73, 94, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [72, 73, 74, 94, 280, 296, 303], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonNullDeserialization": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigIntegerTypeAdapter": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonArrayDeserialization": [72, 73, 74, 94, 280, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigDecimalTypeAdapter": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonPrimitiveDeserialization": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [72, 73, 74, 94, 101, 280, 284, 296, 303], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [72, 73, 94, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [72, 73, 94, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [72, 73, 94, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [72, 73, 94, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [72, 73, 94, 284, 296], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [72, 73, 94, 284, 296], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [62, 72, 73, 82, 86, 87, 94, 101, 296], "com.google.gson.functional.CollectionTest::testSetDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testUserCollectionTypeAdapter": [62, 82, 86, 87, 101], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CollectionTest::testCollectionOfObjectSerialization": [62, 82, 86, 87, 101], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [72, 73, 74, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CollectionTest::testCollectionOfObjectWithNullSerialization": [62, 82, 86, 87, 101], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [62, 72, 73, 82, 86, 87, 94, 101, 296], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [72, 73, 94, 101, 296], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [72, 73, 94, 101, 296], "com.google.gson.ObjectTypeAdapterTest::testSerializeObject": [72, 73, 94, 303], "com.google.gson.ObjectTypeAdapterTest::testDeserializeNullValue": [72, 73, 94, 303], "com.google.gson.ObjectTypeAdapterTest::testSerializeNullValue": [72, 73, 94, 303], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [72, 73, 94, 303], "com.google.gson.ObjectTypeAdapterTest::testSerialize": [72, 73, 94, 303], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.MixedStreamTest::testReadNulls": [72, 296], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.JavaSerializationTest::testNumberIsSerializable": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.JavaSerializationTest::testListIsSerializable": [62, 72, 73, 74, 82, 86, 87, 94, 101, 280, 296], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [72, 73, 74, 94, 280, 284, 296], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [72, 73, 74, 94, 101, 280, 284, 296], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [62, 72, 73, 82, 86, 87, 94, 101, 296], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [62, 72, 73, 82, 86, 87, 94, 101, 296], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [72, 73, 94, 101, 296], "com.google.gson.DefaultInetAddressTypeAdapterTest::testInetAddressSerializationAndDeserialization": [72, 73, 74, 94, 280, 296]}, "com.google.gson.JsonSyntaxException": {"com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch": [30]}, "com.google.gson.JsonObject": {"com.google.gson.internal.bind.JsonElementReaderTest::testObject": [33, 57, 132], "com.google.gson.internal.bind.JsonElementReaderTest::testNestedObjects": [33, 57, 132], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [33, 57, 152], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [33, 57, 132, 152], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [33, 57, 132], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [33, 57, 132, 152], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [33, 57, 132], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [33, 57, 152], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [33, 57, 152], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [33, 57, 152], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [33, 57, 132], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [33, 57, 142], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [33, 57, 132], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [33, 57, 132], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [33, 57, 79, 90, 122, 132], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [33, 57, 79, 90, 122, 132], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [33, 57, 68, 79, 122, 132], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [33, 57, 79, 90, 122, 132], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [33, 57, 152], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [33, 57, 152], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [33, 57, 152], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [33, 57, 152], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [33, 57, 152], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [33, 57, 152], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [33, 57, 132, 152], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [33, 57, 132], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [33, 57, 152], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [33, 57, 79, 122, 132, 152], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [33, 57, 79, 122, 132, 152], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [33, 57, 79, 122, 132, 152], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [33, 57, 79, 122, 132, 152], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [33, 57, 132, 152], "com.google.gson.JsonParserTest::testParseString": [33, 57, 152], "com.google.gson.JsonParserTest::testParseReader": [33, 57, 152], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [33, 57, 132], "com.google.gson.JsonObjectTest::testAddingAndRemovingObjectProperties": [33, 57, 68, 142, 152], "com.google.gson.JsonObjectTest::testAddingStringProperties": [33, 57, 79, 122, 142, 152], "com.google.gson.JsonObjectTest::testAddingNullPropertyValue": [33, 54, 55, 57, 142, 152], "com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName": [33, 57, 152], "com.google.gson.JsonObjectTest::testAddingCharacterProperties": [33, 57, 112, 122, 142, 152], "com.google.gson.JsonObjectTest::testEqualsNonEmptyObject": [33, 187], "com.google.gson.JsonObjectTest::testAddingNullOrEmptyPropertyName": [57], "com.google.gson.JsonObjectTest::testAddingBooleanProperties": [33, 57, 101, 122, 142, 152], "com.google.gson.JsonObjectTest::testDeepCopy": [33, 38, 39, 40, 42, 57, 152], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [33, 57, 142], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [33, 132], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [33, 132]}, "com.google.gson.JsonArray": {"com.google.gson.internal.bind.JsonElementReaderTest::testStrings": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testWrongType": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbersFromStrings": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testSkipValue": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testStrictNansAndInfinities": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbers": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testBooleans": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testStringsFromNumbers": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testArray": [40, 97, 171], "com.google.gson.internal.bind.JsonElementReaderTest::testLenientNansAndInfinities": [40, 97, 171], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [40, 97, 171], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [40, 97, 171], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [40, 97, 171], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [40, 97, 171], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [40, 97, 171], "com.google.gson.JsonParserTest::testParseMixedArray": [40, 97, 183], "com.google.gson.JsonParserTest::testParseUnquotedStringArrayFails": [40, 97, 161, 183], "com.google.gson.JsonObjectTest::testDeepCopy": [33, 40, 45, 46, 49, 161]}, "com.google.gson.JsonElement": {"com.google.gson.internal.bind.JsonTreeWriterTest::testSerializeNullsFalse": [321, 325], "com.google.gson.internal.bind.JsonTreeWriterTest::testLenientNansAndInfinities": [321, 325], "com.google.gson.internal.bind.JsonTreeWriterTest::testObject": [321, 325], "com.google.gson.internal.bind.JsonTreeWriterTest::testArray": [321, 325], "com.google.gson.internal.bind.JsonTreeWriterTest::testNestedObject": [321, 325], "com.google.gson.internal.bind.JsonTreeWriterTest::testNestedArray": [321, 325], "com.google.gson.internal.bind.JsonTreeWriterTest::testSerializeNullsTrue": [321, 325], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [55, 74, 87, 88], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [46, 55, 64, 74, 87, 88, 103, 104, 119, 120], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [74], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [74], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [74], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [74], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [74], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [74], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [55, 87, 88], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [55, 74, 87, 88], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [74], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [55, 74, 87, 88], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [55, 74, 87, 88], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [74], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [55, 74, 87, 88], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [55, 74, 87, 88], "com.google.gson.functional.JsonArrayTest::testBooleanPrimitiveAddition": [321, 325], "com.google.gson.functional.JsonArrayTest::testSameAddition": [321, 325], "com.google.gson.functional.JsonArrayTest::testIntegerPrimitiveAddition": [321, 325], "com.google.gson.functional.JsonArrayTest::testStringPrimitiveAddition": [321, 325], "com.google.gson.functional.JsonArrayTest::testCharPrimitiveAddition": [321, 325], "com.google.gson.functional.JsonArrayTest::testDoublePrimitiveAddition": [321, 325], "com.google.gson.functional.JsonArrayTest::testNullPrimitiveAddition": [321, 325], "com.google.gson.functional.JsonArrayTest::testMixedPrimitiveAddition": [321, 325], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [74], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [55, 74, 87, 88], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [46, 55, 74, 87, 88, 103, 104], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [55, 74, 87, 88], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [55, 74, 87, 88], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [55, 74, 87, 88], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [46, 55, 74, 87, 88, 103, 104], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [55, 74, 87, 88], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [74], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [74], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [74], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [74], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [74], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [74], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [74], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [74], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [74], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [55, 74, 87, 88], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [74], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [74], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [46, 55, 64, 74, 87, 88, 119, 120], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [46, 55, 64, 74, 87, 88, 119, 120], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [46, 55, 64, 74, 87, 88, 103, 104, 119, 120], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [74], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [46, 55, 64, 74, 87, 88, 119, 120], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [74], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [55, 74, 87, 88], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [74], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [74], "com.google.gson.LongSerializationPolicyTest::testDefaultLongSerialization": [64, 119, 120], "com.google.gson.LongSerializationPolicyTest::testStringLongSerialization": [64, 119, 120], "com.google.gson.JsonPrimitiveTest::testValidJsonOnToString": [321, 325], "com.google.gson.JsonParserTest::testParseUnquotedMultiWordStringFails": [74], "com.google.gson.JsonParserTest::testParseMixedArray": [46, 103, 104, 321, 325], "com.google.gson.JsonParserTest::testParseString": [55, 87, 88], "com.google.gson.JsonParserTest::testParseEmptyString": [64], "com.google.gson.JsonParserTest::testParseReader": [55, 87, 88], "com.google.gson.JsonParserTest::testParseUnquotedStringArrayFails": [46, 103, 104], "com.google.gson.JsonParserTest::testParseEmptyWhitespaceInput": [74], "com.google.gson.JsonObjectTest::testAddingNullPropertyValue": [74], "com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName": [55, 87, 88], "com.google.gson.JsonObjectTest::testDeepCopy": [46, 103, 104], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [74], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [74], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [55, 74, 87, 88]}, "com.google.gson.internal.bind.ArrayTypeAdapter": {"com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [58, 60, 64, 69, 70, 71, 72, 73, 76, 77, 80, 85, 90, 91, 92, 93], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [60, 64, 69, 70, 71, 72, 73, 75, 76, 77, 80], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [58, 64, 70, 71, 72, 75, 85, 91, 92, 93], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [58, 64, 70, 71, 72, 75, 85, 91, 92, 93], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [64, 70, 71, 72, 75], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [64, 70, 71, 72, 75], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [64, 65], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [64, 70, 71, 72, 75], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [58, 64, 70, 71, 72, 75], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [64, 70, 71, 72, 75], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [58, 64, 70, 71, 72, 75], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [64, 70, 71, 72, 75], "com.google.gson.functional.JsonParserTest::testParseInvalidJson": [64, 70, 71, 72], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [58, 85, 90, 91, 92, 93], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [58, 64, 70, 71, 72, 85, 91, 93], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [58, 85, 90, 91, 92, 93], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [58, 64, 70, 71, 72, 75], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [58, 60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [60, 64, 69, 70, 71, 72, 73, 75, 76, 77, 80], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [60, 64, 69, 70, 71, 76, 77, 80], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [60, 64, 69, 70, 71, 72, 73, 76, 77, 80], "com.google.gson.functional.ArrayTest::testInvalidArrayDeserialization": [64, 70, 71, 72]}, "com.google.gson.internal.Primitives": {"com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [82, 98, 100], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [82, 98, 100]}, "com.google.gson.JsonParseException": {"com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch": [42]}, "com.google.gson.TypeAdapter": {"com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [284, 285], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [284, 285], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [234], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [234], "com.google.gson.ObjectTypeAdapterTest::testSerializeObject": [215, 221], "com.google.gson.ObjectTypeAdapterTest::testDeserializeNullValue": [259, 260, 273], "com.google.gson.ObjectTypeAdapterTest::testSerializeNullValue": [215, 221], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [259, 260, 273], "com.google.gson.ObjectTypeAdapterTest::testSerialize": [215, 221]}, "com.google.gson.stream.JsonReader": {"com.google.gson.internal.bind.JsonElementReaderTest::testStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 577, 579, 817, 822, 824, 826, 827, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.internal.bind.JsonElementReaderTest::testWrongType": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 556, 557, 577, 579, 817, 822, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbersFromStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 577, 579, 817, 822, 824, 826, 827, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.internal.bind.JsonElementReaderTest::testSkipValue": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 556, 557, 577, 579, 581, 583, 590, 591, 592, 610, 614, 618, 622, 623, 625, 631, 632, 633, 636, 637, 642, 649, 756, 774, 788, 793, 795, 797, 798, 803, 817, 822, 824, 826, 827, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.internal.bind.JsonElementReaderTest::testStrictNansAndInfinities": [238, 239, 240, 245, 269, 270, 272, 293, 326, 333, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 579, 583, 590, 591, 595, 596, 605, 610, 614, 618, 622, 623, 624, 627, 631, 632, 633, 636, 637, 638, 654, 655, 656, 661, 663, 666, 667, 680, 681, 683, 716, 717, 720, 756, 776, 817, 822, 823, 840, 842, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbers": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 579, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 659, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 743, 744, 745, 756, 774, 817, 822, 824, 826, 828, 831, 832, 840, 842, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.internal.bind.JsonElementReaderTest::testBooleans": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 447, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 579, 583, 590, 591, 592, 610, 614, 615, 617, 618, 619, 621, 631, 632, 633, 636, 637, 642, 648, 649, 756, 774, 853, 857, 858, 860, 861, 864, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.internal.bind.JsonElementReaderTest::testObject": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 659, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 743, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 828, 831, 832, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.internal.bind.JsonElementReaderTest::testStringsFromNumbers": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 579, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 659, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 743, 745, 756, 774, 817, 822, 824, 826, 828, 831, 832, 842, 1280, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.internal.bind.JsonElementReaderTest::testArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 579, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 659, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 743, 744, 745, 756, 774, 817, 822, 824, 826, 828, 831, 832, 840, 842, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.internal.bind.JsonElementReaderTest::testNestedObjects": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 466, 467, 469, 482, 483, 485, 486, 487, 498, 499, 501, 506, 507, 520, 521, 523, 536, 537, 538, 553, 554, 581, 788, 793, 795, 797, 798, 803, 805, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.internal.bind.JsonElementReaderTest::testLenientNansAndInfinities": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 579, 583, 590, 591, 595, 596, 605, 610, 614, 618, 622, 623, 624, 627, 631, 632, 633, 636, 637, 638, 654, 655, 656, 661, 663, 666, 667, 680, 681, 683, 716, 717, 720, 756, 776, 817, 822, 823, 840, 842, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1235, 1236, 1237, 1261, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 618, 619, 621, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 853, 857, 861, 862, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1235, 1236, 1237, 1261, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1235, 1236, 1237, 1261, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 387, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 498, 499, 513, 514, 515, 520, 523, 524, 534, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 605, 610, 614, 618, 622, 627, 654, 655, 656, 663, 667, 680, 681, 716, 717, 720, 756, 776, 788, 793, 794, 803, 805, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1235, 1236, 1237, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1573, 1582, 1583], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 618, 619, 621, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 853, 857, 861, 862, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.UncategorizedTest::testTrailingWhitespace": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 579, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 592, 610, 614, 615, 617, 631, 632, 633, 636, 637, 642, 648, 649, 756, 774, 788, 793, 795, 797, 798, 803, 805, 853, 857, 858, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 447, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 556, 557, 577, 579, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 615, 617, 618, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 853, 857, 858, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 447, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 579, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 618, 619, 621, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 853, 857, 861, 862, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 579, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 817, 822, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 596, 605, 610, 614, 618, 619, 620, 631, 632, 633, 636, 637, 638, 654, 655, 656, 663, 667, 680, 681, 716, 717, 720, 756, 776, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 596, 605, 610, 614, 618, 619, 620, 631, 632, 633, 636, 637, 638, 654, 655, 656, 663, 667, 680, 681, 716, 717, 720, 756, 776, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 596, 605, 610, 614, 618, 619, 620, 631, 632, 633, 636, 637, 638, 654, 655, 656, 663, 667, 680, 681, 716, 717, 720, 756, 776, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 596, 605, 610, 614, 618, 619, 620, 631, 632, 633, 636, 637, 638, 654, 655, 656, 663, 667, 680, 681, 716, 717, 720, 756, 776, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 506, 507, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 579, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 659, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 743, 744, 745, 756, 774, 776, 788, 793, 794, 803, 805, 817, 822, 824, 825, 826, 828, 831, 832, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 788, 793, 795, 796, 803, 805, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 788, 793, 795, 796, 803, 805, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 788, 793, 795, 796, 803, 805, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 788, 793, 795, 796, 803, 805, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.StringTest::testEscapedCtrlNInStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 817, 822, 824, 825, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1015, 1016, 1018, 1019, 1020, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1516, 1582, 1583], "com.google.gson.functional.StringTest::testEscapingQuotesInStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 817, 822, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1015, 1016, 1018, 1019, 1020, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1516, 1582, 1583], "com.google.gson.functional.StringTest::testAssignmentCharDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 577, 817, 822, 824, 825, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.StringTest::testSingleQuoteInStringSerialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 817, 822, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1015, 1016, 1018, 1019, 1020, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1516, 1517, 1524, 1537, 1582, 1583], "com.google.gson.functional.StringTest::testJavascriptKeywordsInStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 817, 822, 824, 825, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.StringTest::testEscapedCtrlRInStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 817, 822, 824, 825, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1015, 1016, 1018, 1019, 1020, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1516, 1582, 1583], "com.google.gson.functional.StringTest::testSingleQuoteInStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 817, 822, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.StringTest::testStringValueDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 817, 822, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.StringTest::testStringWithEscapedSlashDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 817, 822, 824, 825, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1015, 1016, 1018, 1019, 1020, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1516, 1582, 1583, 1585], "com.google.gson.functional.StringTest::testEscapingQuotesInStringSerialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 817, 822, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1015, 1016, 1018, 1019, 1020, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1516, 1582, 1583], "com.google.gson.functional.StringTest::testEscapedBackslashInStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 817, 822, 824, 825, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1015, 1016, 1018, 1019, 1020, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1516, 1582, 1583], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 579, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 709, 710, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 733, 734, 742, 744, 745, 746, 748, 749, 756, 774, 788, 793, 795, 796, 803, 805, 817, 822, 824, 825, 840, 901, 906, 912, 914, 931, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 618, 622, 623, 625, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 661, 663, 666, 667, 680, 681, 709, 710, 716, 717, 722, 724, 725, 733, 734, 742, 746, 748, 749, 756, 774, 788, 793, 795, 796, 803, 805, 878, 882, 883, 901, 906, 912, 914, 931, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 579, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 680, 681, 709, 710, 716, 717, 722, 724, 725, 733, 734, 742, 746, 748, 749, 756, 774, 901, 906, 912, 914, 931, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 449, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 579, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 618, 622, 623, 625, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 661, 663, 666, 667, 680, 681, 709, 710, 716, 717, 722, 724, 725, 733, 734, 742, 746, 748, 749, 756, 774, 788, 793, 795, 796, 803, 805, 878, 882, 883, 901, 906, 912, 914, 931, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 579, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 680, 681, 709, 710, 716, 717, 722, 724, 725, 733, 734, 742, 746, 748, 749, 756, 774, 901, 906, 912, 914, 931, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 680, 681, 709, 710, 716, 717, 722, 723, 724, 725, 726, 733, 734, 742, 746, 748, 749, 756, 774, 817, 822, 824, 825, 840, 901, 906, 912, 914, 931, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 579, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 680, 681, 709, 710, 716, 717, 722, 724, 725, 733, 734, 742, 746, 748, 749, 756, 774, 788, 793, 795, 796, 803, 805, 817, 822, 824, 825, 840, 901, 906, 912, 914, 931, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 788, 793, 795, 796, 803, 805, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 788, 793, 795, 796, 803, 805, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 776, 788, 793, 794, 803, 805, 947, 952, 953, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585, 1589, 1590, 1596], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 776, 788, 793, 794, 803, 805, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1015, 1016, 1018, 1019, 1020, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1516, 1517, 1524, 1537, 1582, 1583, 1585, 1589, 1590, 1596], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 756, 776, 788, 793, 794, 803, 805, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1015, 1016, 1018, 1019, 1020, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1516, 1517, 1524, 1537, 1582, 1583, 1585, 1589, 1590, 1596], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 618, 619, 621, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 853, 857, 861, 862, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ReadersWritersTest::testTypeMismatchThrowsJsonSyntaxExceptionForReaders": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 387, 427, 428, 429, 432, 447, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 610, 614, 615, 617, 631, 632, 633, 636, 637, 642, 649, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 459, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 540, 541, 542, 543, 544, 547, 553, 554, 577, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 615, 617, 618, 619, 621, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 842, 853, 857, 858, 860, 861, 862, 864, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1417, 1582, 1583], "com.google.gson.functional.ReadersWritersTest::testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 449, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 610, 614, 618, 622, 623, 625, 631, 632, 633, 636, 637, 642, 649, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 540, 541, 542, 543, 547, 553, 554, 577, 817, 822, 824, 826, 827, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ReadersWritersTest::testTopLevelNullObjectDeserializationWithReader": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 449, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 610, 614, 618, 622, 623, 625, 631, 632, 633, 636, 637, 642, 649, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.ReadersWritersTest::testTypeMismatchThrowsJsonSyntaxExceptionForStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 387, 427, 428, 429, 432, 447, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 610, 614, 615, 617, 631, 632, 633, 636, 637, 642, 649, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.PrimitiveTest::testBigDecimalAsStringRepresentationDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 668, 673, 680, 681, 694, 695, 702, 703, 709, 710, 716, 722, 724, 725, 733, 734, 735, 736, 742, 746, 749, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testPrimitiveIntegerAutoboxedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 659, 660, 661, 663, 666, 667, 668, 673, 680, 681, 716, 722, 723, 724, 742, 743, 745, 1169, 1175, 1176, 1183, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsLongPrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 581, 947, 952, 958, 961, 972, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testFloatNaNDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 596, 605, 610, 614, 618, 622, 623, 624, 631, 632, 633, 636, 637, 638, 654, 655, 656, 663, 667, 680, 681, 716, 717, 720, 756, 776, 901, 906, 912, 915, 917, 918, 925, 933, 1041, 1042, 1046, 1047, 1070, 1071, 1091, 1092, 1098, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 596, 605, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 680, 681, 683, 716, 717, 720, 756, 776, 901, 906, 912, 915, 917, 918, 925, 933, 1041, 1042, 1046, 1047, 1070, 1071, 1091, 1092, 1098, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 596, 605, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 680, 681, 683, 716, 717, 720, 756, 776, 901, 906, 912, 915, 917, 918, 925, 933, 1041, 1042, 1046, 1047, 1070, 1071, 1091, 1092, 1098, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testBigDecimalNaNDeserializationNotSupported": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 596, 605, 610, 614, 618, 622, 623, 624, 631, 632, 633, 636, 637, 638, 654, 655, 656, 663, 667, 680, 681, 716, 717, 720, 756, 776, 817, 822, 823, 842, 1041, 1042, 1046, 1047, 1070, 1071, 1091, 1092, 1098, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.PrimitiveTest::testDeserializingNonZeroDecimalPointValuesAsIntegerFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 668, 673, 680, 681, 709, 710, 716, 722, 724, 725, 733, 734, 742, 746, 749, 947, 952, 958, 959, 977, 978, 979, 980, 1169, 1175, 1186, 1187, 1205, 1206, 1207, 1208, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.PrimitiveTest::testQuotedStringSerializationAndDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 817, 822, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testReallyLongValuesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 659, 660, 661, 663, 666, 667, 668, 673, 680, 681, 716, 722, 723, 724, 725, 726, 729, 730, 732, 742, 743, 745, 947, 952, 955, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testUnquotedStringDeserializationFails": [230, 238, 239, 240, 245, 269, 270, 272, 293, 326, 333, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 540, 541, 542, 543, 546, 553, 554, 583, 590, 591, 595, 596, 605, 610, 614, 618, 622, 627, 654, 655, 656, 663, 667, 680, 681, 716, 717, 720, 756, 776, 817, 822, 823, 840, 842, 1041, 1042, 1046, 1047, 1070, 1071, 1091, 1092, 1097, 1098, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1422, 1423, 1573, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDoubleAsStringRepresentationDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 668, 673, 680, 681, 694, 695, 702, 703, 709, 710, 716, 722, 724, 725, 733, 734, 735, 736, 742, 746, 749, 901, 906, 912, 913, 925, 933, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 579, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 680, 681, 683, 687, 688, 702, 703, 709, 710, 716, 717, 722, 724, 725, 733, 734, 735, 736, 742, 746, 748, 749, 756, 774, 901, 906, 912, 914, 931, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsDoubleWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 581, 901, 906, 912, 915, 917, 919, 920, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBigInteger": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 438, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 579, 817, 822, 824, 826, 828, 831, 833, 837, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 744, 745, 756, 774, 776, 788, 793, 794, 803, 805, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsLong": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 668, 673, 680, 681, 716, 722, 723, 724, 725, 726, 729, 730, 732, 742, 746, 749, 947, 952, 958, 959, 977, 978, 979, 980, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testPrimitiveClassLiteral": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 659, 660, 661, 663, 666, 667, 668, 673, 680, 681, 716, 722, 723, 724, 742, 743, 745, 1169, 1175, 1176, 1183, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.PrimitiveTest::testLongAsStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 947, 952, 958, 961, 962, 964, 967, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBigDecimal": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 581, 817, 822, 824, 826, 828, 831, 833, 837, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsLongWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 438, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 579, 947, 952, 958, 961, 972, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBytePrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 581, 1169, 1175, 1186, 1189, 1200, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDoubleInfinityDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 596, 605, 610, 614, 618, 622, 627, 654, 655, 656, 663, 667, 680, 681, 716, 717, 720, 756, 776, 901, 906, 912, 915, 917, 918, 925, 933, 1041, 1042, 1046, 1047, 1070, 1071, 1091, 1092, 1098, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testBadValueForBigIntegerDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 668, 673, 680, 681, 709, 710, 716, 722, 723, 724, 725, 726, 733, 734, 742, 746, 749, 817, 822, 824, 826, 828, 831, 833, 834, 842, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsFloat": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 668, 673, 680, 681, 683, 685, 687, 688, 702, 703, 709, 710, 716, 722, 723, 724, 725, 726, 729, 732, 733, 734, 735, 736, 742, 746, 749, 901, 906, 912, 913, 925, 933, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testPrimitiveLongAutoboxedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 659, 660, 661, 663, 666, 667, 668, 673, 680, 681, 716, 722, 723, 724, 742, 743, 745, 947, 952, 955, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.PrimitiveTest::testByteDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 659, 660, 661, 663, 666, 667, 668, 673, 680, 681, 716, 722, 723, 724, 742, 743, 745, 1169, 1175, 1176, 1183, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.PrimitiveTest::testStringsAsBooleans": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 572, 579, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsDoublePrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 438, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 579, 901, 906, 912, 915, 917, 919, 920, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsFloatWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 438, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 579, 901, 906, 912, 915, 917, 919, 920, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsNumber": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 581, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigIntegerDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 668, 673, 680, 681, 716, 722, 723, 724, 725, 726, 729, 730, 732, 742, 745, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.PrimitiveTest::testBigIntegerDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 668, 673, 680, 681, 716, 722, 723, 724, 725, 726, 729, 730, 732, 742, 746, 749, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsBigIntegerFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 668, 673, 680, 681, 683, 685, 687, 688, 702, 703, 709, 710, 716, 722, 723, 724, 725, 726, 729, 732, 733, 734, 735, 736, 742, 746, 749, 817, 822, 824, 826, 828, 831, 833, 834, 842, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBigDecimal": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 438, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 579, 817, 822, 824, 826, 828, 831, 833, 837, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsNumber": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 438, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 579, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDoubleNoFractAsStringRepresentationDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 668, 673, 680, 681, 694, 695, 702, 703, 716, 722, 724, 725, 733, 735, 736, 742, 746, 749, 901, 906, 912, 913, 925, 933, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsFloatPrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 581, 901, 906, 912, 915, 917, 919, 920, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsShortWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 438, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 579, 1169, 1175, 1186, 1189, 1200, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 668, 673, 680, 681, 683, 685, 709, 710, 716, 722, 723, 724, 725, 726, 729, 732, 733, 734, 742, 746, 749, 901, 906, 912, 913, 925, 933, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testLargeDoubleDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 668, 673, 680, 681, 702, 703, 709, 710, 716, 722, 724, 725, 733, 734, 735, 736, 742, 746, 749, 901, 906, 912, 913, 925, 933, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsShortPrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 581, 1169, 1175, 1186, 1189, 1200, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializingDecimalPointValueZeroSucceeds": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 668, 673, 680, 681, 709, 710, 716, 722, 724, 725, 733, 734, 742, 746, 749, 1169, 1175, 1186, 1187, 1205, 1206, 1214, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsInteger": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 581, 1169, 1175, 1186, 1189, 1200, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.PrimitiveTest::testBigDecimalNegativeInfinityDeserializationNotSupported": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 596, 605, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 680, 681, 683, 716, 717, 720, 756, 776, 817, 822, 823, 842, 1041, 1042, 1046, 1047, 1070, 1071, 1091, 1092, 1098, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigDecimalDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 668, 673, 680, 681, 709, 710, 716, 722, 724, 725, 733, 734, 742, 746, 749, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.PrimitiveTest::testNumberDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 659, 660, 661, 663, 666, 667, 668, 673, 680, 681, 709, 710, 716, 722, 723, 724, 725, 726, 729, 730, 732, 733, 734, 742, 743, 745, 746, 749, 817, 822, 824, 826, 828, 831, 832, 833, 834, 842, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsInteger": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 668, 673, 680, 681, 716, 722, 723, 724, 725, 726, 729, 730, 732, 742, 746, 749, 1169, 1175, 1186, 1187, 1205, 1206, 1207, 1208, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testBigDecimalDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 668, 673, 680, 681, 683, 685, 687, 688, 702, 703, 709, 710, 716, 722, 723, 724, 725, 726, 729, 732, 733, 734, 735, 736, 742, 746, 749, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBooleanWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 438, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 579, 853, 857, 861, 866, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBigInteger": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 581, 817, 822, 824, 826, 828, 831, 833, 837, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testBigDecimalInfinityDeserializationNotSupported": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 596, 605, 610, 614, 618, 622, 627, 654, 655, 656, 663, 667, 680, 681, 716, 717, 720, 756, 776, 817, 822, 823, 842, 1041, 1042, 1046, 1047, 1070, 1071, 1091, 1092, 1098, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsByteWrapper": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 438, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 579, 1169, 1175, 1186, 1189, 1200, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testFloatInfinityDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 596, 605, 610, 614, 618, 622, 627, 654, 655, 656, 663, 667, 680, 681, 716, 717, 720, 756, 776, 901, 906, 912, 915, 917, 918, 925, 933, 1041, 1042, 1046, 1047, 1070, 1071, 1091, 1092, 1098, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsBigDecimal": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 668, 673, 680, 681, 716, 722, 723, 724, 725, 726, 729, 730, 732, 742, 746, 749, 817, 822, 824, 826, 828, 831, 833, 834, 842, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDoubleNaNDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 596, 605, 610, 614, 618, 622, 623, 624, 631, 632, 633, 636, 637, 638, 654, 655, 656, 663, 667, 680, 681, 716, 717, 720, 756, 776, 901, 906, 912, 915, 917, 918, 925, 933, 1041, 1042, 1046, 1047, 1070, 1071, 1091, 1092, 1098, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.PrimitiveTest::testBooleanDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 447, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 610, 614, 615, 617, 618, 619, 621, 631, 632, 633, 636, 637, 642, 649, 853, 857, 860, 861, 864, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.PrimitiveTest::testBigDecimalPreservePrecisionDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 668, 673, 680, 681, 709, 710, 716, 722, 724, 725, 733, 734, 742, 746, 749, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBooleanPrimitive": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 581, 853, 857, 861, 866, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testBigDecimalNoFractAsStringRepresentationDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 668, 673, 680, 681, 694, 695, 702, 703, 716, 722, 724, 725, 733, 735, 736, 742, 746, 749, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.PrimitiveTest::testValueVeryCloseToZeroIsZero": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 668, 673, 680, 681, 683, 685, 687, 688, 702, 703, 709, 710, 716, 722, 723, 724, 725, 726, 729, 732, 733, 734, 735, 736, 742, 746, 749, 947, 952, 958, 959, 977, 978, 986, 1169, 1175, 1186, 1187, 1205, 1206, 1214, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsIntegerFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 668, 673, 680, 681, 683, 685, 687, 688, 702, 703, 709, 710, 716, 722, 723, 724, 725, 726, 729, 732, 733, 734, 735, 736, 742, 746, 749, 1169, 1175, 1186, 1187, 1205, 1206, 1207, 1208, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsDouble": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 668, 673, 680, 681, 683, 685, 687, 688, 702, 703, 709, 710, 716, 722, 723, 724, 725, 726, 729, 732, 733, 734, 735, 736, 742, 746, 749, 901, 906, 912, 913, 925, 933, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.PrimitiveCharacterTest::testPrimitiveCharacterAutoboxedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 583, 590, 591, 595, 596, 605, 610, 614, 618, 622, 627, 654, 655, 656, 663, 667, 680, 681, 716, 717, 720, 756, 776, 817, 822, 823, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1041, 1042, 1046, 1047, 1070, 1071, 1091, 1092, 1098, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 618, 619, 621, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 853, 857, 861, 862, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 579, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 579, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 618, 619, 621, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 853, 857, 861, 862, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 618, 619, 621, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 709, 710, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 733, 734, 742, 744, 745, 746, 748, 749, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 853, 857, 861, 862, 901, 906, 912, 914, 931, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 744, 745, 756, 774, 776, 788, 793, 794, 803, 805, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 579, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 579, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 659, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 743, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 828, 831, 832, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 556, 557, 579, 581, 788, 793, 795, 797, 798, 803, 805, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 592, 610, 614, 618, 622, 623, 625, 631, 632, 633, 636, 637, 642, 648, 649, 756, 774, 788, 793, 795, 797, 798, 803, 805, 878, 882, 883, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ObjectTest::testEmptyStringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 466, 467, 469, 482, 520, 536, 537, 538, 1289, 1291, 1295, 1300, 1314, 1341, 1342, 1344, 1345, 1346, 1413, 1414, 1582], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 579, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 592, 610, 614, 618, 622, 623, 625, 631, 632, 633, 636, 637, 642, 648, 649, 756, 774, 788, 793, 795, 797, 798, 803, 805, 878, 882, 883, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ObjectTest::testTruncatedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 577, 579, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1413, 1414, 1582, 1583], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 579, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1235, 1236, 1237, 1261, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 618, 619, 621, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 853, 857, 861, 862, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 592, 610, 614, 618, 622, 623, 625, 631, 632, 633, 636, 637, 642, 648, 649, 756, 774, 788, 793, 795, 797, 798, 803, 805, 878, 882, 883, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 447, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 579, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 618, 619, 621, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 853, 857, 861, 862, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 756, 776, 788, 793, 794, 803, 805, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 615, 617, 618, 619, 621, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 853, 857, 858, 861, 862, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 618, 619, 621, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 853, 857, 861, 862, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 504, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 615, 617, 618, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 776, 788, 793, 794, 795, 796, 797, 798, 803, 805, 817, 822, 824, 825, 840, 853, 857, 858, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 579, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 618, 619, 621, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 853, 857, 861, 862, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 744, 745, 756, 774, 788, 793, 795, 796, 797, 798, 803, 805, 817, 822, 824, 825, 840, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 466, 467, 469, 482, 485, 498, 499, 506, 507, 520, 536, 537, 538, 553, 554, 581, 1280, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 744, 745, 756, 774, 788, 793, 795, 796, 803, 805, 817, 822, 824, 825, 840, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 615, 617, 618, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 694, 695, 702, 703, 709, 710, 716, 717, 722, 723, 724, 725, 733, 734, 735, 736, 742, 744, 745, 746, 748, 749, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 828, 831, 833, 835, 840, 853, 857, 858, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 447, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 579, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 618, 619, 621, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 853, 857, 861, 862, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 796, 803, 805, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.NullObjectAndFieldTest::testTopLevelNullObjectDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 449, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 610, 614, 618, 622, 623, 625, 631, 632, 633, 636, 637, 642, 649, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 592, 610, 614, 618, 622, 623, 625, 631, 632, 633, 636, 637, 642, 648, 649, 756, 774, 788, 793, 795, 797, 798, 803, 805, 878, 882, 883, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 579, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 776, 788, 793, 794, 803, 805, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 592, 610, 614, 618, 622, 623, 625, 631, 632, 633, 636, 637, 642, 648, 649, 756, 774, 788, 793, 795, 796, 803, 805, 878, 882, 883, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 592, 610, 614, 618, 622, 623, 625, 631, 632, 633, 636, 637, 642, 648, 649, 756, 774, 776, 788, 793, 794, 803, 805, 878, 882, 883, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 756, 776, 788, 793, 794, 803, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1042, 1046, 1047, 1097, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1015, 1016, 1018, 1019, 1020, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1516, 1582, 1583], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapTest::testMapDeserialization": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapTest::testMapDeserializationEmpty": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 466, 467, 469, 482, 485, 498, 499, 506, 507, 520, 536, 537, 538, 553, 554, 581, 1280, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 592, 610, 614, 618, 622, 623, 625, 631, 632, 633, 636, 637, 642, 648, 649, 756, 774, 817, 822, 824, 826, 827, 840, 878, 882, 883, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapTest::testDeerializeMapOfMaps": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 498, 499, 504, 520, 523, 536, 537, 538, 553, 554, 572, 581, 788, 793, 795, 796, 803, 805, 817, 822, 824, 825, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapTest::testBooleanKeyDeserialization": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 756, 776, 817, 822, 823, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1042, 1046, 1047, 1097, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapTest::testNumberKeyDeserialization": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 817, 822, 824, 825, 840, 901, 906, 912, 915, 916, 931, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapTest::testHashMapDeserialization": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1169, 1175, 1186, 1189, 1190, 1193, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapTest::testSortedMap": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1169, 1175, 1186, 1189, 1190, 1193, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 744, 745, 756, 774, 817, 822, 824, 826, 827, 840, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 756, 776, 817, 822, 823, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1042, 1046, 1047, 1097, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 592, 610, 614, 615, 617, 631, 632, 633, 636, 637, 642, 648, 649, 756, 774, 817, 822, 824, 826, 827, 840, 853, 857, 858, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapTest::testComplexKeysDeserialization": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 387, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 485, 498, 499, 504, 520, 536, 537, 538, 553, 554, 581, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 744, 745, 756, 774, 776, 817, 822, 823, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1042, 1046, 1047, 1097, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1169, 1175, 1186, 1189, 1190, 1193, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapTest::testStringKeyDeserialization": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 361, 362, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 579, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 361, 362, 364, 365, 367, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 577, 579, 817, 822, 824, 826, 827, 840, 901, 906, 912, 915, 916, 925, 931, 933, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 361, 362, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 579, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 776, 788, 793, 794, 803, 805, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 361, 362, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 447, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 579, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 615, 617, 618, 619, 621, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 853, 857, 858, 861, 862, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.JsonParserTest::testParseInvalidJson": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 416, 417, 418, 420, 427, 428, 429, 432, 438, 466, 467, 468, 469, 471, 482, 520, 536, 537, 538, 553, 554, 556, 557, 579, 1280, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1413, 1414, 1582, 1583, 1585], "com.google.gson.functional.JsonParserTest::testExtraCommasInMaps": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 498, 499, 506, 509, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 605, 610, 614, 618, 622, 627, 654, 655, 656, 663, 667, 680, 681, 716, 717, 720, 756, 776, 817, 822, 823, 840, 1042, 1046, 1047, 1097, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1573, 1582, 1583], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 744, 745, 756, 774, 788, 793, 795, 796, 803, 805, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.JsonParserTest::testExtraCommasInArrays": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 449, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 556, 563, 565, 566, 579, 583, 590, 591, 595, 596, 605, 610, 614, 618, 622, 627, 654, 655, 656, 663, 667, 680, 681, 716, 717, 720, 756, 776, 817, 822, 823, 840, 878, 882, 883, 1042, 1046, 1047, 1097, 1280, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 788, 793, 795, 796, 803, 805, 817, 818, 819, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 788, 793, 795, 796, 803, 805, 817, 818, 819, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 788, 793, 795, 796, 803, 805, 817, 818, 819, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 788, 793, 795, 796, 803, 805, 817, 818, 819, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 788, 793, 795, 796, 803, 805, 817, 818, 819, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 427, 428, 429, 466, 467, 469, 482, 483, 485, 498, 499, 504, 520, 523, 536, 537, 538, 553, 554, 572, 581, 788, 789, 790, 793, 795, 796, 803, 817, 818, 819, 822, 824, 825, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 596, 605, 610, 614, 618, 622, 627, 654, 655, 656, 663, 667, 680, 681, 716, 717, 720, 756, 776, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.InternationalizationTest::testStringsWithUnicodeChineseCharactersEscapedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 817, 822, 824, 825, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1015, 1016, 1018, 1019, 1020, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1516, 1517, 1524, 1537, 1582, 1583], "com.google.gson.functional.InternationalizationTest::testStringsWithRawChineseCharactersDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 817, 822, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.InternationalizationTest::testStringsWithUnicodeChineseCharactersDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 817, 822, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForCollectionType": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 577, 579, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 756, 776, 788, 793, 794, 803, 805, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1103, 1105, 1106, 1108, 1109, 1110, 1111, 1235, 1236, 1237, 1240, 1243, 1246, 1249, 1252, 1254, 1255, 1261, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 577, 579, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 756, 776, 788, 793, 794, 803, 805, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1103, 1105, 1106, 1108, 1109, 1110, 1111, 1235, 1236, 1237, 1240, 1243, 1246, 1249, 1252, 1254, 1255, 1261, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 756, 776, 788, 793, 794, 803, 805, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1103, 1105, 1106, 1108, 1109, 1110, 1111, 1235, 1236, 1237, 1240, 1243, 1246, 1249, 1252, 1254, 1255, 1261, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 579, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 709, 710, 716, 717, 722, 723, 724, 725, 733, 734, 742, 744, 745, 746, 748, 749, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 901, 906, 912, 913, 914, 925, 931, 933, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 615, 617, 618, 619, 621, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 853, 857, 858, 861, 862, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 709, 710, 716, 717, 722, 723, 724, 725, 726, 733, 734, 742, 744, 745, 746, 748, 749, 756, 774, 776, 788, 793, 794, 803, 805, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1169, 1175, 1181, 1235, 1236, 1237, 1240, 1243, 1246, 1249, 1252, 1254, 1256, 1258, 1259, 1261, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 506, 507, 520, 521, 523, 536, 537, 538, 553, 554, 581, 788, 793, 795, 797, 798, 803, 805, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 581, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 615, 617, 618, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 842, 853, 857, 858, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1015, 1016, 1018, 1019, 1020, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1516, 1582, 1583], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 577, 579, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1015, 1016, 1018, 1019, 1020, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1516, 1582, 1583], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 615, 617, 618, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 853, 857, 858, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1015, 1016, 1018, 1019, 1020, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1516, 1517, 1524, 1537, 1582, 1583], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 615, 617, 618, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 853, 857, 858, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1015, 1016, 1018, 1019, 1020, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1516, 1517, 1524, 1537, 1582, 1583], "com.google.gson.functional.EnumTest::testEnumSet": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 577, 579, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 817, 822, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.EnumTest::testEnumSubclassAsParameterizedType": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 577, 579, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 756, 776, 788, 793, 794, 803, 805, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.EnumTest::testCollectionOfEnumsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 577, 579, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 817, 822, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.EnumTest::testEnumSubclass": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 577, 579, 817, 822, 824, 826, 827, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 577, 579, 817, 822, 824, 826, 827, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 577, 579, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 447, 454, 457, 466, 467, 468, 469, 471, 472, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 579, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 615, 617, 618, 619, 621, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 853, 857, 858, 861, 862, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlDateDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultCalendarDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 427, 428, 429, 432, 434, 436, 444, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 659, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 743, 744, 745, 756, 774, 776, 788, 793, 794, 803, 805, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1169, 1170, 1171, 1175, 1176, 1181, 1183, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testUuidDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimeDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 498, 499, 501, 520, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 605, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 680, 681, 683, 687, 688, 702, 703, 709, 710, 713, 716, 722, 724, 725, 733, 734, 735, 736, 788, 793, 795, 797, 798, 803, 805, 817, 822, 823, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1041, 1042, 1046, 1047, 1091, 1092, 1098, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 661, 663, 666, 667, 680, 681, 683, 685, 687, 688, 702, 703, 709, 710, 716, 717, 722, 723, 724, 725, 726, 729, 732, 733, 734, 735, 736, 742, 746, 748, 749, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 828, 831, 833, 835, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 817, 822, 824, 825, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguage": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.DefaultTypeAdaptersTest::testBitSetDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 427, 428, 429, 432, 438, 440, 447, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 577, 579, 583, 590, 591, 592, 595, 596, 597, 610, 614, 615, 617, 618, 619, 621, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 817, 822, 824, 826, 827, 840, 853, 857, 858, 861, 862, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguageCountry": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 817, 822, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 817, 822, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 572, 579, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testUriDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 817, 822, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 756, 776, 817, 822, 823, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1042, 1046, 1047, 1097, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 746, 748, 749, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 828, 831, 833, 835, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testClassDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 596, 605, 610, 614, 618, 622, 627, 654, 655, 656, 663, 667, 680, 681, 716, 717, 720, 756, 776, 817, 822, 823, 842, 1041, 1042, 1046, 1047, 1070, 1071, 1091, 1092, 1098, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBuilderDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultGregorianCalendarDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 427, 428, 429, 432, 434, 436, 444, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 659, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 743, 744, 745, 756, 774, 776, 788, 793, 794, 803, 805, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1169, 1170, 1171, 1175, 1176, 1181, 1183, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 577, 579, 817, 822, 824, 826, 827, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 817, 822, 824, 825, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1015, 1016, 1018, 1019, 1020, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1516, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 817, 822, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testStringBufferDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 817, 822, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguageCountryVariant": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 817, 822, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 817, 822, 824, 825, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 466, 467, 469, 482, 485, 498, 499, 506, 507, 520, 536, 537, 538, 553, 554, 581, 1280, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 817, 822, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 447, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 615, 617, 618, 622, 627, 631, 632, 633, 636, 637, 642, 649, 654, 655, 656, 659, 660, 661, 663, 666, 667, 668, 673, 680, 681, 716, 722, 723, 724, 742, 743, 745, 817, 822, 824, 826, 828, 831, 832, 842, 853, 857, 860, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 572, 817, 822, 824, 825, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 572, 579, 817, 822, 824, 825, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 610, 614, 618, 622, 623, 625, 631, 632, 633, 636, 637, 642, 648, 649, 756, 774, 776, 788, 793, 794, 803, 805, 878, 882, 883, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 659, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 743, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 828, 831, 832, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 659, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 743, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 828, 831, 832, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 668, 673, 680, 681, 716, 722, 723, 724, 742, 745, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 504, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 817, 822, 824, 825, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 579, 581, 756, 776, 788, 793, 794, 803, 805, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 579, 581, 756, 776, 788, 793, 794, 803, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1042, 1046, 1047, 1097, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 756, 776, 788, 793, 794, 803, 805, 817, 822, 824, 825, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 581, 788, 793, 795, 797, 798, 803, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 756, 776, 788, 793, 794, 803, 805, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 756, 776, 788, 793, 794, 803, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1042, 1046, 1047, 1097, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 577, 579, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 817, 822, 824, 826, 827, 840, 901, 906, 907, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 572, 579, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CollectionTest::testSetDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 579, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 776, 788, 793, 794, 803, 805, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 579, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 579, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CollectionTest::testQueueDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 572, 579, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 447, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 579, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 618, 619, 621, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 659, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 743, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 853, 857, 861, 862, 901, 906, 907, 909, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 447, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 577, 579, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 615, 617, 618, 619, 621, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 853, 857, 858, 861, 862, 947, 952, 953, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 577, 579, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 579, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CollectionTest::testTopLevelCollectionOfIntegersDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 579, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 449, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 577, 579, 583, 590, 591, 592, 610, 614, 618, 622, 623, 625, 631, 632, 633, 636, 637, 642, 648, 649, 756, 774, 817, 822, 824, 826, 827, 840, 878, 882, 883, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 556, 557, 579, 581, 788, 793, 795, 797, 798, 803, 805, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 577, 579, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 577, 579, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 449, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 579, 583, 590, 591, 592, 610, 614, 618, 622, 623, 625, 631, 632, 633, 636, 637, 642, 648, 649, 756, 774, 878, 882, 883, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 572, 579, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 579, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 579, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 449, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 579, 583, 590, 591, 592, 610, 614, 618, 622, 623, 625, 631, 632, 633, 636, 637, 642, 648, 649, 756, 774, 878, 882, 883, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 572, 579, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 659, 660, 661, 663, 666, 667, 680, 681, 709, 710, 716, 717, 722, 723, 724, 725, 733, 734, 742, 743, 744, 745, 746, 748, 749, 756, 774, 817, 822, 824, 825, 840, 901, 906, 907, 909, 912, 913, 914, 925, 931, 933, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 556, 557, 579, 1280, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 449, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 577, 579, 583, 590, 591, 592, 610, 614, 618, 622, 623, 625, 631, 632, 633, 636, 637, 642, 648, 649, 756, 774, 817, 822, 824, 826, 827, 840, 878, 882, 883, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.functional.ArrayTest::testInvalidArrayDeserialization": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 480, 482, 520, 536, 537, 538, 553, 554, 579, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1573, 1582, 1583], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverridePrimitiveBooleanAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 447, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 615, 617, 618, 622, 627, 631, 632, 633, 636, 637, 642, 649, 654, 655, 656, 659, 660, 661, 663, 666, 667, 668, 673, 680, 681, 716, 722, 723, 724, 742, 743, 745, 853, 857, 860, 1169, 1175, 1176, 1183, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideWrapperBooleanAdapter": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 447, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 615, 617, 618, 622, 627, 631, 632, 633, 636, 637, 642, 649, 654, 655, 656, 659, 660, 661, 663, 666, 667, 668, 673, 680, 681, 716, 722, 723, 724, 742, 743, 745, 853, 857, 860, 1169, 1175, 1176, 1183, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.ObjectTypeAdapterTest::testDeserializeNullValue": [238, 239, 240, 245, 269, 270, 272, 293, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 449, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 553, 554, 581, 583, 590, 591, 592, 610, 614, 618, 622, 623, 625, 631, 632, 633, 636, 637, 642, 648, 649, 756, 774, 788, 793, 795, 797, 798, 803, 878, 882, 883, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [238, 239, 240, 245, 269, 270, 272, 293, 341, 345, 346, 348, 360, 364, 365, 367, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 449, 454, 457, 466, 467, 468, 469, 471, 472, 474, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 553, 554, 577, 579, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 618, 622, 623, 625, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 878, 882, 883, 901, 906, 907, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410], "com.google.gson.MixedStreamTest::testReadInvalidState": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 379, 380, 381, 383, 384, 385, 427, 428, 429, 432, 444, 466, 467, 469, 482, 485, 498, 499, 501, 520, 536, 553, 554, 579, 581, 817, 822, 824, 826, 828, 831, 833, 837, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410], "com.google.gson.MixedStreamTest::testReaderDoesNotMutateState": [326, 333], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [238, 239, 240, 245, 269, 270, 272, 293, 341, 342, 343, 345, 346, 348, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 468, 469, 471, 472, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 553, 554, 577, 579, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410], "com.google.gson.MixedStreamTest::testReadClosed": [269, 427, 428, 429, 466, 467, 469, 482, 520, 536, 541, 549, 550, 1221, 1222, 1223], "com.google.gson.JsonStreamParserTest::testNoSideEffectForHasNext": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 459, 466, 467, 469, 482, 520, 536, 537, 538, 540, 541, 542, 543, 544, 547, 553, 554, 572, 817, 822, 824, 825, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1417, 1582, 1583], "com.google.gson.JsonStreamParserTest::testIterator": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 459, 466, 467, 469, 482, 520, 536, 537, 538, 540, 541, 542, 543, 544, 547, 553, 554, 572, 817, 822, 824, 825, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1417, 1582, 1583], "com.google.gson.JsonStreamParserTest::testParseTwoStrings": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 540, 541, 542, 543, 547, 553, 554, 572, 817, 822, 824, 825, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.JsonStreamParserTest::testCallingNextBeyondAvailableInput": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 459, 466, 467, 469, 482, 520, 536, 537, 538, 540, 541, 542, 543, 544, 547, 553, 554, 572, 817, 822, 824, 825, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1417, 1582, 1583], "com.google.gson.JsonParserTest::testParseUnquotedSingleWordStringFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 596, 605, 610, 614, 615, 616, 631, 632, 633, 636, 637, 638, 654, 655, 656, 663, 667, 680, 681, 716, 717, 720, 756, 776, 817, 822, 823, 842, 1041, 1042, 1046, 1047, 1070, 1071, 1091, 1092, 1098, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.JsonParserTest::testParseUnquotedMultiWordStringFails": [230, 238, 239, 240, 245, 269, 270, 272, 293, 326, 333, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 540, 541, 542, 543, 546, 553, 554, 583, 590, 591, 595, 596, 605, 610, 614, 615, 616, 631, 632, 633, 636, 637, 638, 654, 655, 656, 663, 667, 680, 681, 716, 717, 720, 756, 776, 817, 822, 823, 840, 1042, 1046, 1047, 1097, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1422, 1423, 1573, 1582, 1583], "com.google.gson.JsonParserTest::testParseInvalidJson": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 360, 364, 365, 367, 416, 417, 418, 420, 427, 428, 429, 432, 438, 466, 467, 468, 469, 471, 482, 520, 536, 537, 538, 553, 554, 556, 557, 579, 1280, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1413, 1414, 1582, 1583, 1585], "com.google.gson.JsonParserTest::testParseMixedArray": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 438, 454, 457, 466, 467, 468, 469, 471, 472, 482, 485, 498, 499, 506, 507, 520, 536, 537, 538, 553, 554, 577, 579, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 659, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 743, 744, 745, 756, 774, 817, 822, 824, 826, 827, 828, 831, 832, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.JsonParserTest::testParseString": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 659, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 743, 744, 745, 756, 774, 776, 788, 793, 794, 803, 805, 817, 822, 824, 825, 826, 828, 831, 832, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.JsonParserTest::testParseEmptyString": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 817, 822, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.JsonParserTest::testParseReader": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 498, 499, 513, 514, 515, 520, 521, 523, 536, 537, 538, 553, 554, 572, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 659, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 725, 726, 729, 730, 732, 742, 743, 744, 745, 756, 774, 776, 788, 793, 794, 803, 805, 817, 822, 824, 825, 826, 828, 831, 832, 840, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.JsonParserTest::testParseUnquotedStringArrayFails": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 482, 520, 536, 537, 538, 553, 554, 579, 583, 590, 591, 595, 596, 605, 610, 614, 618, 622, 627, 654, 655, 656, 663, 667, 680, 681, 716, 717, 720, 756, 776, 817, 822, 823, 840, 842, 1041, 1042, 1046, 1047, 1091, 1092, 1097, 1098, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 397, 401, 402, 405, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 540, 541, 542, 543, 547, 553, 554, 577, 581, 583, 590, 591, 592, 595, 596, 597, 610, 614, 615, 617, 618, 619, 621, 622, 627, 631, 632, 633, 636, 637, 642, 648, 649, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 788, 793, 795, 797, 798, 803, 805, 817, 822, 824, 826, 827, 840, 842, 853, 857, 858, 860, 861, 862, 864, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName": [238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 447, 466, 467, 469, 482, 483, 485, 498, 499, 501, 520, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 592, 610, 614, 615, 617, 631, 632, 633, 636, 637, 642, 649, 756, 774, 788, 793, 795, 797, 798, 803, 805, 853, 857, 860, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.JavaSerializationTest::testMapIsSerializable": [190, 238, 239, 240, 245, 269, 270, 272, 293, 326, 379, 383, 384, 385, 416, 417, 418, 420, 427, 428, 429, 432, 434, 454, 457, 466, 467, 469, 482, 483, 485, 486, 487, 489, 498, 499, 501, 520, 521, 523, 536, 537, 538, 553, 554, 581, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 716, 717, 722, 723, 724, 742, 744, 745, 756, 774, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1169, 1175, 1181, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.JavaSerializationTest::testNumberIsSerializable": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 457, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 579, 583, 590, 591, 595, 596, 597, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 680, 681, 683, 687, 688, 702, 703, 709, 710, 716, 717, 722, 723, 724, 725, 733, 734, 735, 736, 742, 744, 745, 746, 748, 749, 756, 774, 817, 822, 824, 826, 828, 831, 833, 835, 840, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.JavaSerializationTest::testListIsSerializable": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 577, 579, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterDoesNotAffectNonAdaptedTypes": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 454, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 577, 817, 822, 824, 826, 827, 842, 1001, 1004, 1005, 1008, 1009, 1011, 1014, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.GsonTypeAdapterTest::testDefaultTypeAdapterThrowsParseException": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 434, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 581, 817, 822, 824, 826, 828, 831, 833, 837, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 659, 660, 661, 663, 666, 667, 668, 673, 680, 681, 716, 722, 723, 724, 742, 743, 745, 817, 822, 824, 826, 828, 831, 832, 842, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [238, 239, 240, 245, 269, 270, 272, 293, 326, 427, 428, 429, 432, 457, 466, 467, 469, 482, 520, 536, 537, 538, 553, 554, 583, 590, 591, 595, 610, 614, 618, 622, 627, 654, 655, 656, 660, 661, 663, 666, 667, 668, 673, 680, 681, 716, 722, 723, 724, 725, 726, 729, 730, 732, 742, 745, 1289, 1291, 1292, 1295, 1298, 1300, 1301, 1310, 1311, 1314, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1397, 1409, 1410, 1582, 1583, 1585], "com.google.gson.CommentsTest::testParseComments": [238, 239, 240, 245, 269, 270, 272, 293, 326, 341, 345, 346, 348, 416, 417, 418, 420, 427, 428, 429, 432, 438, 454, 466, 467, 468, 469, 471, 472, 474, 482, 520, 536, 537, 538, 553, 554, 577, 579, 817, 822, 824, 826, 827, 840, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1280, 1289, 1291, 1295, 1298, 1300, 1301, 1310, 1311, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1353, 1354, 1358, 1362, 1363, 1364, 1374, 1375, 1378, 1379, 1382, 1383, 1388, 1389, 1390, 1391, 1397, 1398, 1405, 1406, 1407, 1409, 1410, 1433, 1434, 1435, 1439, 1450, 1451, 1456, 1457, 1582, 1583]}, "com.google.gson.internal.bind.JsonTreeReader": {"com.google.gson.internal.bind.JsonElementReaderTest::testStrings": [50, 54, 59, 60, 87, 91, 92, 93, 94, 95, 96, 99, 130, 134, 152, 156], "com.google.gson.internal.bind.JsonElementReaderTest::testWrongType": [50, 54, 59, 60, 64, 65, 66, 70, 76, 87, 91, 92, 93, 94, 95, 96, 99, 100, 105, 107, 108, 109, 110, 111, 112, 130, 134, 138, 139, 144, 152, 153, 154, 156, 160, 165, 170, 171, 172, 174, 183, 184, 185, 187, 193, 194, 195, 197], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbersFromStrings": [50, 54, 59, 60, 87, 91, 92, 93, 94, 95, 96, 99, 130, 134, 170, 174, 179, 183, 187, 188, 189, 193, 197, 198, 199], "com.google.gson.internal.bind.JsonElementReaderTest::testSkipValue": [50, 54, 59, 60, 87, 91, 92, 93, 94, 95, 96, 99, 100, 130, 134, 152, 156, 208, 211], "com.google.gson.internal.bind.JsonElementReaderTest::testStrictNansAndInfinities": [50, 54, 59, 60, 87, 91, 92, 93, 94, 95, 96, 99, 130, 134, 156, 170, 174, 175, 176], "com.google.gson.internal.bind.JsonElementReaderTest::testNumbers": [50, 54, 59, 60, 87, 91, 92, 93, 94, 95, 96, 99, 130, 134, 170, 174, 179, 183, 187, 188, 189, 193, 197, 198, 199], "com.google.gson.internal.bind.JsonElementReaderTest::testEarlyClose": [50, 54, 60, 87, 91, 92, 105, 107, 109, 120, 122, 123, 130, 203, 204], "com.google.gson.internal.bind.JsonElementReaderTest::testBooleans": [50, 54, 59, 60, 87, 91, 92, 93, 94, 95, 96, 99, 130, 134, 138, 160, 161], "com.google.gson.internal.bind.JsonElementReaderTest::testObject": [50, 54, 71, 72, 77, 78, 87, 88, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 109, 110, 111, 113, 115, 116, 130, 134, 145, 146, 147, 148, 197, 198, 199], "com.google.gson.internal.bind.JsonElementReaderTest::testStringsFromNumbers": [50, 54, 59, 60, 87, 91, 92, 93, 94, 95, 96, 99, 130, 134, 152, 156], "com.google.gson.internal.bind.JsonElementReaderTest::testArray": [50, 54, 59, 60, 65, 66, 87, 88, 91, 92, 93, 94, 95, 96, 99, 100, 103, 105, 107, 108, 130, 134, 197, 198, 199], "com.google.gson.internal.bind.JsonElementReaderTest::testNestedObjects": [50, 54, 71, 72, 77, 78, 130, 134, 145, 146, 147, 148], "com.google.gson.internal.bind.JsonElementReaderTest::testLenientNansAndInfinities": [50, 54, 59, 60, 87, 91, 92, 93, 94, 95, 96, 99, 130, 134, 170, 174, 178, 179], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [50, 54, 59, 60, 65, 66, 71, 72, 77, 78, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 99, 100, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 130, 134, 145, 146, 147, 148, 156], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [50, 54, 59, 60, 65, 66, 71, 72, 77, 78, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 99, 100, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 130, 134, 145, 146, 147, 148, 156, 178, 198], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [50, 54, 71, 72, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 130, 134, 145, 146, 147, 148, 156, 198], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [50, 54, 71, 72, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 130, 134, 145, 146, 147, 148, 156, 161, 188, 198], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [50, 54, 87, 91, 92, 105, 107, 109, 110, 111, 112, 130, 134, 156], "com.google.gson.functional.PrimitiveTest::testPrimitiveClassLiteral": [50, 54, 87, 91, 92, 105, 107, 109, 110, 111, 113, 115, 116, 130, 197, 199], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [50, 54, 71, 72, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 109, 110, 111, 112, 130, 134, 156, 178, 221, 222, 223, 224], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [50, 54, 71, 72, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 130, 134, 145, 146, 147, 148, 156, 183, 184, 185, 198], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [50, 54, 71, 72, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 130, 134, 145, 146, 147, 148, 156, 198], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [50, 54, 71, 72, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 130, 134, 145, 146, 147, 148, 156, 188, 198], "com.google.gson.functional.JsonParserTest::testBadTypeForDeserializingCustomTree": [50, 54, 70, 87, 91, 92, 105, 107, 108, 130, 138, 139], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [50, 54, 70, 71, 72, 77, 78, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 130, 134, 138, 139, 145, 146, 147, 148, 198, 208, 211], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [50, 54, 71, 72, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 130, 134, 145, 146, 147, 148, 188, 208, 211], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [50, 54, 71, 72, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 130, 134, 145, 146, 147, 148, 188, 208, 211], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [50, 54, 71, 72, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 109, 110, 111, 112, 130, 134, 145, 146, 147, 148, 156, 208, 211], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [50, 54, 71, 72, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 130, 134, 145, 146, 147, 148, 156, 161, 188, 198]}, "com.google.gson.internal.bind.MapTypeAdapterFactory": {"com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [118, 119, 120], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [118, 119, 120], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [118, 119, 120], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [118, 119, 120], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [118, 119, 120], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [118, 119, 120], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [118, 119, 120], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [116, 118, 119, 120, 123, 124, 126, 131, 133], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [116, 118, 119, 120, 123, 124, 126, 131, 133], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [118, 119, 120], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [118, 119, 120], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [118, 119, 120], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [118, 119, 120], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [118, 119, 120], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [116, 118, 119, 120, 123, 124, 126, 131, 133], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [118, 119, 120, 131, 133], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [118, 119, 120], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [116, 118, 119, 120, 123, 124, 126, 131, 133], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [116, 118, 119, 120, 123, 124, 126, 131, 133], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [116, 118, 119, 120, 123, 124, 126, 131, 133], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [118, 119, 120, 131, 133], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [116, 118, 119, 120, 123, 124, 126, 131, 133], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [118, 119, 120], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [118, 119, 120], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [118, 119, 120], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [118, 119, 120], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [118, 119, 120], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [118, 119, 120], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [118, 119, 120], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [118, 119, 120], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [118, 119, 120], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [118, 119, 120], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [118, 119, 120], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [118, 119, 120], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [118, 119, 120], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [118, 119, 120], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [118, 119, 120], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [118, 119, 120], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [118, 119, 120], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [118, 119, 120], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [105, 112, 116, 118, 119, 120, 123, 124, 126, 131, 133], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [105, 112, 116, 118, 119, 120, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserialization": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testHashMapDeserialization": [111, 116, 118, 119, 123, 124, 125, 126, 127, 131, 133, 140], "com.google.gson.functional.MapTest::testSortedMap": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [111, 116, 118, 119, 123, 124, 125, 126, 127, 131, 133, 140], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [105, 112, 116, 118, 119, 120, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [116, 118, 119, 120, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [105, 112, 116, 118, 119, 120, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [118, 119, 120], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [118, 119, 120], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [118, 119, 120], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [118, 119, 120], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [118, 119, 120], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [118, 119, 120], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [118, 119, 120], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [118, 119, 120], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [118, 119, 120], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [118, 119, 120], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [118, 119, 120], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [118, 119, 120], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [118, 119, 120], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [118, 119, 120], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [118, 119, 120], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [118, 119, 120], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [118, 119, 120], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [118, 119, 120], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [118, 119, 120], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [118, 119, 120], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [118, 119, 120], "com.google.gson.functional.EnumTest::testEnumSet": [118, 119, 120], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [118, 119, 120], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [118, 119, 120], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [118, 119, 120], "com.google.gson.functional.EnumTest::testEnumSubclass": [118, 119, 120], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [118, 119, 120], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [118, 119, 120], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [118, 119, 120], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [111, 116, 118, 119, 124, 125, 126, 127, 131, 133, 140], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [118, 119, 120], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [118, 119, 120], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [118, 119, 120], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [118, 119, 120], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [116, 118, 119, 123, 124, 125, 126, 131, 133, 140], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [118, 119, 120], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [118, 119, 120], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [118, 119, 120], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [118, 119, 120], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [118, 119, 120], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [118, 119, 120], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [118, 119, 120], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [118, 119, 120], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [118, 119, 120], "com.google.gson.functional.CollectionTest::testSetDeserialization": [118, 119, 120], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [118, 119, 120], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [118, 119, 120], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [118, 119, 120], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [118, 119, 120], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [118, 119, 120], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [105, 112, 118, 119, 131, 133], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [105, 112, 118, 119, 131, 133], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [105, 112, 118, 119, 131, 133]}, "com.google.gson.internal.LinkedTreeMap": {"com.google.gson.internal.bind.JsonElementReaderTest::testObject": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 154, 159, 161, 166, 167, 169, 180, 430, 431], "com.google.gson.internal.bind.JsonElementReaderTest::testNestedObjects": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 154, 159, 161, 166, 167, 169, 180, 430, 431], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 175, 180, 186, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416, 430, 431], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 154, 159, 161, 166, 167, 169, 180, 430, 431], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 173, 180, 186, 430, 431], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 175, 180, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416, 430, 431], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 155, 161, 166, 167, 169, 170, 171, 180, 186], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 161, 166, 167, 169, 170, 171, 180, 186], "com.google.gson.functional.MapTest::testMapDeserialization": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 161, 166, 167, 169, 170, 173, 180, 186], "com.google.gson.functional.MapTest::testMapDeserializationEmpty": [48, 60, 78], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [48, 60, 72, 78, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 177, 180, 186], "com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader": [52, 60, 94, 96, 123, 126, 154, 159, 161, 166, 180, 430, 431], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 161, 166, 167, 169, 170, 171, 180, 186], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [48, 60, 72, 78, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 177, 180, 186], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [48, 60, 72, 78, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 177, 180, 186], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [60, 72, 94, 95, 96, 97, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [60, 72, 87, 94, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 155, 161, 166, 167, 169, 170, 171, 175, 186, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [48, 60, 72, 94, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 161, 166, 167, 169, 170, 171, 175, 177, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416, 430, 431], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [48, 60, 72, 94, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 161, 166, 167, 169, 170, 171, 175, 177, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416, 430, 431], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 180, 430, 431], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 154, 159, 161, 166, 167, 169, 180, 430, 431], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [52, 60, 72, 94, 96, 111, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 173, 175, 180, 186, 218, 219, 223, 224, 226, 261, 264, 268, 277, 278, 279, 285, 291, 292, 293, 296, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 347, 348, 354, 362, 363, 375, 385, 388, 402, 405, 408, 413, 416, 417, 430, 431], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 154, 159, 161, 166, 167, 169, 180, 430, 431], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 154, 155, 161, 166, 167, 180, 186], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 173, 175, 180, 186, 285, 291, 292, 296, 299, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 329, 330, 336, 354, 362, 363, 375, 385, 388, 402, 413, 416, 430, 431], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 173, 180, 430, 431], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [48, 60, 72, 78, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 177, 180, 186], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 159, 161, 166, 167, 180, 186, 430, 431], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 159, 161, 166, 167, 180, 186, 430, 431], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 159, 161, 166, 167, 180, 186, 430, 431], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 159, 161, 166, 167, 180, 186, 430, 431], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 180, 186, 430, 431], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 175, 180, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416, 430, 431], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [48, 60, 72, 78, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 161, 166, 167, 169, 170, 173, 175, 177, 180, 186, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 326, 336, 354, 362, 363, 375, 385, 388], "com.google.gson.JsonParserTest::testParseString": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 161, 166, 167, 169, 170, 173, 180, 186], "com.google.gson.JsonParserTest::testParseReader": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 144, 145, 149, 154, 161, 166, 167, 169, 170, 173, 180, 186], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [52, 60, 72, 94, 96, 122, 123, 126, 129, 134, 139, 144, 145, 149, 154, 159, 161, 166, 167, 169, 170, 171, 175, 180, 285, 291, 299, 311, 312, 313, 314, 315, 317, 318, 336, 337, 338, 339, 340, 342, 343, 344, 354, 362, 363, 402, 413, 416, 430, 431], "com.google.gson.JsonObjectTest::testAddingAndRemovingObjectProperties": [60, 72, 82, 83, 87, 94, 96, 111, 112, 122, 123, 126, 129, 134, 139, 140, 154, 155, 161, 166, 167, 180, 186, 223, 224, 226, 261, 264, 268, 277, 278, 279, 281, 285, 291, 299], "com.google.gson.JsonObjectTest::testAddingStringProperties": [60, 72, 82, 83, 87, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.JsonObjectTest::testAddingNullPropertyValue": [60, 72, 82, 83, 87, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName": [60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.JsonObjectTest::testAddingCharacterProperties": [60, 72, 82, 83, 87, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.JsonObjectTest::testAddingNullOrEmptyPropertyName": [91, 92], "com.google.gson.JsonObjectTest::testAddingBooleanProperties": [60, 72, 82, 83, 87, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 180, 186], "com.google.gson.JsonObjectTest::testDeepCopy": [52, 60, 72, 82, 83, 94, 96, 122, 123, 126, 129, 134, 139, 140, 154, 159, 161, 166, 167, 180, 186, 430, 431], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [60, 72, 87, 94, 122, 123, 126, 129, 134, 139, 140, 154, 161, 166, 167, 186], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [48, 60, 430, 431], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [48, 60, 430, 431]}, "com.google.gson.internal.bind.TypeAdapters": {"com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [779, 792], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [779, 792], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [779, 792], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [779, 792], "com.google.gson.functional.UncategorizedTest::testInvalidJsonDeserializationFails": [779, 792], "com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization": [779, 792], "com.google.gson.functional.TypeVariableTest::testBasicTypeVariables": [779, 792], "com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables": [779, 792], "com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter": [779, 792], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [779, 792], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical": [779, 826], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [826], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [779, 792], "com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause": [779, 792], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause": [779, 792], "com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause": [779, 792], "com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause": [779, 792], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [779, 792], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [779, 792], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [779, 792], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [779, 792], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [779, 792], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [779, 792], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [779, 792], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [779, 792], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [779, 792], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [779, 792], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [779, 792], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [779, 792], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [779, 792], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [779, 792], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [779, 792], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [779, 792], "com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString": [779, 792], "com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly": [779, 792], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [779, 792], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [779, 792], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [779, 792], "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed": [779, 792], "com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization": [779, 792], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [779, 792], "com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization": [779, 792], "com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField": [779, 792], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [779, 792], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization": [779, 792], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization": [779, 792], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [779, 792], "com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization": [779, 792], "com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization": [779, 792], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization": [779, 792], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization": [779, 792], "com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization": [779, 792], "com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization": [779, 792], "com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization": [779, 792], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization": [779, 792], "com.google.gson.functional.ObjectTest::testNullArraysDeserialization": [779, 792], "com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored": [779, 792], "com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization": [779, 792], "com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization": [779, 792], "com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization": [779, 792], "com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization": [779, 792], "com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization": [779, 792], "com.google.gson.functional.ObjectTest::testNestedDeserialization": [779, 792], "com.google.gson.functional.ObjectTest::testNullFieldsDeserialization": [779, 792], "com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization": [779, 792], "com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization": [779, 792], "com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization": [779, 792], "com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization": [779, 792], "com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization": [779, 792], "com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization": [779, 792], "com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization": [779, 792], "com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization": [779, 792], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [779, 792], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [779, 792], "com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull": [779, 792], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [779, 792], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization": [779, 792], "com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy": [779, 792], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [779, 792], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [779, 792], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [779, 792], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [779, 792], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [779, 792], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [779, 792], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields": [779, 792], "com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields": [779, 792], "com.google.gson.functional.MapTest::testMapDeserialization": [779, 792], "com.google.gson.functional.MapTest::testMapDeserializationWithNullValue": [779, 792], "com.google.gson.functional.MapTest::testMapOfMapDeserialization": [779, 792], "com.google.gson.functional.MapTest::testHashMapDeserialization": [779, 792], "com.google.gson.functional.MapTest::testSortedMap": [779, 792], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [779, 792], "com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues": [779, 792], "com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization": [779, 792], "com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey": [779, 792], "com.google.gson.functional.MapTest::testMapDeserializationWithNullKey": [779, 792], "com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys": [779, 792], "com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys": [779, 792], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [779, 792], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [779, 792], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [779, 792], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [779, 792], "com.google.gson.functional.JsonTreeTest::testJsonTreeNull": [779, 792], "com.google.gson.functional.JsonTreeTest::testToJsonTree": [779, 792], "com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType": [779, 792], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree": [779, 792], "com.google.gson.functional.JsonParserTest::testDeserializingCustomTree": [779, 792], "com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing": [779, 792], "com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree": [779, 792], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault": [779, 792], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [779, 792], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation": [779, 792], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault": [779, 792], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields": [779, 792], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [779, 792], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [779, 792], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [779, 792], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [779, 792], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [779, 792], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType": [779, 792], "com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization": [779, 792], "com.google.gson.functional.InheritanceTest::testSubClassDeserialization": [779, 792], "com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization": [779, 792], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType": [779, 792], "com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub": [779, 792], "com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization": [779, 792], "com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization": [779, 792], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [779, 792], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [779, 792], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [779, 792], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [779, 792], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [779, 792], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [792], "com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization": [779, 792], "com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray": [779, 792], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [779, 792], "com.google.gson.functional.EscapingTest::testEscapingObjectFields": [779, 792], "com.google.gson.functional.EnumTest::testEnumSet": [779, 792], "com.google.gson.functional.EnumTest::testEnumCaseMapping": [779, 792], "com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization": [779, 792], "com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization": [779, 792], "com.google.gson.functional.EnumTest::testEnumSubclass": [779, 792], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [779, 792], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [779, 792], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [779, 792], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonObjectDeserialization": [779], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch": [779], "com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization": [779, 792], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization": [779, 792], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization": [779, 792], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonNullDeserialization": [779], "com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization": [779, 792], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigIntegerTypeAdapter": [779], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonArrayDeserialization": [779], "com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization": [779, 792], "com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization": [779, 792], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [779, 792], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigDecimalTypeAdapter": [779], "com.google.gson.functional.DefaultTypeAdaptersTest::testJsonPrimitiveDeserialization": [779], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization": [779, 792], "com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization": [779, 792], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [779, 792], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [779, 792], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [779, 792], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [779, 792], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [779, 792], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [779, 792], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [779, 792], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [779, 792], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [779, 792], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [779, 792], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [779, 792], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [779, 792], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [779, 792], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [779, 792], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [779, 792], "com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed": [779, 792], "com.google.gson.functional.CollectionTest::testLinkedListDeserialization": [779, 792], "com.google.gson.functional.CollectionTest::testSetDeserialization": [779, 792], "com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization": [779, 792], "com.google.gson.functional.CollectionTest::testFieldIsArrayList": [779, 792], "com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed": [779, 792], "com.google.gson.functional.CollectionTest::testWildcardCollectionField": [779, 792], "com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization": [779, 792], "com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization": [779, 792], "com.google.gson.functional.CollectionTest::testNullsInListDeserialization": [779, 792], "com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization": [779, 792], "com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization": [779, 792], "com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization": [779, 792], "com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization": [779, 792], "com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization": [779, 792], "com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization": [779, 792], "com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization": [779, 792], "com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization": [779, 792], "com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization": [779, 792], "com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization": [779, 792], "com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization": [779, 792], "com.google.gson.MixedStreamTest::testReadMixedStreamed": [779, 792], "com.google.gson.JsonParserTest::testReadWriteTwoObjects": [779, 792], "com.google.gson.JavaSerializationTest::testNumberIsSerializable": [779, 792], "com.google.gson.JavaSerializationTest::testListIsSerializable": [779, 792], "com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization": [779, 792], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapSerialization": [779, 792], "com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization": [779, 792], "com.google.gson.DefaultInetAddressTypeAdapterTest::testInetAddressSerializationAndDeserialization": [779, 792]}, "com.google.gson.stream.JsonWriter": {"com.google.gson.internal.bind.JsonTreeWriterTest::testStrictBoxedNansAndInfinities": [235, 242], "com.google.gson.internal.bind.JsonTreeWriterTest::testStrictNansAndInfinities": [235, 242], "com.google.gson.functional.PrimitiveTest::testSmallValueForBigDecimalSerialization": [508, 513], "com.google.gson.MixedStreamTest::testWriteClosed": [308, 325, 366, 367, 546, 617], "com.google.gson.MixedStreamTest::testWriteInvalidState": [167, 168, 170, 308, 325, 326, 359, 369, 617, 648], "com.google.gson.MixedStreamTest::testWriteDoesNotMutateState": [235, 242, 253, 261]}, "com.google.gson.internal.bind.TimeTypeAdapter": {"com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimeDeserialization": [40, 51, 57]}, "com.google.gson.JsonStreamParser": {"com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects": [69, 70, 82, 87, 105], "com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings": [69, 70, 82, 87, 105], "com.google.gson.JsonStreamParserTest::testNoSideEffectForHasNext": [61, 69, 70, 87, 105], "com.google.gson.JsonStreamParserTest::testIterator": [61, 69, 70, 87, 105], "com.google.gson.JsonStreamParserTest::testParseTwoStrings": [61, 69, 70, 82, 87, 105], "com.google.gson.JsonStreamParserTest::testCallingNextBeyondAvailableInput": [61, 69, 70, 82, 83, 87, 105]}, "com.google.gson.GsonBuilder": {"com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization": [69, 72, 74, 76, 104, 105, 539, 540, 542, 545], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization": [69, 72, 74, 76, 104, 105, 539, 540, 542, 545], "com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesSerialization": [545], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassSerialization": [545], "com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization": [69, 72, 74, 76, 104, 105, 539, 540, 542, 545], "com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization": [69, 72, 74, 76, 104, 105, 539, 540, 542, 545], "com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassDeserialization": [69, 74, 76, 104, 105, 539, 540, 542, 545], "com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization": [74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy": [69, 72, 74, 76, 351, 497, 498, 504, 539, 540, 542, 545], "com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst": [74, 76, 497, 498, 504, 539, 540, 542, 545], "com.google.gson.functional.TypeAdapterPrecedenceTest::testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter": [545], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming": [74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical": [74, 76, 497, 498, 501, 502, 504, 539, 540, 542, 545], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming": [74, 76, 455, 456, 457, 462, 501, 502, 504, 539, 540, 542, 545], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByStreaming": [545], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreamingHierarchical": [545], "com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming": [74, 76, 455, 456, 457, 462, 497, 498, 504, 539, 540, 542, 545], "com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming": [74, 76, 455, 456, 457, 459, 460, 462, 539, 540, 542, 545], "com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId": [69, 72, 74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject": [74, 76, 539, 540, 542, 545], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize": [74, 76, 539, 540, 542, 545], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize": [69, 72, 74, 76, 539, 540, 542, 545], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField": [69, 72, 74, 76, 539, 540, 542, 545], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray": [69, 72, 74, 76, 539, 540, 542, 545], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject": [69, 72, 74, 76, 539, 540, 542, 545], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField": [74, 76, 539, 540, 542, 545], "com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree": [69, 72, 74, 76, 539, 540, 542, 545], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap": [69, 72, 74, 76, 539, 540, 542, 545], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter": [74, 76, 459, 460, 462, 539, 540, 542, 545], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray": [69, 72, 74, 76, 539, 540, 542, 545], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive": [69, 72, 74, 76, 539, 540, 542, 545], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray": [69, 72, 74, 76, 539, 540, 542, 545], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap": [69, 72, 74, 76, 539, 540, 542, 545], "com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray": [69, 72, 74, 76, 539, 540, 542, 545], "com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter": [69, 72, 74, 76, 459, 460, 462, 539, 540, 542, 545], "com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization": [69, 72, 74, 76, 539, 540, 542, 545], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization": [69, 72, 74, 76, 135, 539, 540, 542, 545], "com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization": [69, 72, 74, 76, 539, 540, 542, 545], "com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatSerialization": [545], "com.google.gson.functional.PrimitiveTest::testFloatInfinitySerialization": [545], "com.google.gson.functional.PrimitiveTest::testDoubleNaNSerialization": [545], "com.google.gson.functional.PrimitiveTest::testFloatNaNSerialization": [545], "com.google.gson.functional.PrimitiveTest::testDoubleInfinitySerialization": [545], "com.google.gson.functional.PrimitiveTest::testNegativeInfinitySerialization": [545], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization": [69, 72, 74, 76, 452, 453, 462, 539, 540, 542, 545], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization": [69, 72, 74, 76, 452, 453, 462, 539, 540, 542, 545], "com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer": [74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.ObjectTest::testAnonymousLocalClassesCustomSerialization": [545], "com.google.gson.functional.ObjectTest::testInnerClassDeserialization": [69, 74, 76, 462, 539, 540, 542, 545], "com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls": [69, 72, 74, 76, 158, 539, 540, 542, 545], "com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization": [69, 72, 74, 76, 158, 539, 540, 542, 545], "com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization": [74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicySerialization": [545], "com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization": [69, 72, 74, 76, 539, 540, 542, 545], "com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation": [69, 72, 74, 76, 276, 539, 540, 542, 545], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation": [69, 72, 74, 76, 276, 539, 540, 542, 545], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicySerialiation": [545], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicySerialization": [545], "com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization": [69, 72, 74, 76, 539, 540, 542, 545], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation": [69, 72, 74, 76, 276, 539, 540, 542, 545], "com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation": [69, 72, 74, 76, 276, 539, 540, 542, 545], "com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicySerialization": [545], "com.google.gson.functional.MapTest::testCustomSerializerForSpecificMapType": [545], "com.google.gson.functional.MapTest::testMapSubclassDeserialization": [74, 76, 462, 539, 540, 542, 545], "com.google.gson.functional.MapTest::testSerializeMaps": [158, 351, 545], "com.google.gson.functional.MapTest::testGeneralMapField": [545], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect": [69, 72, 74, 76, 238, 239, 539, 540, 542, 545], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize": [74, 76, 239, 539, 540, 542, 545], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization": [69, 72, 74, 76, 239, 539, 540, 542, 545], "com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter": [69, 72, 74, 76, 238, 239, 539, 540, 542, 545], "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter": [69, 72, 74, 76, 459, 460, 462, 539, 540, 542, 545], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter": [74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter": [72, 74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField": [69, 72, 74, 76, 452, 453, 462, 539, 540, 542, 545], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType": [72, 74, 76, 452, 453, 462, 539, 540, 542, 545], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType": [69, 74, 76, 462, 539, 540, 542, 545], "com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject": [69, 74, 76, 462, 539, 540, 542, 545], "com.google.gson.functional.FieldNamingTest::testUpperCamelCase": [545], "com.google.gson.functional.FieldNamingTest::testLowerCaseWithUnderscores": [545], "com.google.gson.functional.FieldNamingTest::testIdentity": [545], "com.google.gson.functional.FieldNamingTest::testLowerCaseWithDashes": [545], "com.google.gson.functional.FieldNamingTest::testUpperCamelCaseWithSpaces": [545], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization": [69, 72, 74, 76, 145, 146, 452, 453, 462, 539, 540, 542, 545], "com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization": [69, 72, 74, 76, 145, 146, 452, 453, 462, 539, 540, 542, 545], "com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationSerialization": [545], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode": [69, 72, 74, 76, 158, 339, 539, 540, 542, 545], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization": [69, 72, 74, 76, 158, 339, 539, 540, 542, 545], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization": [69, 72, 74, 76, 158, 322, 539, 540, 542, 545], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization": [69, 72, 74, 76, 322, 323, 539, 540, 542, 545], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerialization": [545], "com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserialization": [69, 74, 76, 339, 340, 539, 540, 542, 545], "com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization": [69, 72, 74, 76, 363, 539, 540, 542, 545], "com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter": [72, 74, 76, 497, 498, 504, 539, 540, 542, 545], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings": [74, 76, 474, 475, 539, 540, 542, 545], "com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked": [69, 72, 74, 76, 474, 475, 539, 540, 542, 545], "com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization": [74, 76, 384, 385, 539, 540, 542, 543, 545, 554, 555, 562, 563, 564], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigIntegerTypeAdapter": [74, 76, 459, 460, 462, 539, 540, 542, 545], "com.google.gson.functional.DefaultTypeAdaptersTest::testClassDeserialization": [545], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection": [74, 76, 384, 385, 539, 540, 542, 543, 545, 554, 555, 562, 563, 564], "com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigDecimalTypeAdapter": [74, 76, 459, 460, 462, 539, 540, 542, 545], "com.google.gson.functional.DefaultTypeAdaptersTest::testClassSerialization": [545], "com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern": [74, 76, 384, 385, 405, 539, 540, 542, 543, 545, 554, 555, 562, 563, 564], "com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization": [74, 76, 384, 385, 539, 540, 542, 543, 545, 554, 555, 562, 563, 564], "com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder": [74, 76, 539, 540, 542, 545], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives": [74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator": [74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomSerializerInvokedForPrimitives": [545], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedSerializers": [545], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization": [74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues": [69, 72, 74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers": [69, 72, 74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomSerializers": [545], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers": [74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate": [74, 76, 497, 498, 504, 539, 540, 542, 545], "com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization": [74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [69, 72, 74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances": [69, 72, 74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances": [69, 72, 74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull": [74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields": [69, 72, 74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField": [69, 72, 74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements": [74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField": [69, 72, 74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization": [69, 72, 74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject": [69, 72, 74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull": [69, 72, 74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject": [74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.functional.CollectionTest::testUserCollectionTypeAdapter": [545], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverridePrimitiveBooleanAdapter": [545], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideWrapperBooleanAdapter": [545], "com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideStringAdapter": [545], "com.google.gson.ObjectTypeAdapterTest::testSerializeObject": [74, 76, 539, 540, 542, 545], "com.google.gson.ObjectTypeAdapterTest::testDeserializeNullValue": [74, 76, 539, 540, 542, 545], "com.google.gson.ObjectTypeAdapterTest::testSerializeNullValue": [74, 76, 539, 540, 542, 545], "com.google.gson.ObjectTypeAdapterTest::testDeserialize": [74, 76, 539, 540, 542, 545], "com.google.gson.ObjectTypeAdapterTest::testSerialize": [74, 76, 539, 540, 542, 545], "com.google.gson.LongSerializationPolicyTest::testStringLongSerializationIntegration": [545], "com.google.gson.LongSerializationPolicyTest::testDefaultLongSerializationIntegration": [545], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes": [74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException": [74, 76, 455, 456, 457, 462, 539, 540, 542, 545], "com.google.gson.GsonBuilderTest::testTransientFieldExclusion": [545], "com.google.gson.GsonBuilderTest::testExcludeFieldsWithModifiers": [545]}}